// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: SignalService.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace libsignalservice.push {

  /// <summary>Holder for reflection information generated from SignalService.proto</summary>
  public static partial class SignalServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for SignalService.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SignalServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNTaWduYWxTZXJ2aWNlLnByb3RvEgp0ZXh0c2VjdXJlIoYDCghFbnZlbG9w",
            "ZRIpCgR0eXBlGAEgASgOMhkudGV4dHNlY3VyZS5FbnZlbG9wZS5UeXBlSAAS",
            "EAoGc291cmNlGAIgASgJSAESFgoMc291cmNlRGV2aWNlGAcgASgNSAISDwoF",
            "cmVsYXkYAyABKAlIAxITCgl0aW1lc3RhbXAYBSABKARIBBIXCg1sZWdhY3lN",
            "ZXNzYWdlGAYgASgMSAUSEQoHY29udGVudBgIIAEoDEgGIlUKBFR5cGUSCwoH",
            "VU5LTk9XThAAEg4KCkNJUEhFUlRFWFQQARIQCgxLRVlfRVhDSEFOR0UQAhIR",
            "Cg1QUkVLRVlfQlVORExFEAMSCwoHUkVDRUlQVBAFQgwKCnR5cGVfb25lb2ZC",
            "DgoMc291cmNlX29uZW9mQhQKEnNvdXJjZURldmljZV9vbmVvZkINCgtyZWxh",
            "eV9vbmVvZkIRCg90aW1lc3RhbXBfb25lb2ZCFQoTbGVnYWN5TWVzc2FnZV9v",
            "bmVvZkIPCg1jb250ZW50X29uZW9mIusCCgdDb250ZW50Ei4KC2RhdGFNZXNz",
            "YWdlGAEgASgLMhcudGV4dHNlY3VyZS5EYXRhTWVzc2FnZUgAEi4KC3N5bmNN",
            "ZXNzYWdlGAIgASgLMhcudGV4dHNlY3VyZS5TeW5jTWVzc2FnZUgBEi4KC2Nh",
            "bGxNZXNzYWdlGAMgASgLMhcudGV4dHNlY3VyZS5DYWxsTWVzc2FnZUgCEi4K",
            "C251bGxNZXNzYWdlGAQgASgLMhcudGV4dHNlY3VyZS5OdWxsTWVzc2FnZUgD",
            "EjQKDnJlY2VpcHRNZXNzYWdlGAUgASgLMhoudGV4dHNlY3VyZS5SZWNlaXB0",
            "TWVzc2FnZUgEQhMKEWRhdGFNZXNzYWdlX29uZW9mQhMKEXN5bmNNZXNzYWdl",
            "X29uZW9mQhMKEWNhbGxNZXNzYWdlX29uZW9mQhMKEW51bGxNZXNzYWdlX29u",
            "ZW9mQhYKFHJlY2VpcHRNZXNzYWdlX29uZW9mIr0FCgtDYWxsTWVzc2FnZRIu",
            "CgVvZmZlchgBIAEoCzIdLnRleHRzZWN1cmUuQ2FsbE1lc3NhZ2UuT2ZmZXJI",
            "ABIwCgZhbnN3ZXIYAiABKAsyHi50ZXh0c2VjdXJlLkNhbGxNZXNzYWdlLkFu",
            "c3dlckgBEjQKCWljZVVwZGF0ZRgDIAMoCzIhLnRleHRzZWN1cmUuQ2FsbE1l",
            "c3NhZ2UuSWNlVXBkYXRlEjAKBmhhbmd1cBgEIAEoCzIeLnRleHRzZWN1cmUu",
            "Q2FsbE1lc3NhZ2UuSGFuZ3VwSAISLAoEYnVzeRgFIAEoCzIcLnRleHRzZWN1",
            "cmUuQ2FsbE1lc3NhZ2UuQnVzeUgDGk0KBU9mZmVyEgwKAmlkGAEgASgESAAS",
            "FQoLZGVzY3JpcHRpb24YAiABKAlIAUIKCghpZF9vbmVvZkITChFkZXNjcmlw",
            "dGlvbl9vbmVvZhpOCgZBbnN3ZXISDAoCaWQYASABKARIABIVCgtkZXNjcmlw",
            "dGlvbhgCIAEoCUgBQgoKCGlkX29uZW9mQhMKEWRlc2NyaXB0aW9uX29uZW9m",
            "GpMBCglJY2VVcGRhdGUSDAoCaWQYASABKARIABIQCgZzZHBNaWQYAiABKAlI",
            "ARIXCg1zZHBNTGluZUluZGV4GAMgASgNSAISDQoDc2RwGAQgASgJSANCCgoI",
            "aWRfb25lb2ZCDgoMc2RwTWlkX29uZW9mQhUKE3NkcE1MaW5lSW5kZXhfb25l",
            "b2ZCCwoJc2RwX29uZW9mGiAKBEJ1c3kSDAoCaWQYASABKARIAEIKCghpZF9v",
            "bmVvZhoiCgZIYW5ndXASDAoCaWQYASABKARIAEIKCghpZF9vbmVvZkINCgtv",
            "ZmZlcl9vbmVvZkIOCgxhbnN3ZXJfb25lb2ZCDgoMaGFuZ3VwX29uZW9mQgwK",
            "CmJ1c3lfb25lb2YisgYKC0RhdGFNZXNzYWdlEg4KBGJvZHkYASABKAlIABIy",
            "CgthdHRhY2htZW50cxgCIAMoCzIdLnRleHRzZWN1cmUuQXR0YWNobWVudFBv",
            "aW50ZXISKQoFZ3JvdXAYAyABKAsyGC50ZXh0c2VjdXJlLkdyb3VwQ29udGV4",
            "dEgBEg8KBWZsYWdzGAQgASgNSAISFQoLZXhwaXJlVGltZXIYBSABKA1IAxIU",
            "Cgpwcm9maWxlS2V5GAYgASgMSAQSEwoJdGltZXN0YW1wGAcgASgESAUSLgoF",
            "cXVvdGUYCCABKAsyHS50ZXh0c2VjdXJlLkRhdGFNZXNzYWdlLlF1b3RlSAYa",
            "1AIKBVF1b3RlEgwKAmlkGAEgASgESAASEAoGYXV0aG9yGAIgASgJSAESDgoE",
            "dGV4dBgDIAEoCUgCEkMKC2F0dGFjaG1lbnRzGAQgAygLMi4udGV4dHNlY3Vy",
            "ZS5EYXRhTWVzc2FnZS5RdW90ZS5RdW90ZWRBdHRhY2htZW50GqsBChBRdW90",
            "ZWRBdHRhY2htZW50EhUKC2NvbnRlbnRUeXBlGAEgASgJSAASEgoIZmlsZU5h",
            "bWUYAiABKAlIARIyCgl0aHVtYm5haWwYAyABKAsyHS50ZXh0c2VjdXJlLkF0",
            "dGFjaG1lbnRQb2ludGVySAJCEwoRY29udGVudFR5cGVfb25lb2ZCEAoOZmls",
            "ZU5hbWVfb25lb2ZCEQoPdGh1bWJuYWlsX29uZW9mQgoKCGlkX29uZW9mQg4K",
            "DGF1dGhvcl9vbmVvZkIMCgp0ZXh0X29uZW9mImMKBUZsYWdzEhQKEFpFUk9f",
            "UExBQ0VIT0xERVIQABIPCgtFTkRfU0VTU0lPThABEhsKF0VYUElSQVRJT05f",
            "VElNRVJfVVBEQVRFEAISFgoSUFJPRklMRV9LRVlfVVBEQVRFEARCDAoKYm9k",
            "eV9vbmVvZkINCgtncm91cF9vbmVvZkINCgtmbGFnc19vbmVvZkITChFleHBp",
            "cmVUaW1lcl9vbmVvZkISChBwcm9maWxlS2V5X29uZW9mQhEKD3RpbWVzdGFt",
            "cF9vbmVvZkINCgtxdW90ZV9vbmVvZiIxCgtOdWxsTWVzc2FnZRIRCgdwYWRk",
            "aW5nGAEgASgMSABCDwoNcGFkZGluZ19vbmVvZiKCAQoOUmVjZWlwdE1lc3Nh",
            "Z2USLwoEdHlwZRgBIAEoDjIfLnRleHRzZWN1cmUuUmVjZWlwdE1lc3NhZ2Uu",
            "VHlwZUgAEhEKCXRpbWVzdGFtcBgCIAMoBCIeCgRUeXBlEgwKCERFTElWRVJZ",
            "EAASCAoEUkVBRBABQgwKCnR5cGVfb25lb2Yi/gEKCFZlcmlmaWVkEhUKC2Rl",
            "c3RpbmF0aW9uGAEgASgJSAASFQoLaWRlbnRpdHlLZXkYAiABKAxIARIrCgVz",
            "dGF0ZRgDIAEoDjIaLnRleHRzZWN1cmUuVmVyaWZpZWQuU3RhdGVIAhIVCgtu",
            "dWxsTWVzc2FnZRgEIAEoDEgDIjIKBVN0YXRlEgsKB0RFRkFVTFQQABIMCghW",
            "RVJJRklFRBABEg4KClVOVkVSSUZJRUQQAkITChFkZXN0aW5hdGlvbl9vbmVv",
            "ZkITChFpZGVudGl0eUtleV9vbmVvZkINCgtzdGF0ZV9vbmVvZkITChFudWxs",
            "TWVzc2FnZV9vbmVvZiKiCgoLU3luY01lc3NhZ2USLAoEc2VudBgBIAEoCzIc",
            "LnRleHRzZWN1cmUuU3luY01lc3NhZ2UuU2VudEgAEjQKCGNvbnRhY3RzGAIg",
            "ASgLMiAudGV4dHNlY3VyZS5TeW5jTWVzc2FnZS5Db250YWN0c0gBEjAKBmdy",
            "b3VwcxgDIAEoCzIeLnRleHRzZWN1cmUuU3luY01lc3NhZ2UuR3JvdXBzSAIS",
            "MgoHcmVxdWVzdBgEIAEoCzIfLnRleHRzZWN1cmUuU3luY01lc3NhZ2UuUmVx",
            "dWVzdEgDEioKBHJlYWQYBSADKAsyHC50ZXh0c2VjdXJlLlN5bmNNZXNzYWdl",
            "LlJlYWQSMgoHYmxvY2tlZBgGIAEoCzIfLnRleHRzZWN1cmUuU3luY01lc3Nh",
            "Z2UuQmxvY2tlZEgEEigKCHZlcmlmaWVkGAcgASgLMhQudGV4dHNlY3VyZS5W",
            "ZXJpZmllZEgFEj4KDWNvbmZpZ3VyYXRpb24YCSABKAsyJS50ZXh0c2VjdXJl",
            "LlN5bmNNZXNzYWdlLkNvbmZpZ3VyYXRpb25IBhIRCgdwYWRkaW5nGAggASgM",
            "SAca3QEKBFNlbnQSFQoLZGVzdGluYXRpb24YASABKAlIABITCgl0aW1lc3Rh",
            "bXAYAiABKARIARIqCgdtZXNzYWdlGAMgASgLMhcudGV4dHNlY3VyZS5EYXRh",
            "TWVzc2FnZUgCEiIKGGV4cGlyYXRpb25TdGFydFRpbWVzdGFtcBgEIAEoBEgD",
            "QhMKEWRlc3RpbmF0aW9uX29uZW9mQhEKD3RpbWVzdGFtcF9vbmVvZkIPCg1t",
            "ZXNzYWdlX29uZW9mQiAKHmV4cGlyYXRpb25TdGFydFRpbWVzdGFtcF9vbmVv",
            "ZhptCghDb250YWN0cxItCgRibG9iGAEgASgLMh0udGV4dHNlY3VyZS5BdHRh",
            "Y2htZW50UG9pbnRlckgAEhIKCGNvbXBsZXRlGAIgASgISAFCDAoKYmxvYl9v",
            "bmVvZkIQCg5jb21wbGV0ZV9vbmVvZhpFCgZHcm91cHMSLQoEYmxvYhgBIAEo",
            "CzIdLnRleHRzZWN1cmUuQXR0YWNobWVudFBvaW50ZXJIAEIMCgpibG9iX29u",
            "ZW9mGhoKB0Jsb2NrZWQSDwoHbnVtYmVycxgBIAMoCRqcAQoHUmVxdWVzdBI0",
            "CgR0eXBlGAEgASgOMiQudGV4dHNlY3VyZS5TeW5jTWVzc2FnZS5SZXF1ZXN0",
            "LlR5cGVIACJNCgRUeXBlEgsKB1VOS05PV04QABIMCghDT05UQUNUUxABEgoK",
            "BkdST1VQUxACEgsKB0JMT0NLRUQQAxIRCg1DT05GSUdVUkFUSU9OEARCDAoK",
            "dHlwZV9vbmVvZhpQCgRSZWFkEhAKBnNlbmRlchgBIAEoCUgAEhMKCXRpbWVz",
            "dGFtcBgCIAEoBEgBQg4KDHNlbmRlcl9vbmVvZkIRCg90aW1lc3RhbXBfb25l",
            "b2YaPQoNQ29uZmlndXJhdGlvbhIWCgxyZWFkUmVjZWlwdHMYASABKAhIAEIU",
            "ChJyZWFkUmVjZWlwdHNfb25lb2ZCDAoKc2VudF9vbmVvZkIQCg5jb250YWN0",
            "c19vbmVvZkIOCgxncm91cHNfb25lb2ZCDwoNcmVxdWVzdF9vbmVvZkIPCg1i",
            "bG9ja2VkX29uZW9mQhAKDnZlcmlmaWVkX29uZW9mQhUKE2NvbmZpZ3VyYXRp",
            "b25fb25lb2ZCDwoNcGFkZGluZ19vbmVvZiKXAwoRQXR0YWNobWVudFBvaW50",
            "ZXISDAoCaWQYASABKAZIABIVCgtjb250ZW50VHlwZRgCIAEoCUgBEg0KA2tl",
            "eRgDIAEoDEgCEg4KBHNpemUYBCABKA1IAxITCgl0aHVtYm5haWwYBSABKAxI",
            "BBIQCgZkaWdlc3QYBiABKAxIBRISCghmaWxlTmFtZRgHIAEoCUgGEg8KBWZs",
            "YWdzGAggASgNSAcSDwoFd2lkdGgYCSABKA1ICBIQCgZoZWlnaHQYCiABKA1I",
            "CSIwCgVGbGFncxIUChBaRVJPX1BMQUNFSE9MREVSEAASEQoNVk9JQ0VfTUVT",
            "U0FHRRABQgoKCGlkX29uZW9mQhMKEWNvbnRlbnRUeXBlX29uZW9mQgsKCWtl",
            "eV9vbmVvZkIMCgpzaXplX29uZW9mQhEKD3RodW1ibmFpbF9vbmVvZkIOCgxk",
            "aWdlc3Rfb25lb2ZCEAoOZmlsZU5hbWVfb25lb2ZCDQoLZmxhZ3Nfb25lb2ZC",
            "DQoLd2lkdGhfb25lb2ZCDgoMaGVpZ2h0X29uZW9mIp8CCgxHcm91cENvbnRl",
            "eHQSDAoCaWQYASABKAxIABItCgR0eXBlGAIgASgOMh0udGV4dHNlY3VyZS5H",
            "cm91cENvbnRleHQuVHlwZUgBEg4KBG5hbWUYAyABKAlIAhIPCgdtZW1iZXJz",
            "GAQgAygJEi8KBmF2YXRhchgFIAEoCzIdLnRleHRzZWN1cmUuQXR0YWNobWVu",
            "dFBvaW50ZXJIAyJICgRUeXBlEgsKB1VOS05PV04QABIKCgZVUERBVEUQARIL",
            "CgdERUxJVkVSEAISCAoEUVVJVBADEhAKDFJFUVVFU1RfSU5GTxAEQgoKCGlk",
            "X29uZW9mQgwKCnR5cGVfb25lb2ZCDAoKbmFtZV9vbmVvZkIOCgxhdmF0YXJf",
            "b25lb2YiwwMKDkNvbnRhY3REZXRhaWxzEhAKBm51bWJlchgBIAEoCUgAEg4K",
            "BG5hbWUYAiABKAlIARIzCgZhdmF0YXIYAyABKAsyIS50ZXh0c2VjdXJlLkNv",
            "bnRhY3REZXRhaWxzLkF2YXRhckgCEg8KBWNvbG9yGAQgASgJSAMSKAoIdmVy",
            "aWZpZWQYBSABKAsyFC50ZXh0c2VjdXJlLlZlcmlmaWVkSAQSFAoKcHJvZmls",
            "ZUtleRgGIAEoDEgFEhEKB2Jsb2NrZWQYByABKAhIBhIVCgtleHBpcmVUaW1l",
            "chgIIAEoDUgHGlYKBkF2YXRhchIVCgtjb250ZW50VHlwZRgBIAEoCUgAEhAK",
            "Bmxlbmd0aBgCIAEoDUgBQhMKEWNvbnRlbnRUeXBlX29uZW9mQg4KDGxlbmd0",
            "aF9vbmVvZkIOCgxudW1iZXJfb25lb2ZCDAoKbmFtZV9vbmVvZkIOCgxhdmF0",
            "YXJfb25lb2ZCDQoLY29sb3Jfb25lb2ZCEAoOdmVyaWZpZWRfb25lb2ZCEgoQ",
            "cHJvZmlsZUtleV9vbmVvZkIPCg1ibG9ja2VkX29uZW9mQhMKEWV4cGlyZVRp",
            "bWVyX29uZW9mIsACCgxHcm91cERldGFpbHMSDAoCaWQYASABKAxIABIOCgRu",
            "YW1lGAIgASgJSAESDwoHbWVtYmVycxgDIAMoCRIxCgZhdmF0YXIYBCABKAsy",
            "Hy50ZXh0c2VjdXJlLkdyb3VwRGV0YWlscy5BdmF0YXJIAhIQCgZhY3RpdmUY",
            "BSABKAhIAxIVCgtleHBpcmVUaW1lchgGIAEoDUgEGlYKBkF2YXRhchIVCgtj",
            "b250ZW50VHlwZRgBIAEoCUgAEhAKBmxlbmd0aBgCIAEoDUgBQhMKEWNvbnRl",
            "bnRUeXBlX29uZW9mQg4KDGxlbmd0aF9vbmVvZkIKCghpZF9vbmVvZkIMCgpu",
            "YW1lX29uZW9mQg4KDGF2YXRhcl9vbmVvZkIOCgxhY3RpdmVfb25lb2ZCEwoR",
            "ZXhwaXJlVGltZXJfb25lb2ZCWgorb3JnLndoaXNwZXJzeXN0ZW1zLnRleHRz",
            "ZWN1cmUuaW50ZXJuYWwucHVzaEITU2lnbmFsU2VydmljZVByb3Rvc6oCFWxp",
            "YnNpZ25hbHNlcnZpY2UucHVzaGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::libsignalservice.push.Envelope), global::libsignalservice.push.Envelope.Parser, new[]{ "Type", "Source", "SourceDevice", "Relay", "Timestamp", "LegacyMessage", "Content" }, new[]{ "TypeOneof", "SourceOneof", "SourceDeviceOneof", "RelayOneof", "TimestampOneof", "LegacyMessageOneof", "ContentOneof" }, new[]{ typeof(global::libsignalservice.push.Envelope.Types.Type) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::libsignalservice.push.Content), global::libsignalservice.push.Content.Parser, new[]{ "DataMessage", "SyncMessage", "CallMessage", "NullMessage", "ReceiptMessage" }, new[]{ "DataMessageOneof", "SyncMessageOneof", "CallMessageOneof", "NullMessageOneof", "ReceiptMessageOneof" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::libsignalservice.push.CallMessage), global::libsignalservice.push.CallMessage.Parser, new[]{ "Offer", "Answer", "IceUpdate", "Hangup", "Busy" }, new[]{ "OfferOneof", "AnswerOneof", "HangupOneof", "BusyOneof" }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::libsignalservice.push.CallMessage.Types.Offer), global::libsignalservice.push.CallMessage.Types.Offer.Parser, new[]{ "Id", "Description" }, new[]{ "IdOneof", "DescriptionOneof" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::libsignalservice.push.CallMessage.Types.Answer), global::libsignalservice.push.CallMessage.Types.Answer.Parser, new[]{ "Id", "Description" }, new[]{ "IdOneof", "DescriptionOneof" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::libsignalservice.push.CallMessage.Types.IceUpdate), global::libsignalservice.push.CallMessage.Types.IceUpdate.Parser, new[]{ "Id", "SdpMid", "SdpMLineIndex", "Sdp" }, new[]{ "IdOneof", "SdpMidOneof", "SdpMLineIndexOneof", "SdpOneof" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::libsignalservice.push.CallMessage.Types.Busy), global::libsignalservice.push.CallMessage.Types.Busy.Parser, new[]{ "Id" }, new[]{ "IdOneof" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::libsignalservice.push.CallMessage.Types.Hangup), global::libsignalservice.push.CallMessage.Types.Hangup.Parser, new[]{ "Id" }, new[]{ "IdOneof" }, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::libsignalservice.push.DataMessage), global::libsignalservice.push.DataMessage.Parser, new[]{ "Body", "Attachments", "Group", "Flags", "ExpireTimer", "ProfileKey", "Timestamp", "Quote" }, new[]{ "BodyOneof", "GroupOneof", "FlagsOneof", "ExpireTimerOneof", "ProfileKeyOneof", "TimestampOneof", "QuoteOneof" }, new[]{ typeof(global::libsignalservice.push.DataMessage.Types.Flags) }, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::libsignalservice.push.DataMessage.Types.Quote), global::libsignalservice.push.DataMessage.Types.Quote.Parser, new[]{ "Id", "Author", "Text", "Attachments" }, new[]{ "IdOneof", "AuthorOneof", "TextOneof" }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::libsignalservice.push.DataMessage.Types.Quote.Types.QuotedAttachment), global::libsignalservice.push.DataMessage.Types.Quote.Types.QuotedAttachment.Parser, new[]{ "ContentType", "FileName", "Thumbnail" }, new[]{ "ContentTypeOneof", "FileNameOneof", "ThumbnailOneof" }, null, null)})}),
            new pbr::GeneratedClrTypeInfo(typeof(global::libsignalservice.push.NullMessage), global::libsignalservice.push.NullMessage.Parser, new[]{ "Padding" }, new[]{ "PaddingOneof" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::libsignalservice.push.ReceiptMessage), global::libsignalservice.push.ReceiptMessage.Parser, new[]{ "Type", "Timestamp" }, new[]{ "TypeOneof" }, new[]{ typeof(global::libsignalservice.push.ReceiptMessage.Types.Type) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::libsignalservice.push.Verified), global::libsignalservice.push.Verified.Parser, new[]{ "Destination", "IdentityKey", "State", "NullMessage" }, new[]{ "DestinationOneof", "IdentityKeyOneof", "StateOneof", "NullMessageOneof" }, new[]{ typeof(global::libsignalservice.push.Verified.Types.State) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::libsignalservice.push.SyncMessage), global::libsignalservice.push.SyncMessage.Parser, new[]{ "Sent", "Contacts", "Groups", "Request", "Read", "Blocked", "Verified", "Configuration", "Padding" }, new[]{ "SentOneof", "ContactsOneof", "GroupsOneof", "RequestOneof", "BlockedOneof", "VerifiedOneof", "ConfigurationOneof", "PaddingOneof" }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::libsignalservice.push.SyncMessage.Types.Sent), global::libsignalservice.push.SyncMessage.Types.Sent.Parser, new[]{ "Destination", "Timestamp", "Message", "ExpirationStartTimestamp" }, new[]{ "DestinationOneof", "TimestampOneof", "MessageOneof", "ExpirationStartTimestampOneof" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::libsignalservice.push.SyncMessage.Types.Contacts), global::libsignalservice.push.SyncMessage.Types.Contacts.Parser, new[]{ "Blob", "Complete" }, new[]{ "BlobOneof", "CompleteOneof" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::libsignalservice.push.SyncMessage.Types.Groups), global::libsignalservice.push.SyncMessage.Types.Groups.Parser, new[]{ "Blob" }, new[]{ "BlobOneof" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::libsignalservice.push.SyncMessage.Types.Blocked), global::libsignalservice.push.SyncMessage.Types.Blocked.Parser, new[]{ "Numbers" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::libsignalservice.push.SyncMessage.Types.Request), global::libsignalservice.push.SyncMessage.Types.Request.Parser, new[]{ "Type" }, new[]{ "TypeOneof" }, new[]{ typeof(global::libsignalservice.push.SyncMessage.Types.Request.Types.Type) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::libsignalservice.push.SyncMessage.Types.Read), global::libsignalservice.push.SyncMessage.Types.Read.Parser, new[]{ "Sender", "Timestamp" }, new[]{ "SenderOneof", "TimestampOneof" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::libsignalservice.push.SyncMessage.Types.Configuration), global::libsignalservice.push.SyncMessage.Types.Configuration.Parser, new[]{ "ReadReceipts" }, new[]{ "ReadReceiptsOneof" }, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::libsignalservice.push.AttachmentPointer), global::libsignalservice.push.AttachmentPointer.Parser, new[]{ "Id", "ContentType", "Key", "Size", "Thumbnail", "Digest", "FileName", "Flags", "Width", "Height" }, new[]{ "IdOneof", "ContentTypeOneof", "KeyOneof", "SizeOneof", "ThumbnailOneof", "DigestOneof", "FileNameOneof", "FlagsOneof", "WidthOneof", "HeightOneof" }, new[]{ typeof(global::libsignalservice.push.AttachmentPointer.Types.Flags) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::libsignalservice.push.GroupContext), global::libsignalservice.push.GroupContext.Parser, new[]{ "Id", "Type", "Name", "Members", "Avatar" }, new[]{ "IdOneof", "TypeOneof", "NameOneof", "AvatarOneof" }, new[]{ typeof(global::libsignalservice.push.GroupContext.Types.Type) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::libsignalservice.push.ContactDetails), global::libsignalservice.push.ContactDetails.Parser, new[]{ "Number", "Name", "Avatar", "Color", "Verified", "ProfileKey", "Blocked", "ExpireTimer" }, new[]{ "NumberOneof", "NameOneof", "AvatarOneof", "ColorOneof", "VerifiedOneof", "ProfileKeyOneof", "BlockedOneof", "ExpireTimerOneof" }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::libsignalservice.push.ContactDetails.Types.Avatar), global::libsignalservice.push.ContactDetails.Types.Avatar.Parser, new[]{ "ContentType", "Length" }, new[]{ "ContentTypeOneof", "LengthOneof" }, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::libsignalservice.push.GroupDetails), global::libsignalservice.push.GroupDetails.Parser, new[]{ "Id", "Name", "Members", "Avatar", "Active", "ExpireTimer" }, new[]{ "IdOneof", "NameOneof", "AvatarOneof", "ActiveOneof", "ExpireTimerOneof" }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::libsignalservice.push.GroupDetails.Types.Avatar), global::libsignalservice.push.GroupDetails.Types.Avatar.Parser, new[]{ "ContentType", "Length" }, new[]{ "ContentTypeOneof", "LengthOneof" }, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Envelope : pb::IMessage<Envelope> {
    private static readonly pb::MessageParser<Envelope> _parser = new pb::MessageParser<Envelope>(() => new Envelope());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Envelope> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::libsignalservice.push.SignalServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Envelope() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Envelope(Envelope other) : this() {
      switch (other.TypeOneofCase) {
        case TypeOneofOneofCase.Type:
          Type = other.Type;
          break;
      }

      switch (other.SourceOneofCase) {
        case SourceOneofOneofCase.Source:
          Source = other.Source;
          break;
      }

      switch (other.SourceDeviceOneofCase) {
        case SourceDeviceOneofOneofCase.SourceDevice:
          SourceDevice = other.SourceDevice;
          break;
      }

      switch (other.RelayOneofCase) {
        case RelayOneofOneofCase.Relay:
          Relay = other.Relay;
          break;
      }

      switch (other.TimestampOneofCase) {
        case TimestampOneofOneofCase.Timestamp:
          Timestamp = other.Timestamp;
          break;
      }

      switch (other.LegacyMessageOneofCase) {
        case LegacyMessageOneofOneofCase.LegacyMessage:
          LegacyMessage = other.LegacyMessage;
          break;
      }

      switch (other.ContentOneofCase) {
        case ContentOneofOneofCase.Content:
          Content = other.Content;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Envelope Clone() {
      return new Envelope(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::libsignalservice.push.Envelope.Types.Type Type {
      get { return typeOneofCase_ == TypeOneofOneofCase.Type ? (global::libsignalservice.push.Envelope.Types.Type) typeOneof_ : 0; }
      set {
        typeOneof_ = value;
        typeOneofCase_ = TypeOneofOneofCase.Type;
      }
    }

    /// <summary>Field number for the "source" field.</summary>
    public const int SourceFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Source {
      get { return sourceOneofCase_ == SourceOneofOneofCase.Source ? (string) sourceOneof_ : ""; }
      set {
        sourceOneof_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        sourceOneofCase_ = SourceOneofOneofCase.Source;
      }
    }

    /// <summary>Field number for the "sourceDevice" field.</summary>
    public const int SourceDeviceFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint SourceDevice {
      get { return sourceDeviceOneofCase_ == SourceDeviceOneofOneofCase.SourceDevice ? (uint) sourceDeviceOneof_ : 0; }
      set {
        sourceDeviceOneof_ = value;
        sourceDeviceOneofCase_ = SourceDeviceOneofOneofCase.SourceDevice;
      }
    }

    /// <summary>Field number for the "relay" field.</summary>
    public const int RelayFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Relay {
      get { return relayOneofCase_ == RelayOneofOneofCase.Relay ? (string) relayOneof_ : ""; }
      set {
        relayOneof_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        relayOneofCase_ = RelayOneofOneofCase.Relay;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Timestamp {
      get { return timestampOneofCase_ == TimestampOneofOneofCase.Timestamp ? (ulong) timestampOneof_ : 0UL; }
      set {
        timestampOneof_ = value;
        timestampOneofCase_ = TimestampOneofOneofCase.Timestamp;
      }
    }

    /// <summary>Field number for the "legacyMessage" field.</summary>
    public const int LegacyMessageFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString LegacyMessage {
      get { return legacyMessageOneofCase_ == LegacyMessageOneofOneofCase.LegacyMessage ? (pb::ByteString) legacyMessageOneof_ : pb::ByteString.Empty; }
      set {
        legacyMessageOneof_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        legacyMessageOneofCase_ = LegacyMessageOneofOneofCase.LegacyMessage;
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Content {
      get { return contentOneofCase_ == ContentOneofOneofCase.Content ? (pb::ByteString) contentOneof_ : pb::ByteString.Empty; }
      set {
        contentOneof_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        contentOneofCase_ = ContentOneofOneofCase.Content;
      }
    }

    private object typeOneof_;
    /// <summary>Enum of possible cases for the "type_oneof" oneof.</summary>
    public enum TypeOneofOneofCase {
      None = 0,
      Type = 1,
    }
    private TypeOneofOneofCase typeOneofCase_ = TypeOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeOneofOneofCase TypeOneofCase {
      get { return typeOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTypeOneof() {
      typeOneofCase_ = TypeOneofOneofCase.None;
      typeOneof_ = null;
    }

    private object sourceOneof_;
    /// <summary>Enum of possible cases for the "source_oneof" oneof.</summary>
    public enum SourceOneofOneofCase {
      None = 0,
      Source = 2,
    }
    private SourceOneofOneofCase sourceOneofCase_ = SourceOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SourceOneofOneofCase SourceOneofCase {
      get { return sourceOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSourceOneof() {
      sourceOneofCase_ = SourceOneofOneofCase.None;
      sourceOneof_ = null;
    }

    private object sourceDeviceOneof_;
    /// <summary>Enum of possible cases for the "sourceDevice_oneof" oneof.</summary>
    public enum SourceDeviceOneofOneofCase {
      None = 0,
      SourceDevice = 7,
    }
    private SourceDeviceOneofOneofCase sourceDeviceOneofCase_ = SourceDeviceOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SourceDeviceOneofOneofCase SourceDeviceOneofCase {
      get { return sourceDeviceOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSourceDeviceOneof() {
      sourceDeviceOneofCase_ = SourceDeviceOneofOneofCase.None;
      sourceDeviceOneof_ = null;
    }

    private object relayOneof_;
    /// <summary>Enum of possible cases for the "relay_oneof" oneof.</summary>
    public enum RelayOneofOneofCase {
      None = 0,
      Relay = 3,
    }
    private RelayOneofOneofCase relayOneofCase_ = RelayOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RelayOneofOneofCase RelayOneofCase {
      get { return relayOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRelayOneof() {
      relayOneofCase_ = RelayOneofOneofCase.None;
      relayOneof_ = null;
    }

    private object timestampOneof_;
    /// <summary>Enum of possible cases for the "timestamp_oneof" oneof.</summary>
    public enum TimestampOneofOneofCase {
      None = 0,
      Timestamp = 5,
    }
    private TimestampOneofOneofCase timestampOneofCase_ = TimestampOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimestampOneofOneofCase TimestampOneofCase {
      get { return timestampOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTimestampOneof() {
      timestampOneofCase_ = TimestampOneofOneofCase.None;
      timestampOneof_ = null;
    }

    private object legacyMessageOneof_;
    /// <summary>Enum of possible cases for the "legacyMessage_oneof" oneof.</summary>
    public enum LegacyMessageOneofOneofCase {
      None = 0,
      LegacyMessage = 6,
    }
    private LegacyMessageOneofOneofCase legacyMessageOneofCase_ = LegacyMessageOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LegacyMessageOneofOneofCase LegacyMessageOneofCase {
      get { return legacyMessageOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLegacyMessageOneof() {
      legacyMessageOneofCase_ = LegacyMessageOneofOneofCase.None;
      legacyMessageOneof_ = null;
    }

    private object contentOneof_;
    /// <summary>Enum of possible cases for the "content_oneof" oneof.</summary>
    public enum ContentOneofOneofCase {
      None = 0,
      Content = 8,
    }
    private ContentOneofOneofCase contentOneofCase_ = ContentOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContentOneofOneofCase ContentOneofCase {
      get { return contentOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearContentOneof() {
      contentOneofCase_ = ContentOneofOneofCase.None;
      contentOneof_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Envelope);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Envelope other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Source != other.Source) return false;
      if (SourceDevice != other.SourceDevice) return false;
      if (Relay != other.Relay) return false;
      if (Timestamp != other.Timestamp) return false;
      if (LegacyMessage != other.LegacyMessage) return false;
      if (Content != other.Content) return false;
      if (TypeOneofCase != other.TypeOneofCase) return false;
      if (SourceOneofCase != other.SourceOneofCase) return false;
      if (SourceDeviceOneofCase != other.SourceDeviceOneofCase) return false;
      if (RelayOneofCase != other.RelayOneofCase) return false;
      if (TimestampOneofCase != other.TimestampOneofCase) return false;
      if (LegacyMessageOneofCase != other.LegacyMessageOneofCase) return false;
      if (ContentOneofCase != other.ContentOneofCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (typeOneofCase_ == TypeOneofOneofCase.Type) hash ^= Type.GetHashCode();
      if (sourceOneofCase_ == SourceOneofOneofCase.Source) hash ^= Source.GetHashCode();
      if (sourceDeviceOneofCase_ == SourceDeviceOneofOneofCase.SourceDevice) hash ^= SourceDevice.GetHashCode();
      if (relayOneofCase_ == RelayOneofOneofCase.Relay) hash ^= Relay.GetHashCode();
      if (timestampOneofCase_ == TimestampOneofOneofCase.Timestamp) hash ^= Timestamp.GetHashCode();
      if (legacyMessageOneofCase_ == LegacyMessageOneofOneofCase.LegacyMessage) hash ^= LegacyMessage.GetHashCode();
      if (contentOneofCase_ == ContentOneofOneofCase.Content) hash ^= Content.GetHashCode();
      hash ^= (int) typeOneofCase_;
      hash ^= (int) sourceOneofCase_;
      hash ^= (int) sourceDeviceOneofCase_;
      hash ^= (int) relayOneofCase_;
      hash ^= (int) timestampOneofCase_;
      hash ^= (int) legacyMessageOneofCase_;
      hash ^= (int) contentOneofCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (typeOneofCase_ == TypeOneofOneofCase.Type) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (sourceOneofCase_ == SourceOneofOneofCase.Source) {
        output.WriteRawTag(18);
        output.WriteString(Source);
      }
      if (relayOneofCase_ == RelayOneofOneofCase.Relay) {
        output.WriteRawTag(26);
        output.WriteString(Relay);
      }
      if (timestampOneofCase_ == TimestampOneofOneofCase.Timestamp) {
        output.WriteRawTag(40);
        output.WriteUInt64(Timestamp);
      }
      if (legacyMessageOneofCase_ == LegacyMessageOneofOneofCase.LegacyMessage) {
        output.WriteRawTag(50);
        output.WriteBytes(LegacyMessage);
      }
      if (sourceDeviceOneofCase_ == SourceDeviceOneofOneofCase.SourceDevice) {
        output.WriteRawTag(56);
        output.WriteUInt32(SourceDevice);
      }
      if (contentOneofCase_ == ContentOneofOneofCase.Content) {
        output.WriteRawTag(66);
        output.WriteBytes(Content);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (typeOneofCase_ == TypeOneofOneofCase.Type) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (sourceOneofCase_ == SourceOneofOneofCase.Source) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Source);
      }
      if (sourceDeviceOneofCase_ == SourceDeviceOneofOneofCase.SourceDevice) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SourceDevice);
      }
      if (relayOneofCase_ == RelayOneofOneofCase.Relay) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Relay);
      }
      if (timestampOneofCase_ == TimestampOneofOneofCase.Timestamp) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Timestamp);
      }
      if (legacyMessageOneofCase_ == LegacyMessageOneofOneofCase.LegacyMessage) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(LegacyMessage);
      }
      if (contentOneofCase_ == ContentOneofOneofCase.Content) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Content);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Envelope other) {
      if (other == null) {
        return;
      }
      switch (other.TypeOneofCase) {
        case TypeOneofOneofCase.Type:
          Type = other.Type;
          break;
      }

      switch (other.SourceOneofCase) {
        case SourceOneofOneofCase.Source:
          Source = other.Source;
          break;
      }

      switch (other.SourceDeviceOneofCase) {
        case SourceDeviceOneofOneofCase.SourceDevice:
          SourceDevice = other.SourceDevice;
          break;
      }

      switch (other.RelayOneofCase) {
        case RelayOneofOneofCase.Relay:
          Relay = other.Relay;
          break;
      }

      switch (other.TimestampOneofCase) {
        case TimestampOneofOneofCase.Timestamp:
          Timestamp = other.Timestamp;
          break;
      }

      switch (other.LegacyMessageOneofCase) {
        case LegacyMessageOneofOneofCase.LegacyMessage:
          LegacyMessage = other.LegacyMessage;
          break;
      }

      switch (other.ContentOneofCase) {
        case ContentOneofOneofCase.Content:
          Content = other.Content;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            typeOneof_ = input.ReadEnum();
            typeOneofCase_ = TypeOneofOneofCase.Type;
            break;
          }
          case 18: {
            Source = input.ReadString();
            break;
          }
          case 26: {
            Relay = input.ReadString();
            break;
          }
          case 40: {
            Timestamp = input.ReadUInt64();
            break;
          }
          case 50: {
            LegacyMessage = input.ReadBytes();
            break;
          }
          case 56: {
            SourceDevice = input.ReadUInt32();
            break;
          }
          case 66: {
            Content = input.ReadBytes();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Envelope message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Type {
        [pbr::OriginalName("UNKNOWN")] Unknown = 0,
        [pbr::OriginalName("CIPHERTEXT")] Ciphertext = 1,
        [pbr::OriginalName("KEY_EXCHANGE")] KeyExchange = 2,
        [pbr::OriginalName("PREKEY_BUNDLE")] PrekeyBundle = 3,
        [pbr::OriginalName("RECEIPT")] Receipt = 5,
      }

    }
    #endregion

  }

  public sealed partial class Content : pb::IMessage<Content> {
    private static readonly pb::MessageParser<Content> _parser = new pb::MessageParser<Content>(() => new Content());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Content> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::libsignalservice.push.SignalServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Content() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Content(Content other) : this() {
      switch (other.DataMessageOneofCase) {
        case DataMessageOneofOneofCase.DataMessage:
          DataMessage = other.DataMessage.Clone();
          break;
      }

      switch (other.SyncMessageOneofCase) {
        case SyncMessageOneofOneofCase.SyncMessage:
          SyncMessage = other.SyncMessage.Clone();
          break;
      }

      switch (other.CallMessageOneofCase) {
        case CallMessageOneofOneofCase.CallMessage:
          CallMessage = other.CallMessage.Clone();
          break;
      }

      switch (other.NullMessageOneofCase) {
        case NullMessageOneofOneofCase.NullMessage:
          NullMessage = other.NullMessage.Clone();
          break;
      }

      switch (other.ReceiptMessageOneofCase) {
        case ReceiptMessageOneofOneofCase.ReceiptMessage:
          ReceiptMessage = other.ReceiptMessage.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Content Clone() {
      return new Content(this);
    }

    /// <summary>Field number for the "dataMessage" field.</summary>
    public const int DataMessageFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::libsignalservice.push.DataMessage DataMessage {
      get { return dataMessageOneofCase_ == DataMessageOneofOneofCase.DataMessage ? (global::libsignalservice.push.DataMessage) dataMessageOneof_ : null; }
      set {
        dataMessageOneof_ = value;
        dataMessageOneofCase_ = value == null ? DataMessageOneofOneofCase.None : DataMessageOneofOneofCase.DataMessage;
      }
    }

    /// <summary>Field number for the "syncMessage" field.</summary>
    public const int SyncMessageFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::libsignalservice.push.SyncMessage SyncMessage {
      get { return syncMessageOneofCase_ == SyncMessageOneofOneofCase.SyncMessage ? (global::libsignalservice.push.SyncMessage) syncMessageOneof_ : null; }
      set {
        syncMessageOneof_ = value;
        syncMessageOneofCase_ = value == null ? SyncMessageOneofOneofCase.None : SyncMessageOneofOneofCase.SyncMessage;
      }
    }

    /// <summary>Field number for the "callMessage" field.</summary>
    public const int CallMessageFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::libsignalservice.push.CallMessage CallMessage {
      get { return callMessageOneofCase_ == CallMessageOneofOneofCase.CallMessage ? (global::libsignalservice.push.CallMessage) callMessageOneof_ : null; }
      set {
        callMessageOneof_ = value;
        callMessageOneofCase_ = value == null ? CallMessageOneofOneofCase.None : CallMessageOneofOneofCase.CallMessage;
      }
    }

    /// <summary>Field number for the "nullMessage" field.</summary>
    public const int NullMessageFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::libsignalservice.push.NullMessage NullMessage {
      get { return nullMessageOneofCase_ == NullMessageOneofOneofCase.NullMessage ? (global::libsignalservice.push.NullMessage) nullMessageOneof_ : null; }
      set {
        nullMessageOneof_ = value;
        nullMessageOneofCase_ = value == null ? NullMessageOneofOneofCase.None : NullMessageOneofOneofCase.NullMessage;
      }
    }

    /// <summary>Field number for the "receiptMessage" field.</summary>
    public const int ReceiptMessageFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::libsignalservice.push.ReceiptMessage ReceiptMessage {
      get { return receiptMessageOneofCase_ == ReceiptMessageOneofOneofCase.ReceiptMessage ? (global::libsignalservice.push.ReceiptMessage) receiptMessageOneof_ : null; }
      set {
        receiptMessageOneof_ = value;
        receiptMessageOneofCase_ = value == null ? ReceiptMessageOneofOneofCase.None : ReceiptMessageOneofOneofCase.ReceiptMessage;
      }
    }

    private object dataMessageOneof_;
    /// <summary>Enum of possible cases for the "dataMessage_oneof" oneof.</summary>
    public enum DataMessageOneofOneofCase {
      None = 0,
      DataMessage = 1,
    }
    private DataMessageOneofOneofCase dataMessageOneofCase_ = DataMessageOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataMessageOneofOneofCase DataMessageOneofCase {
      get { return dataMessageOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDataMessageOneof() {
      dataMessageOneofCase_ = DataMessageOneofOneofCase.None;
      dataMessageOneof_ = null;
    }

    private object syncMessageOneof_;
    /// <summary>Enum of possible cases for the "syncMessage_oneof" oneof.</summary>
    public enum SyncMessageOneofOneofCase {
      None = 0,
      SyncMessage = 2,
    }
    private SyncMessageOneofOneofCase syncMessageOneofCase_ = SyncMessageOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SyncMessageOneofOneofCase SyncMessageOneofCase {
      get { return syncMessageOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSyncMessageOneof() {
      syncMessageOneofCase_ = SyncMessageOneofOneofCase.None;
      syncMessageOneof_ = null;
    }

    private object callMessageOneof_;
    /// <summary>Enum of possible cases for the "callMessage_oneof" oneof.</summary>
    public enum CallMessageOneofOneofCase {
      None = 0,
      CallMessage = 3,
    }
    private CallMessageOneofOneofCase callMessageOneofCase_ = CallMessageOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CallMessageOneofOneofCase CallMessageOneofCase {
      get { return callMessageOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCallMessageOneof() {
      callMessageOneofCase_ = CallMessageOneofOneofCase.None;
      callMessageOneof_ = null;
    }

    private object nullMessageOneof_;
    /// <summary>Enum of possible cases for the "nullMessage_oneof" oneof.</summary>
    public enum NullMessageOneofOneofCase {
      None = 0,
      NullMessage = 4,
    }
    private NullMessageOneofOneofCase nullMessageOneofCase_ = NullMessageOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NullMessageOneofOneofCase NullMessageOneofCase {
      get { return nullMessageOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNullMessageOneof() {
      nullMessageOneofCase_ = NullMessageOneofOneofCase.None;
      nullMessageOneof_ = null;
    }

    private object receiptMessageOneof_;
    /// <summary>Enum of possible cases for the "receiptMessage_oneof" oneof.</summary>
    public enum ReceiptMessageOneofOneofCase {
      None = 0,
      ReceiptMessage = 5,
    }
    private ReceiptMessageOneofOneofCase receiptMessageOneofCase_ = ReceiptMessageOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceiptMessageOneofOneofCase ReceiptMessageOneofCase {
      get { return receiptMessageOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReceiptMessageOneof() {
      receiptMessageOneofCase_ = ReceiptMessageOneofOneofCase.None;
      receiptMessageOneof_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Content);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Content other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DataMessage, other.DataMessage)) return false;
      if (!object.Equals(SyncMessage, other.SyncMessage)) return false;
      if (!object.Equals(CallMessage, other.CallMessage)) return false;
      if (!object.Equals(NullMessage, other.NullMessage)) return false;
      if (!object.Equals(ReceiptMessage, other.ReceiptMessage)) return false;
      if (DataMessageOneofCase != other.DataMessageOneofCase) return false;
      if (SyncMessageOneofCase != other.SyncMessageOneofCase) return false;
      if (CallMessageOneofCase != other.CallMessageOneofCase) return false;
      if (NullMessageOneofCase != other.NullMessageOneofCase) return false;
      if (ReceiptMessageOneofCase != other.ReceiptMessageOneofCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (dataMessageOneofCase_ == DataMessageOneofOneofCase.DataMessage) hash ^= DataMessage.GetHashCode();
      if (syncMessageOneofCase_ == SyncMessageOneofOneofCase.SyncMessage) hash ^= SyncMessage.GetHashCode();
      if (callMessageOneofCase_ == CallMessageOneofOneofCase.CallMessage) hash ^= CallMessage.GetHashCode();
      if (nullMessageOneofCase_ == NullMessageOneofOneofCase.NullMessage) hash ^= NullMessage.GetHashCode();
      if (receiptMessageOneofCase_ == ReceiptMessageOneofOneofCase.ReceiptMessage) hash ^= ReceiptMessage.GetHashCode();
      hash ^= (int) dataMessageOneofCase_;
      hash ^= (int) syncMessageOneofCase_;
      hash ^= (int) callMessageOneofCase_;
      hash ^= (int) nullMessageOneofCase_;
      hash ^= (int) receiptMessageOneofCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (dataMessageOneofCase_ == DataMessageOneofOneofCase.DataMessage) {
        output.WriteRawTag(10);
        output.WriteMessage(DataMessage);
      }
      if (syncMessageOneofCase_ == SyncMessageOneofOneofCase.SyncMessage) {
        output.WriteRawTag(18);
        output.WriteMessage(SyncMessage);
      }
      if (callMessageOneofCase_ == CallMessageOneofOneofCase.CallMessage) {
        output.WriteRawTag(26);
        output.WriteMessage(CallMessage);
      }
      if (nullMessageOneofCase_ == NullMessageOneofOneofCase.NullMessage) {
        output.WriteRawTag(34);
        output.WriteMessage(NullMessage);
      }
      if (receiptMessageOneofCase_ == ReceiptMessageOneofOneofCase.ReceiptMessage) {
        output.WriteRawTag(42);
        output.WriteMessage(ReceiptMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (dataMessageOneofCase_ == DataMessageOneofOneofCase.DataMessage) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DataMessage);
      }
      if (syncMessageOneofCase_ == SyncMessageOneofOneofCase.SyncMessage) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SyncMessage);
      }
      if (callMessageOneofCase_ == CallMessageOneofOneofCase.CallMessage) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CallMessage);
      }
      if (nullMessageOneofCase_ == NullMessageOneofOneofCase.NullMessage) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NullMessage);
      }
      if (receiptMessageOneofCase_ == ReceiptMessageOneofOneofCase.ReceiptMessage) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReceiptMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Content other) {
      if (other == null) {
        return;
      }
      switch (other.DataMessageOneofCase) {
        case DataMessageOneofOneofCase.DataMessage:
          if (DataMessage == null) {
            DataMessage = new global::libsignalservice.push.DataMessage();
          }
          DataMessage.MergeFrom(other.DataMessage);
          break;
      }

      switch (other.SyncMessageOneofCase) {
        case SyncMessageOneofOneofCase.SyncMessage:
          if (SyncMessage == null) {
            SyncMessage = new global::libsignalservice.push.SyncMessage();
          }
          SyncMessage.MergeFrom(other.SyncMessage);
          break;
      }

      switch (other.CallMessageOneofCase) {
        case CallMessageOneofOneofCase.CallMessage:
          if (CallMessage == null) {
            CallMessage = new global::libsignalservice.push.CallMessage();
          }
          CallMessage.MergeFrom(other.CallMessage);
          break;
      }

      switch (other.NullMessageOneofCase) {
        case NullMessageOneofOneofCase.NullMessage:
          if (NullMessage == null) {
            NullMessage = new global::libsignalservice.push.NullMessage();
          }
          NullMessage.MergeFrom(other.NullMessage);
          break;
      }

      switch (other.ReceiptMessageOneofCase) {
        case ReceiptMessageOneofOneofCase.ReceiptMessage:
          if (ReceiptMessage == null) {
            ReceiptMessage = new global::libsignalservice.push.ReceiptMessage();
          }
          ReceiptMessage.MergeFrom(other.ReceiptMessage);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::libsignalservice.push.DataMessage subBuilder = new global::libsignalservice.push.DataMessage();
            if (dataMessageOneofCase_ == DataMessageOneofOneofCase.DataMessage) {
              subBuilder.MergeFrom(DataMessage);
            }
            input.ReadMessage(subBuilder);
            DataMessage = subBuilder;
            break;
          }
          case 18: {
            global::libsignalservice.push.SyncMessage subBuilder = new global::libsignalservice.push.SyncMessage();
            if (syncMessageOneofCase_ == SyncMessageOneofOneofCase.SyncMessage) {
              subBuilder.MergeFrom(SyncMessage);
            }
            input.ReadMessage(subBuilder);
            SyncMessage = subBuilder;
            break;
          }
          case 26: {
            global::libsignalservice.push.CallMessage subBuilder = new global::libsignalservice.push.CallMessage();
            if (callMessageOneofCase_ == CallMessageOneofOneofCase.CallMessage) {
              subBuilder.MergeFrom(CallMessage);
            }
            input.ReadMessage(subBuilder);
            CallMessage = subBuilder;
            break;
          }
          case 34: {
            global::libsignalservice.push.NullMessage subBuilder = new global::libsignalservice.push.NullMessage();
            if (nullMessageOneofCase_ == NullMessageOneofOneofCase.NullMessage) {
              subBuilder.MergeFrom(NullMessage);
            }
            input.ReadMessage(subBuilder);
            NullMessage = subBuilder;
            break;
          }
          case 42: {
            global::libsignalservice.push.ReceiptMessage subBuilder = new global::libsignalservice.push.ReceiptMessage();
            if (receiptMessageOneofCase_ == ReceiptMessageOneofOneofCase.ReceiptMessage) {
              subBuilder.MergeFrom(ReceiptMessage);
            }
            input.ReadMessage(subBuilder);
            ReceiptMessage = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class CallMessage : pb::IMessage<CallMessage> {
    private static readonly pb::MessageParser<CallMessage> _parser = new pb::MessageParser<CallMessage>(() => new CallMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CallMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::libsignalservice.push.SignalServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CallMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CallMessage(CallMessage other) : this() {
      iceUpdate_ = other.iceUpdate_.Clone();
      switch (other.OfferOneofCase) {
        case OfferOneofOneofCase.Offer:
          Offer = other.Offer.Clone();
          break;
      }

      switch (other.AnswerOneofCase) {
        case AnswerOneofOneofCase.Answer:
          Answer = other.Answer.Clone();
          break;
      }

      switch (other.HangupOneofCase) {
        case HangupOneofOneofCase.Hangup:
          Hangup = other.Hangup.Clone();
          break;
      }

      switch (other.BusyOneofCase) {
        case BusyOneofOneofCase.Busy:
          Busy = other.Busy.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CallMessage Clone() {
      return new CallMessage(this);
    }

    /// <summary>Field number for the "offer" field.</summary>
    public const int OfferFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::libsignalservice.push.CallMessage.Types.Offer Offer {
      get { return offerOneofCase_ == OfferOneofOneofCase.Offer ? (global::libsignalservice.push.CallMessage.Types.Offer) offerOneof_ : null; }
      set {
        offerOneof_ = value;
        offerOneofCase_ = value == null ? OfferOneofOneofCase.None : OfferOneofOneofCase.Offer;
      }
    }

    /// <summary>Field number for the "answer" field.</summary>
    public const int AnswerFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::libsignalservice.push.CallMessage.Types.Answer Answer {
      get { return answerOneofCase_ == AnswerOneofOneofCase.Answer ? (global::libsignalservice.push.CallMessage.Types.Answer) answerOneof_ : null; }
      set {
        answerOneof_ = value;
        answerOneofCase_ = value == null ? AnswerOneofOneofCase.None : AnswerOneofOneofCase.Answer;
      }
    }

    /// <summary>Field number for the "iceUpdate" field.</summary>
    public const int IceUpdateFieldNumber = 3;
    private static readonly pb::FieldCodec<global::libsignalservice.push.CallMessage.Types.IceUpdate> _repeated_iceUpdate_codec
        = pb::FieldCodec.ForMessage(26, global::libsignalservice.push.CallMessage.Types.IceUpdate.Parser);
    private readonly pbc::RepeatedField<global::libsignalservice.push.CallMessage.Types.IceUpdate> iceUpdate_ = new pbc::RepeatedField<global::libsignalservice.push.CallMessage.Types.IceUpdate>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::libsignalservice.push.CallMessage.Types.IceUpdate> IceUpdate {
      get { return iceUpdate_; }
    }

    /// <summary>Field number for the "hangup" field.</summary>
    public const int HangupFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::libsignalservice.push.CallMessage.Types.Hangup Hangup {
      get { return hangupOneofCase_ == HangupOneofOneofCase.Hangup ? (global::libsignalservice.push.CallMessage.Types.Hangup) hangupOneof_ : null; }
      set {
        hangupOneof_ = value;
        hangupOneofCase_ = value == null ? HangupOneofOneofCase.None : HangupOneofOneofCase.Hangup;
      }
    }

    /// <summary>Field number for the "busy" field.</summary>
    public const int BusyFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::libsignalservice.push.CallMessage.Types.Busy Busy {
      get { return busyOneofCase_ == BusyOneofOneofCase.Busy ? (global::libsignalservice.push.CallMessage.Types.Busy) busyOneof_ : null; }
      set {
        busyOneof_ = value;
        busyOneofCase_ = value == null ? BusyOneofOneofCase.None : BusyOneofOneofCase.Busy;
      }
    }

    private object offerOneof_;
    /// <summary>Enum of possible cases for the "offer_oneof" oneof.</summary>
    public enum OfferOneofOneofCase {
      None = 0,
      Offer = 1,
    }
    private OfferOneofOneofCase offerOneofCase_ = OfferOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferOneofOneofCase OfferOneofCase {
      get { return offerOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOfferOneof() {
      offerOneofCase_ = OfferOneofOneofCase.None;
      offerOneof_ = null;
    }

    private object answerOneof_;
    /// <summary>Enum of possible cases for the "answer_oneof" oneof.</summary>
    public enum AnswerOneofOneofCase {
      None = 0,
      Answer = 2,
    }
    private AnswerOneofOneofCase answerOneofCase_ = AnswerOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnswerOneofOneofCase AnswerOneofCase {
      get { return answerOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAnswerOneof() {
      answerOneofCase_ = AnswerOneofOneofCase.None;
      answerOneof_ = null;
    }

    private object hangupOneof_;
    /// <summary>Enum of possible cases for the "hangup_oneof" oneof.</summary>
    public enum HangupOneofOneofCase {
      None = 0,
      Hangup = 4,
    }
    private HangupOneofOneofCase hangupOneofCase_ = HangupOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HangupOneofOneofCase HangupOneofCase {
      get { return hangupOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHangupOneof() {
      hangupOneofCase_ = HangupOneofOneofCase.None;
      hangupOneof_ = null;
    }

    private object busyOneof_;
    /// <summary>Enum of possible cases for the "busy_oneof" oneof.</summary>
    public enum BusyOneofOneofCase {
      None = 0,
      Busy = 5,
    }
    private BusyOneofOneofCase busyOneofCase_ = BusyOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BusyOneofOneofCase BusyOneofCase {
      get { return busyOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBusyOneof() {
      busyOneofCase_ = BusyOneofOneofCase.None;
      busyOneof_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CallMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CallMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Offer, other.Offer)) return false;
      if (!object.Equals(Answer, other.Answer)) return false;
      if(!iceUpdate_.Equals(other.iceUpdate_)) return false;
      if (!object.Equals(Hangup, other.Hangup)) return false;
      if (!object.Equals(Busy, other.Busy)) return false;
      if (OfferOneofCase != other.OfferOneofCase) return false;
      if (AnswerOneofCase != other.AnswerOneofCase) return false;
      if (HangupOneofCase != other.HangupOneofCase) return false;
      if (BusyOneofCase != other.BusyOneofCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (offerOneofCase_ == OfferOneofOneofCase.Offer) hash ^= Offer.GetHashCode();
      if (answerOneofCase_ == AnswerOneofOneofCase.Answer) hash ^= Answer.GetHashCode();
      hash ^= iceUpdate_.GetHashCode();
      if (hangupOneofCase_ == HangupOneofOneofCase.Hangup) hash ^= Hangup.GetHashCode();
      if (busyOneofCase_ == BusyOneofOneofCase.Busy) hash ^= Busy.GetHashCode();
      hash ^= (int) offerOneofCase_;
      hash ^= (int) answerOneofCase_;
      hash ^= (int) hangupOneofCase_;
      hash ^= (int) busyOneofCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (offerOneofCase_ == OfferOneofOneofCase.Offer) {
        output.WriteRawTag(10);
        output.WriteMessage(Offer);
      }
      if (answerOneofCase_ == AnswerOneofOneofCase.Answer) {
        output.WriteRawTag(18);
        output.WriteMessage(Answer);
      }
      iceUpdate_.WriteTo(output, _repeated_iceUpdate_codec);
      if (hangupOneofCase_ == HangupOneofOneofCase.Hangup) {
        output.WriteRawTag(34);
        output.WriteMessage(Hangup);
      }
      if (busyOneofCase_ == BusyOneofOneofCase.Busy) {
        output.WriteRawTag(42);
        output.WriteMessage(Busy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (offerOneofCase_ == OfferOneofOneofCase.Offer) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Offer);
      }
      if (answerOneofCase_ == AnswerOneofOneofCase.Answer) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Answer);
      }
      size += iceUpdate_.CalculateSize(_repeated_iceUpdate_codec);
      if (hangupOneofCase_ == HangupOneofOneofCase.Hangup) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Hangup);
      }
      if (busyOneofCase_ == BusyOneofOneofCase.Busy) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Busy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CallMessage other) {
      if (other == null) {
        return;
      }
      iceUpdate_.Add(other.iceUpdate_);
      switch (other.OfferOneofCase) {
        case OfferOneofOneofCase.Offer:
          if (Offer == null) {
            Offer = new global::libsignalservice.push.CallMessage.Types.Offer();
          }
          Offer.MergeFrom(other.Offer);
          break;
      }

      switch (other.AnswerOneofCase) {
        case AnswerOneofOneofCase.Answer:
          if (Answer == null) {
            Answer = new global::libsignalservice.push.CallMessage.Types.Answer();
          }
          Answer.MergeFrom(other.Answer);
          break;
      }

      switch (other.HangupOneofCase) {
        case HangupOneofOneofCase.Hangup:
          if (Hangup == null) {
            Hangup = new global::libsignalservice.push.CallMessage.Types.Hangup();
          }
          Hangup.MergeFrom(other.Hangup);
          break;
      }

      switch (other.BusyOneofCase) {
        case BusyOneofOneofCase.Busy:
          if (Busy == null) {
            Busy = new global::libsignalservice.push.CallMessage.Types.Busy();
          }
          Busy.MergeFrom(other.Busy);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::libsignalservice.push.CallMessage.Types.Offer subBuilder = new global::libsignalservice.push.CallMessage.Types.Offer();
            if (offerOneofCase_ == OfferOneofOneofCase.Offer) {
              subBuilder.MergeFrom(Offer);
            }
            input.ReadMessage(subBuilder);
            Offer = subBuilder;
            break;
          }
          case 18: {
            global::libsignalservice.push.CallMessage.Types.Answer subBuilder = new global::libsignalservice.push.CallMessage.Types.Answer();
            if (answerOneofCase_ == AnswerOneofOneofCase.Answer) {
              subBuilder.MergeFrom(Answer);
            }
            input.ReadMessage(subBuilder);
            Answer = subBuilder;
            break;
          }
          case 26: {
            iceUpdate_.AddEntriesFrom(input, _repeated_iceUpdate_codec);
            break;
          }
          case 34: {
            global::libsignalservice.push.CallMessage.Types.Hangup subBuilder = new global::libsignalservice.push.CallMessage.Types.Hangup();
            if (hangupOneofCase_ == HangupOneofOneofCase.Hangup) {
              subBuilder.MergeFrom(Hangup);
            }
            input.ReadMessage(subBuilder);
            Hangup = subBuilder;
            break;
          }
          case 42: {
            global::libsignalservice.push.CallMessage.Types.Busy subBuilder = new global::libsignalservice.push.CallMessage.Types.Busy();
            if (busyOneofCase_ == BusyOneofOneofCase.Busy) {
              subBuilder.MergeFrom(Busy);
            }
            input.ReadMessage(subBuilder);
            Busy = subBuilder;
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the CallMessage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Offer : pb::IMessage<Offer> {
        private static readonly pb::MessageParser<Offer> _parser = new pb::MessageParser<Offer>(() => new Offer());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Offer> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::libsignalservice.push.CallMessage.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Offer() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Offer(Offer other) : this() {
          switch (other.IdOneofCase) {
            case IdOneofOneofCase.Id:
              Id = other.Id;
              break;
          }

          switch (other.DescriptionOneofCase) {
            case DescriptionOneofOneofCase.Description:
              Description = other.Description;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Offer Clone() {
          return new Offer(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong Id {
          get { return idOneofCase_ == IdOneofOneofCase.Id ? (ulong) idOneof_ : 0UL; }
          set {
            idOneof_ = value;
            idOneofCase_ = IdOneofOneofCase.Id;
          }
        }

        /// <summary>Field number for the "description" field.</summary>
        public const int DescriptionFieldNumber = 2;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Description {
          get { return descriptionOneofCase_ == DescriptionOneofOneofCase.Description ? (string) descriptionOneof_ : ""; }
          set {
            descriptionOneof_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            descriptionOneofCase_ = DescriptionOneofOneofCase.Description;
          }
        }

        private object idOneof_;
        /// <summary>Enum of possible cases for the "id_oneof" oneof.</summary>
        public enum IdOneofOneofCase {
          None = 0,
          Id = 1,
        }
        private IdOneofOneofCase idOneofCase_ = IdOneofOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public IdOneofOneofCase IdOneofCase {
          get { return idOneofCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearIdOneof() {
          idOneofCase_ = IdOneofOneofCase.None;
          idOneof_ = null;
        }

        private object descriptionOneof_;
        /// <summary>Enum of possible cases for the "description_oneof" oneof.</summary>
        public enum DescriptionOneofOneofCase {
          None = 0,
          Description = 2,
        }
        private DescriptionOneofOneofCase descriptionOneofCase_ = DescriptionOneofOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DescriptionOneofOneofCase DescriptionOneofCase {
          get { return descriptionOneofCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearDescriptionOneof() {
          descriptionOneofCase_ = DescriptionOneofOneofCase.None;
          descriptionOneof_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Offer);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Offer other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (Description != other.Description) return false;
          if (IdOneofCase != other.IdOneofCase) return false;
          if (DescriptionOneofCase != other.DescriptionOneofCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (idOneofCase_ == IdOneofOneofCase.Id) hash ^= Id.GetHashCode();
          if (descriptionOneofCase_ == DescriptionOneofOneofCase.Description) hash ^= Description.GetHashCode();
          hash ^= (int) idOneofCase_;
          hash ^= (int) descriptionOneofCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (idOneofCase_ == IdOneofOneofCase.Id) {
            output.WriteRawTag(8);
            output.WriteUInt64(Id);
          }
          if (descriptionOneofCase_ == DescriptionOneofOneofCase.Description) {
            output.WriteRawTag(18);
            output.WriteString(Description);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (idOneofCase_ == IdOneofOneofCase.Id) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Id);
          }
          if (descriptionOneofCase_ == DescriptionOneofOneofCase.Description) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Offer other) {
          if (other == null) {
            return;
          }
          switch (other.IdOneofCase) {
            case IdOneofOneofCase.Id:
              Id = other.Id;
              break;
          }

          switch (other.DescriptionOneofCase) {
            case DescriptionOneofOneofCase.Description:
              Description = other.Description;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Id = input.ReadUInt64();
                break;
              }
              case 18: {
                Description = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class Answer : pb::IMessage<Answer> {
        private static readonly pb::MessageParser<Answer> _parser = new pb::MessageParser<Answer>(() => new Answer());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Answer> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::libsignalservice.push.CallMessage.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Answer() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Answer(Answer other) : this() {
          switch (other.IdOneofCase) {
            case IdOneofOneofCase.Id:
              Id = other.Id;
              break;
          }

          switch (other.DescriptionOneofCase) {
            case DescriptionOneofOneofCase.Description:
              Description = other.Description;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Answer Clone() {
          return new Answer(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong Id {
          get { return idOneofCase_ == IdOneofOneofCase.Id ? (ulong) idOneof_ : 0UL; }
          set {
            idOneof_ = value;
            idOneofCase_ = IdOneofOneofCase.Id;
          }
        }

        /// <summary>Field number for the "description" field.</summary>
        public const int DescriptionFieldNumber = 2;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Description {
          get { return descriptionOneofCase_ == DescriptionOneofOneofCase.Description ? (string) descriptionOneof_ : ""; }
          set {
            descriptionOneof_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            descriptionOneofCase_ = DescriptionOneofOneofCase.Description;
          }
        }

        private object idOneof_;
        /// <summary>Enum of possible cases for the "id_oneof" oneof.</summary>
        public enum IdOneofOneofCase {
          None = 0,
          Id = 1,
        }
        private IdOneofOneofCase idOneofCase_ = IdOneofOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public IdOneofOneofCase IdOneofCase {
          get { return idOneofCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearIdOneof() {
          idOneofCase_ = IdOneofOneofCase.None;
          idOneof_ = null;
        }

        private object descriptionOneof_;
        /// <summary>Enum of possible cases for the "description_oneof" oneof.</summary>
        public enum DescriptionOneofOneofCase {
          None = 0,
          Description = 2,
        }
        private DescriptionOneofOneofCase descriptionOneofCase_ = DescriptionOneofOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DescriptionOneofOneofCase DescriptionOneofCase {
          get { return descriptionOneofCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearDescriptionOneof() {
          descriptionOneofCase_ = DescriptionOneofOneofCase.None;
          descriptionOneof_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Answer);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Answer other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (Description != other.Description) return false;
          if (IdOneofCase != other.IdOneofCase) return false;
          if (DescriptionOneofCase != other.DescriptionOneofCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (idOneofCase_ == IdOneofOneofCase.Id) hash ^= Id.GetHashCode();
          if (descriptionOneofCase_ == DescriptionOneofOneofCase.Description) hash ^= Description.GetHashCode();
          hash ^= (int) idOneofCase_;
          hash ^= (int) descriptionOneofCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (idOneofCase_ == IdOneofOneofCase.Id) {
            output.WriteRawTag(8);
            output.WriteUInt64(Id);
          }
          if (descriptionOneofCase_ == DescriptionOneofOneofCase.Description) {
            output.WriteRawTag(18);
            output.WriteString(Description);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (idOneofCase_ == IdOneofOneofCase.Id) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Id);
          }
          if (descriptionOneofCase_ == DescriptionOneofOneofCase.Description) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Answer other) {
          if (other == null) {
            return;
          }
          switch (other.IdOneofCase) {
            case IdOneofOneofCase.Id:
              Id = other.Id;
              break;
          }

          switch (other.DescriptionOneofCase) {
            case DescriptionOneofOneofCase.Description:
              Description = other.Description;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Id = input.ReadUInt64();
                break;
              }
              case 18: {
                Description = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class IceUpdate : pb::IMessage<IceUpdate> {
        private static readonly pb::MessageParser<IceUpdate> _parser = new pb::MessageParser<IceUpdate>(() => new IceUpdate());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<IceUpdate> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::libsignalservice.push.CallMessage.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public IceUpdate() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public IceUpdate(IceUpdate other) : this() {
          switch (other.IdOneofCase) {
            case IdOneofOneofCase.Id:
              Id = other.Id;
              break;
          }

          switch (other.SdpMidOneofCase) {
            case SdpMidOneofOneofCase.SdpMid:
              SdpMid = other.SdpMid;
              break;
          }

          switch (other.SdpMLineIndexOneofCase) {
            case SdpMLineIndexOneofOneofCase.SdpMLineIndex:
              SdpMLineIndex = other.SdpMLineIndex;
              break;
          }

          switch (other.SdpOneofCase) {
            case SdpOneofOneofCase.Sdp:
              Sdp = other.Sdp;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public IceUpdate Clone() {
          return new IceUpdate(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong Id {
          get { return idOneofCase_ == IdOneofOneofCase.Id ? (ulong) idOneof_ : 0UL; }
          set {
            idOneof_ = value;
            idOneofCase_ = IdOneofOneofCase.Id;
          }
        }

        /// <summary>Field number for the "sdpMid" field.</summary>
        public const int SdpMidFieldNumber = 2;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string SdpMid {
          get { return sdpMidOneofCase_ == SdpMidOneofOneofCase.SdpMid ? (string) sdpMidOneof_ : ""; }
          set {
            sdpMidOneof_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            sdpMidOneofCase_ = SdpMidOneofOneofCase.SdpMid;
          }
        }

        /// <summary>Field number for the "sdpMLineIndex" field.</summary>
        public const int SdpMLineIndexFieldNumber = 3;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint SdpMLineIndex {
          get { return sdpMLineIndexOneofCase_ == SdpMLineIndexOneofOneofCase.SdpMLineIndex ? (uint) sdpMLineIndexOneof_ : 0; }
          set {
            sdpMLineIndexOneof_ = value;
            sdpMLineIndexOneofCase_ = SdpMLineIndexOneofOneofCase.SdpMLineIndex;
          }
        }

        /// <summary>Field number for the "sdp" field.</summary>
        public const int SdpFieldNumber = 4;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Sdp {
          get { return sdpOneofCase_ == SdpOneofOneofCase.Sdp ? (string) sdpOneof_ : ""; }
          set {
            sdpOneof_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            sdpOneofCase_ = SdpOneofOneofCase.Sdp;
          }
        }

        private object idOneof_;
        /// <summary>Enum of possible cases for the "id_oneof" oneof.</summary>
        public enum IdOneofOneofCase {
          None = 0,
          Id = 1,
        }
        private IdOneofOneofCase idOneofCase_ = IdOneofOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public IdOneofOneofCase IdOneofCase {
          get { return idOneofCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearIdOneof() {
          idOneofCase_ = IdOneofOneofCase.None;
          idOneof_ = null;
        }

        private object sdpMidOneof_;
        /// <summary>Enum of possible cases for the "sdpMid_oneof" oneof.</summary>
        public enum SdpMidOneofOneofCase {
          None = 0,
          SdpMid = 2,
        }
        private SdpMidOneofOneofCase sdpMidOneofCase_ = SdpMidOneofOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SdpMidOneofOneofCase SdpMidOneofCase {
          get { return sdpMidOneofCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearSdpMidOneof() {
          sdpMidOneofCase_ = SdpMidOneofOneofCase.None;
          sdpMidOneof_ = null;
        }

        private object sdpMLineIndexOneof_;
        /// <summary>Enum of possible cases for the "sdpMLineIndex_oneof" oneof.</summary>
        public enum SdpMLineIndexOneofOneofCase {
          None = 0,
          SdpMLineIndex = 3,
        }
        private SdpMLineIndexOneofOneofCase sdpMLineIndexOneofCase_ = SdpMLineIndexOneofOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SdpMLineIndexOneofOneofCase SdpMLineIndexOneofCase {
          get { return sdpMLineIndexOneofCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearSdpMLineIndexOneof() {
          sdpMLineIndexOneofCase_ = SdpMLineIndexOneofOneofCase.None;
          sdpMLineIndexOneof_ = null;
        }

        private object sdpOneof_;
        /// <summary>Enum of possible cases for the "sdp_oneof" oneof.</summary>
        public enum SdpOneofOneofCase {
          None = 0,
          Sdp = 4,
        }
        private SdpOneofOneofCase sdpOneofCase_ = SdpOneofOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SdpOneofOneofCase SdpOneofCase {
          get { return sdpOneofCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearSdpOneof() {
          sdpOneofCase_ = SdpOneofOneofCase.None;
          sdpOneof_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as IceUpdate);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(IceUpdate other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (SdpMid != other.SdpMid) return false;
          if (SdpMLineIndex != other.SdpMLineIndex) return false;
          if (Sdp != other.Sdp) return false;
          if (IdOneofCase != other.IdOneofCase) return false;
          if (SdpMidOneofCase != other.SdpMidOneofCase) return false;
          if (SdpMLineIndexOneofCase != other.SdpMLineIndexOneofCase) return false;
          if (SdpOneofCase != other.SdpOneofCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (idOneofCase_ == IdOneofOneofCase.Id) hash ^= Id.GetHashCode();
          if (sdpMidOneofCase_ == SdpMidOneofOneofCase.SdpMid) hash ^= SdpMid.GetHashCode();
          if (sdpMLineIndexOneofCase_ == SdpMLineIndexOneofOneofCase.SdpMLineIndex) hash ^= SdpMLineIndex.GetHashCode();
          if (sdpOneofCase_ == SdpOneofOneofCase.Sdp) hash ^= Sdp.GetHashCode();
          hash ^= (int) idOneofCase_;
          hash ^= (int) sdpMidOneofCase_;
          hash ^= (int) sdpMLineIndexOneofCase_;
          hash ^= (int) sdpOneofCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (idOneofCase_ == IdOneofOneofCase.Id) {
            output.WriteRawTag(8);
            output.WriteUInt64(Id);
          }
          if (sdpMidOneofCase_ == SdpMidOneofOneofCase.SdpMid) {
            output.WriteRawTag(18);
            output.WriteString(SdpMid);
          }
          if (sdpMLineIndexOneofCase_ == SdpMLineIndexOneofOneofCase.SdpMLineIndex) {
            output.WriteRawTag(24);
            output.WriteUInt32(SdpMLineIndex);
          }
          if (sdpOneofCase_ == SdpOneofOneofCase.Sdp) {
            output.WriteRawTag(34);
            output.WriteString(Sdp);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (idOneofCase_ == IdOneofOneofCase.Id) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Id);
          }
          if (sdpMidOneofCase_ == SdpMidOneofOneofCase.SdpMid) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(SdpMid);
          }
          if (sdpMLineIndexOneofCase_ == SdpMLineIndexOneofOneofCase.SdpMLineIndex) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SdpMLineIndex);
          }
          if (sdpOneofCase_ == SdpOneofOneofCase.Sdp) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Sdp);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(IceUpdate other) {
          if (other == null) {
            return;
          }
          switch (other.IdOneofCase) {
            case IdOneofOneofCase.Id:
              Id = other.Id;
              break;
          }

          switch (other.SdpMidOneofCase) {
            case SdpMidOneofOneofCase.SdpMid:
              SdpMid = other.SdpMid;
              break;
          }

          switch (other.SdpMLineIndexOneofCase) {
            case SdpMLineIndexOneofOneofCase.SdpMLineIndex:
              SdpMLineIndex = other.SdpMLineIndex;
              break;
          }

          switch (other.SdpOneofCase) {
            case SdpOneofOneofCase.Sdp:
              Sdp = other.Sdp;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Id = input.ReadUInt64();
                break;
              }
              case 18: {
                SdpMid = input.ReadString();
                break;
              }
              case 24: {
                SdpMLineIndex = input.ReadUInt32();
                break;
              }
              case 34: {
                Sdp = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class Busy : pb::IMessage<Busy> {
        private static readonly pb::MessageParser<Busy> _parser = new pb::MessageParser<Busy>(() => new Busy());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Busy> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::libsignalservice.push.CallMessage.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Busy() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Busy(Busy other) : this() {
          switch (other.IdOneofCase) {
            case IdOneofOneofCase.Id:
              Id = other.Id;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Busy Clone() {
          return new Busy(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong Id {
          get { return idOneofCase_ == IdOneofOneofCase.Id ? (ulong) idOneof_ : 0UL; }
          set {
            idOneof_ = value;
            idOneofCase_ = IdOneofOneofCase.Id;
          }
        }

        private object idOneof_;
        /// <summary>Enum of possible cases for the "id_oneof" oneof.</summary>
        public enum IdOneofOneofCase {
          None = 0,
          Id = 1,
        }
        private IdOneofOneofCase idOneofCase_ = IdOneofOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public IdOneofOneofCase IdOneofCase {
          get { return idOneofCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearIdOneof() {
          idOneofCase_ = IdOneofOneofCase.None;
          idOneof_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Busy);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Busy other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (IdOneofCase != other.IdOneofCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (idOneofCase_ == IdOneofOneofCase.Id) hash ^= Id.GetHashCode();
          hash ^= (int) idOneofCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (idOneofCase_ == IdOneofOneofCase.Id) {
            output.WriteRawTag(8);
            output.WriteUInt64(Id);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (idOneofCase_ == IdOneofOneofCase.Id) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Id);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Busy other) {
          if (other == null) {
            return;
          }
          switch (other.IdOneofCase) {
            case IdOneofOneofCase.Id:
              Id = other.Id;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Id = input.ReadUInt64();
                break;
              }
            }
          }
        }

      }

      public sealed partial class Hangup : pb::IMessage<Hangup> {
        private static readonly pb::MessageParser<Hangup> _parser = new pb::MessageParser<Hangup>(() => new Hangup());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Hangup> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::libsignalservice.push.CallMessage.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Hangup() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Hangup(Hangup other) : this() {
          switch (other.IdOneofCase) {
            case IdOneofOneofCase.Id:
              Id = other.Id;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Hangup Clone() {
          return new Hangup(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong Id {
          get { return idOneofCase_ == IdOneofOneofCase.Id ? (ulong) idOneof_ : 0UL; }
          set {
            idOneof_ = value;
            idOneofCase_ = IdOneofOneofCase.Id;
          }
        }

        private object idOneof_;
        /// <summary>Enum of possible cases for the "id_oneof" oneof.</summary>
        public enum IdOneofOneofCase {
          None = 0,
          Id = 1,
        }
        private IdOneofOneofCase idOneofCase_ = IdOneofOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public IdOneofOneofCase IdOneofCase {
          get { return idOneofCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearIdOneof() {
          idOneofCase_ = IdOneofOneofCase.None;
          idOneof_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Hangup);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Hangup other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (IdOneofCase != other.IdOneofCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (idOneofCase_ == IdOneofOneofCase.Id) hash ^= Id.GetHashCode();
          hash ^= (int) idOneofCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (idOneofCase_ == IdOneofOneofCase.Id) {
            output.WriteRawTag(8);
            output.WriteUInt64(Id);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (idOneofCase_ == IdOneofOneofCase.Id) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Id);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Hangup other) {
          if (other == null) {
            return;
          }
          switch (other.IdOneofCase) {
            case IdOneofOneofCase.Id:
              Id = other.Id;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Id = input.ReadUInt64();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class DataMessage : pb::IMessage<DataMessage> {
    private static readonly pb::MessageParser<DataMessage> _parser = new pb::MessageParser<DataMessage>(() => new DataMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::libsignalservice.push.SignalServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataMessage(DataMessage other) : this() {
      attachments_ = other.attachments_.Clone();
      switch (other.BodyOneofCase) {
        case BodyOneofOneofCase.Body:
          Body = other.Body;
          break;
      }

      switch (other.GroupOneofCase) {
        case GroupOneofOneofCase.Group:
          Group = other.Group.Clone();
          break;
      }

      switch (other.FlagsOneofCase) {
        case FlagsOneofOneofCase.Flags:
          Flags = other.Flags;
          break;
      }

      switch (other.ExpireTimerOneofCase) {
        case ExpireTimerOneofOneofCase.ExpireTimer:
          ExpireTimer = other.ExpireTimer;
          break;
      }

      switch (other.ProfileKeyOneofCase) {
        case ProfileKeyOneofOneofCase.ProfileKey:
          ProfileKey = other.ProfileKey;
          break;
      }

      switch (other.TimestampOneofCase) {
        case TimestampOneofOneofCase.Timestamp:
          Timestamp = other.Timestamp;
          break;
      }

      switch (other.QuoteOneofCase) {
        case QuoteOneofOneofCase.Quote:
          Quote = other.Quote.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataMessage Clone() {
      return new DataMessage(this);
    }

    /// <summary>Field number for the "body" field.</summary>
    public const int BodyFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Body {
      get { return bodyOneofCase_ == BodyOneofOneofCase.Body ? (string) bodyOneof_ : ""; }
      set {
        bodyOneof_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        bodyOneofCase_ = BodyOneofOneofCase.Body;
      }
    }

    /// <summary>Field number for the "attachments" field.</summary>
    public const int AttachmentsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::libsignalservice.push.AttachmentPointer> _repeated_attachments_codec
        = pb::FieldCodec.ForMessage(18, global::libsignalservice.push.AttachmentPointer.Parser);
    private readonly pbc::RepeatedField<global::libsignalservice.push.AttachmentPointer> attachments_ = new pbc::RepeatedField<global::libsignalservice.push.AttachmentPointer>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::libsignalservice.push.AttachmentPointer> Attachments {
      get { return attachments_; }
    }

    /// <summary>Field number for the "group" field.</summary>
    public const int GroupFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::libsignalservice.push.GroupContext Group {
      get { return groupOneofCase_ == GroupOneofOneofCase.Group ? (global::libsignalservice.push.GroupContext) groupOneof_ : null; }
      set {
        groupOneof_ = value;
        groupOneofCase_ = value == null ? GroupOneofOneofCase.None : GroupOneofOneofCase.Group;
      }
    }

    /// <summary>Field number for the "flags" field.</summary>
    public const int FlagsFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Flags {
      get { return flagsOneofCase_ == FlagsOneofOneofCase.Flags ? (uint) flagsOneof_ : 0; }
      set {
        flagsOneof_ = value;
        flagsOneofCase_ = FlagsOneofOneofCase.Flags;
      }
    }

    /// <summary>Field number for the "expireTimer" field.</summary>
    public const int ExpireTimerFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ExpireTimer {
      get { return expireTimerOneofCase_ == ExpireTimerOneofOneofCase.ExpireTimer ? (uint) expireTimerOneof_ : 0; }
      set {
        expireTimerOneof_ = value;
        expireTimerOneofCase_ = ExpireTimerOneofOneofCase.ExpireTimer;
      }
    }

    /// <summary>Field number for the "profileKey" field.</summary>
    public const int ProfileKeyFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ProfileKey {
      get { return profileKeyOneofCase_ == ProfileKeyOneofOneofCase.ProfileKey ? (pb::ByteString) profileKeyOneof_ : pb::ByteString.Empty; }
      set {
        profileKeyOneof_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        profileKeyOneofCase_ = ProfileKeyOneofOneofCase.ProfileKey;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Timestamp {
      get { return timestampOneofCase_ == TimestampOneofOneofCase.Timestamp ? (ulong) timestampOneof_ : 0UL; }
      set {
        timestampOneof_ = value;
        timestampOneofCase_ = TimestampOneofOneofCase.Timestamp;
      }
    }

    /// <summary>Field number for the "quote" field.</summary>
    public const int QuoteFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::libsignalservice.push.DataMessage.Types.Quote Quote {
      get { return quoteOneofCase_ == QuoteOneofOneofCase.Quote ? (global::libsignalservice.push.DataMessage.Types.Quote) quoteOneof_ : null; }
      set {
        quoteOneof_ = value;
        quoteOneofCase_ = value == null ? QuoteOneofOneofCase.None : QuoteOneofOneofCase.Quote;
      }
    }

    private object bodyOneof_;
    /// <summary>Enum of possible cases for the "body_oneof" oneof.</summary>
    public enum BodyOneofOneofCase {
      None = 0,
      Body = 1,
    }
    private BodyOneofOneofCase bodyOneofCase_ = BodyOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BodyOneofOneofCase BodyOneofCase {
      get { return bodyOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBodyOneof() {
      bodyOneofCase_ = BodyOneofOneofCase.None;
      bodyOneof_ = null;
    }

    private object groupOneof_;
    /// <summary>Enum of possible cases for the "group_oneof" oneof.</summary>
    public enum GroupOneofOneofCase {
      None = 0,
      Group = 3,
    }
    private GroupOneofOneofCase groupOneofCase_ = GroupOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupOneofOneofCase GroupOneofCase {
      get { return groupOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGroupOneof() {
      groupOneofCase_ = GroupOneofOneofCase.None;
      groupOneof_ = null;
    }

    private object flagsOneof_;
    /// <summary>Enum of possible cases for the "flags_oneof" oneof.</summary>
    public enum FlagsOneofOneofCase {
      None = 0,
      Flags = 4,
    }
    private FlagsOneofOneofCase flagsOneofCase_ = FlagsOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FlagsOneofOneofCase FlagsOneofCase {
      get { return flagsOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFlagsOneof() {
      flagsOneofCase_ = FlagsOneofOneofCase.None;
      flagsOneof_ = null;
    }

    private object expireTimerOneof_;
    /// <summary>Enum of possible cases for the "expireTimer_oneof" oneof.</summary>
    public enum ExpireTimerOneofOneofCase {
      None = 0,
      ExpireTimer = 5,
    }
    private ExpireTimerOneofOneofCase expireTimerOneofCase_ = ExpireTimerOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExpireTimerOneofOneofCase ExpireTimerOneofCase {
      get { return expireTimerOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearExpireTimerOneof() {
      expireTimerOneofCase_ = ExpireTimerOneofOneofCase.None;
      expireTimerOneof_ = null;
    }

    private object profileKeyOneof_;
    /// <summary>Enum of possible cases for the "profileKey_oneof" oneof.</summary>
    public enum ProfileKeyOneofOneofCase {
      None = 0,
      ProfileKey = 6,
    }
    private ProfileKeyOneofOneofCase profileKeyOneofCase_ = ProfileKeyOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProfileKeyOneofOneofCase ProfileKeyOneofCase {
      get { return profileKeyOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearProfileKeyOneof() {
      profileKeyOneofCase_ = ProfileKeyOneofOneofCase.None;
      profileKeyOneof_ = null;
    }

    private object timestampOneof_;
    /// <summary>Enum of possible cases for the "timestamp_oneof" oneof.</summary>
    public enum TimestampOneofOneofCase {
      None = 0,
      Timestamp = 7,
    }
    private TimestampOneofOneofCase timestampOneofCase_ = TimestampOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimestampOneofOneofCase TimestampOneofCase {
      get { return timestampOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTimestampOneof() {
      timestampOneofCase_ = TimestampOneofOneofCase.None;
      timestampOneof_ = null;
    }

    private object quoteOneof_;
    /// <summary>Enum of possible cases for the "quote_oneof" oneof.</summary>
    public enum QuoteOneofOneofCase {
      None = 0,
      Quote = 8,
    }
    private QuoteOneofOneofCase quoteOneofCase_ = QuoteOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuoteOneofOneofCase QuoteOneofCase {
      get { return quoteOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearQuoteOneof() {
      quoteOneofCase_ = QuoteOneofOneofCase.None;
      quoteOneof_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Body != other.Body) return false;
      if(!attachments_.Equals(other.attachments_)) return false;
      if (!object.Equals(Group, other.Group)) return false;
      if (Flags != other.Flags) return false;
      if (ExpireTimer != other.ExpireTimer) return false;
      if (ProfileKey != other.ProfileKey) return false;
      if (Timestamp != other.Timestamp) return false;
      if (!object.Equals(Quote, other.Quote)) return false;
      if (BodyOneofCase != other.BodyOneofCase) return false;
      if (GroupOneofCase != other.GroupOneofCase) return false;
      if (FlagsOneofCase != other.FlagsOneofCase) return false;
      if (ExpireTimerOneofCase != other.ExpireTimerOneofCase) return false;
      if (ProfileKeyOneofCase != other.ProfileKeyOneofCase) return false;
      if (TimestampOneofCase != other.TimestampOneofCase) return false;
      if (QuoteOneofCase != other.QuoteOneofCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (bodyOneofCase_ == BodyOneofOneofCase.Body) hash ^= Body.GetHashCode();
      hash ^= attachments_.GetHashCode();
      if (groupOneofCase_ == GroupOneofOneofCase.Group) hash ^= Group.GetHashCode();
      if (flagsOneofCase_ == FlagsOneofOneofCase.Flags) hash ^= Flags.GetHashCode();
      if (expireTimerOneofCase_ == ExpireTimerOneofOneofCase.ExpireTimer) hash ^= ExpireTimer.GetHashCode();
      if (profileKeyOneofCase_ == ProfileKeyOneofOneofCase.ProfileKey) hash ^= ProfileKey.GetHashCode();
      if (timestampOneofCase_ == TimestampOneofOneofCase.Timestamp) hash ^= Timestamp.GetHashCode();
      if (quoteOneofCase_ == QuoteOneofOneofCase.Quote) hash ^= Quote.GetHashCode();
      hash ^= (int) bodyOneofCase_;
      hash ^= (int) groupOneofCase_;
      hash ^= (int) flagsOneofCase_;
      hash ^= (int) expireTimerOneofCase_;
      hash ^= (int) profileKeyOneofCase_;
      hash ^= (int) timestampOneofCase_;
      hash ^= (int) quoteOneofCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (bodyOneofCase_ == BodyOneofOneofCase.Body) {
        output.WriteRawTag(10);
        output.WriteString(Body);
      }
      attachments_.WriteTo(output, _repeated_attachments_codec);
      if (groupOneofCase_ == GroupOneofOneofCase.Group) {
        output.WriteRawTag(26);
        output.WriteMessage(Group);
      }
      if (flagsOneofCase_ == FlagsOneofOneofCase.Flags) {
        output.WriteRawTag(32);
        output.WriteUInt32(Flags);
      }
      if (expireTimerOneofCase_ == ExpireTimerOneofOneofCase.ExpireTimer) {
        output.WriteRawTag(40);
        output.WriteUInt32(ExpireTimer);
      }
      if (profileKeyOneofCase_ == ProfileKeyOneofOneofCase.ProfileKey) {
        output.WriteRawTag(50);
        output.WriteBytes(ProfileKey);
      }
      if (timestampOneofCase_ == TimestampOneofOneofCase.Timestamp) {
        output.WriteRawTag(56);
        output.WriteUInt64(Timestamp);
      }
      if (quoteOneofCase_ == QuoteOneofOneofCase.Quote) {
        output.WriteRawTag(66);
        output.WriteMessage(Quote);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (bodyOneofCase_ == BodyOneofOneofCase.Body) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Body);
      }
      size += attachments_.CalculateSize(_repeated_attachments_codec);
      if (groupOneofCase_ == GroupOneofOneofCase.Group) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Group);
      }
      if (flagsOneofCase_ == FlagsOneofOneofCase.Flags) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Flags);
      }
      if (expireTimerOneofCase_ == ExpireTimerOneofOneofCase.ExpireTimer) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ExpireTimer);
      }
      if (profileKeyOneofCase_ == ProfileKeyOneofOneofCase.ProfileKey) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ProfileKey);
      }
      if (timestampOneofCase_ == TimestampOneofOneofCase.Timestamp) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Timestamp);
      }
      if (quoteOneofCase_ == QuoteOneofOneofCase.Quote) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Quote);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataMessage other) {
      if (other == null) {
        return;
      }
      attachments_.Add(other.attachments_);
      switch (other.BodyOneofCase) {
        case BodyOneofOneofCase.Body:
          Body = other.Body;
          break;
      }

      switch (other.GroupOneofCase) {
        case GroupOneofOneofCase.Group:
          if (Group == null) {
            Group = new global::libsignalservice.push.GroupContext();
          }
          Group.MergeFrom(other.Group);
          break;
      }

      switch (other.FlagsOneofCase) {
        case FlagsOneofOneofCase.Flags:
          Flags = other.Flags;
          break;
      }

      switch (other.ExpireTimerOneofCase) {
        case ExpireTimerOneofOneofCase.ExpireTimer:
          ExpireTimer = other.ExpireTimer;
          break;
      }

      switch (other.ProfileKeyOneofCase) {
        case ProfileKeyOneofOneofCase.ProfileKey:
          ProfileKey = other.ProfileKey;
          break;
      }

      switch (other.TimestampOneofCase) {
        case TimestampOneofOneofCase.Timestamp:
          Timestamp = other.Timestamp;
          break;
      }

      switch (other.QuoteOneofCase) {
        case QuoteOneofOneofCase.Quote:
          if (Quote == null) {
            Quote = new global::libsignalservice.push.DataMessage.Types.Quote();
          }
          Quote.MergeFrom(other.Quote);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Body = input.ReadString();
            break;
          }
          case 18: {
            attachments_.AddEntriesFrom(input, _repeated_attachments_codec);
            break;
          }
          case 26: {
            global::libsignalservice.push.GroupContext subBuilder = new global::libsignalservice.push.GroupContext();
            if (groupOneofCase_ == GroupOneofOneofCase.Group) {
              subBuilder.MergeFrom(Group);
            }
            input.ReadMessage(subBuilder);
            Group = subBuilder;
            break;
          }
          case 32: {
            Flags = input.ReadUInt32();
            break;
          }
          case 40: {
            ExpireTimer = input.ReadUInt32();
            break;
          }
          case 50: {
            ProfileKey = input.ReadBytes();
            break;
          }
          case 56: {
            Timestamp = input.ReadUInt64();
            break;
          }
          case 66: {
            global::libsignalservice.push.DataMessage.Types.Quote subBuilder = new global::libsignalservice.push.DataMessage.Types.Quote();
            if (quoteOneofCase_ == QuoteOneofOneofCase.Quote) {
              subBuilder.MergeFrom(Quote);
            }
            input.ReadMessage(subBuilder);
            Quote = subBuilder;
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the DataMessage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Flags {
        [pbr::OriginalName("ZERO_PLACEHOLDER")] ZeroPlaceholder = 0,
        [pbr::OriginalName("END_SESSION")] EndSession = 1,
        [pbr::OriginalName("EXPIRATION_TIMER_UPDATE")] ExpirationTimerUpdate = 2,
        [pbr::OriginalName("PROFILE_KEY_UPDATE")] ProfileKeyUpdate = 4,
      }

      public sealed partial class Quote : pb::IMessage<Quote> {
        private static readonly pb::MessageParser<Quote> _parser = new pb::MessageParser<Quote>(() => new Quote());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Quote> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::libsignalservice.push.DataMessage.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Quote() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Quote(Quote other) : this() {
          attachments_ = other.attachments_.Clone();
          switch (other.IdOneofCase) {
            case IdOneofOneofCase.Id:
              Id = other.Id;
              break;
          }

          switch (other.AuthorOneofCase) {
            case AuthorOneofOneofCase.Author:
              Author = other.Author;
              break;
          }

          switch (other.TextOneofCase) {
            case TextOneofOneofCase.Text:
              Text = other.Text;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Quote Clone() {
          return new Quote(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong Id {
          get { return idOneofCase_ == IdOneofOneofCase.Id ? (ulong) idOneof_ : 0UL; }
          set {
            idOneof_ = value;
            idOneofCase_ = IdOneofOneofCase.Id;
          }
        }

        /// <summary>Field number for the "author" field.</summary>
        public const int AuthorFieldNumber = 2;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Author {
          get { return authorOneofCase_ == AuthorOneofOneofCase.Author ? (string) authorOneof_ : ""; }
          set {
            authorOneof_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            authorOneofCase_ = AuthorOneofOneofCase.Author;
          }
        }

        /// <summary>Field number for the "text" field.</summary>
        public const int TextFieldNumber = 3;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Text {
          get { return textOneofCase_ == TextOneofOneofCase.Text ? (string) textOneof_ : ""; }
          set {
            textOneof_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            textOneofCase_ = TextOneofOneofCase.Text;
          }
        }

        /// <summary>Field number for the "attachments" field.</summary>
        public const int AttachmentsFieldNumber = 4;
        private static readonly pb::FieldCodec<global::libsignalservice.push.DataMessage.Types.Quote.Types.QuotedAttachment> _repeated_attachments_codec
            = pb::FieldCodec.ForMessage(34, global::libsignalservice.push.DataMessage.Types.Quote.Types.QuotedAttachment.Parser);
        private readonly pbc::RepeatedField<global::libsignalservice.push.DataMessage.Types.Quote.Types.QuotedAttachment> attachments_ = new pbc::RepeatedField<global::libsignalservice.push.DataMessage.Types.Quote.Types.QuotedAttachment>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::libsignalservice.push.DataMessage.Types.Quote.Types.QuotedAttachment> Attachments {
          get { return attachments_; }
        }

        private object idOneof_;
        /// <summary>Enum of possible cases for the "id_oneof" oneof.</summary>
        public enum IdOneofOneofCase {
          None = 0,
          Id = 1,
        }
        private IdOneofOneofCase idOneofCase_ = IdOneofOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public IdOneofOneofCase IdOneofCase {
          get { return idOneofCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearIdOneof() {
          idOneofCase_ = IdOneofOneofCase.None;
          idOneof_ = null;
        }

        private object authorOneof_;
        /// <summary>Enum of possible cases for the "author_oneof" oneof.</summary>
        public enum AuthorOneofOneofCase {
          None = 0,
          Author = 2,
        }
        private AuthorOneofOneofCase authorOneofCase_ = AuthorOneofOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AuthorOneofOneofCase AuthorOneofCase {
          get { return authorOneofCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearAuthorOneof() {
          authorOneofCase_ = AuthorOneofOneofCase.None;
          authorOneof_ = null;
        }

        private object textOneof_;
        /// <summary>Enum of possible cases for the "text_oneof" oneof.</summary>
        public enum TextOneofOneofCase {
          None = 0,
          Text = 3,
        }
        private TextOneofOneofCase textOneofCase_ = TextOneofOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TextOneofOneofCase TextOneofCase {
          get { return textOneofCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearTextOneof() {
          textOneofCase_ = TextOneofOneofCase.None;
          textOneof_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Quote);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Quote other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (Author != other.Author) return false;
          if (Text != other.Text) return false;
          if(!attachments_.Equals(other.attachments_)) return false;
          if (IdOneofCase != other.IdOneofCase) return false;
          if (AuthorOneofCase != other.AuthorOneofCase) return false;
          if (TextOneofCase != other.TextOneofCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (idOneofCase_ == IdOneofOneofCase.Id) hash ^= Id.GetHashCode();
          if (authorOneofCase_ == AuthorOneofOneofCase.Author) hash ^= Author.GetHashCode();
          if (textOneofCase_ == TextOneofOneofCase.Text) hash ^= Text.GetHashCode();
          hash ^= attachments_.GetHashCode();
          hash ^= (int) idOneofCase_;
          hash ^= (int) authorOneofCase_;
          hash ^= (int) textOneofCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (idOneofCase_ == IdOneofOneofCase.Id) {
            output.WriteRawTag(8);
            output.WriteUInt64(Id);
          }
          if (authorOneofCase_ == AuthorOneofOneofCase.Author) {
            output.WriteRawTag(18);
            output.WriteString(Author);
          }
          if (textOneofCase_ == TextOneofOneofCase.Text) {
            output.WriteRawTag(26);
            output.WriteString(Text);
          }
          attachments_.WriteTo(output, _repeated_attachments_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (idOneofCase_ == IdOneofOneofCase.Id) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Id);
          }
          if (authorOneofCase_ == AuthorOneofOneofCase.Author) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Author);
          }
          if (textOneofCase_ == TextOneofOneofCase.Text) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
          }
          size += attachments_.CalculateSize(_repeated_attachments_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Quote other) {
          if (other == null) {
            return;
          }
          attachments_.Add(other.attachments_);
          switch (other.IdOneofCase) {
            case IdOneofOneofCase.Id:
              Id = other.Id;
              break;
          }

          switch (other.AuthorOneofCase) {
            case AuthorOneofOneofCase.Author:
              Author = other.Author;
              break;
          }

          switch (other.TextOneofCase) {
            case TextOneofOneofCase.Text:
              Text = other.Text;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Id = input.ReadUInt64();
                break;
              }
              case 18: {
                Author = input.ReadString();
                break;
              }
              case 26: {
                Text = input.ReadString();
                break;
              }
              case 34: {
                attachments_.AddEntriesFrom(input, _repeated_attachments_codec);
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the Quote message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class QuotedAttachment : pb::IMessage<QuotedAttachment> {
            private static readonly pb::MessageParser<QuotedAttachment> _parser = new pb::MessageParser<QuotedAttachment>(() => new QuotedAttachment());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<QuotedAttachment> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::libsignalservice.push.DataMessage.Types.Quote.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public QuotedAttachment() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public QuotedAttachment(QuotedAttachment other) : this() {
              switch (other.ContentTypeOneofCase) {
                case ContentTypeOneofOneofCase.ContentType:
                  ContentType = other.ContentType;
                  break;
              }

              switch (other.FileNameOneofCase) {
                case FileNameOneofOneofCase.FileName:
                  FileName = other.FileName;
                  break;
              }

              switch (other.ThumbnailOneofCase) {
                case ThumbnailOneofOneofCase.Thumbnail:
                  Thumbnail = other.Thumbnail.Clone();
                  break;
              }

              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public QuotedAttachment Clone() {
              return new QuotedAttachment(this);
            }

            /// <summary>Field number for the "contentType" field.</summary>
            public const int ContentTypeFieldNumber = 1;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string ContentType {
              get { return contentTypeOneofCase_ == ContentTypeOneofOneofCase.ContentType ? (string) contentTypeOneof_ : ""; }
              set {
                contentTypeOneof_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                contentTypeOneofCase_ = ContentTypeOneofOneofCase.ContentType;
              }
            }

            /// <summary>Field number for the "fileName" field.</summary>
            public const int FileNameFieldNumber = 2;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string FileName {
              get { return fileNameOneofCase_ == FileNameOneofOneofCase.FileName ? (string) fileNameOneof_ : ""; }
              set {
                fileNameOneof_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                fileNameOneofCase_ = FileNameOneofOneofCase.FileName;
              }
            }

            /// <summary>Field number for the "thumbnail" field.</summary>
            public const int ThumbnailFieldNumber = 3;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::libsignalservice.push.AttachmentPointer Thumbnail {
              get { return thumbnailOneofCase_ == ThumbnailOneofOneofCase.Thumbnail ? (global::libsignalservice.push.AttachmentPointer) thumbnailOneof_ : null; }
              set {
                thumbnailOneof_ = value;
                thumbnailOneofCase_ = value == null ? ThumbnailOneofOneofCase.None : ThumbnailOneofOneofCase.Thumbnail;
              }
            }

            private object contentTypeOneof_;
            /// <summary>Enum of possible cases for the "contentType_oneof" oneof.</summary>
            public enum ContentTypeOneofOneofCase {
              None = 0,
              ContentType = 1,
            }
            private ContentTypeOneofOneofCase contentTypeOneofCase_ = ContentTypeOneofOneofCase.None;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ContentTypeOneofOneofCase ContentTypeOneofCase {
              get { return contentTypeOneofCase_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void ClearContentTypeOneof() {
              contentTypeOneofCase_ = ContentTypeOneofOneofCase.None;
              contentTypeOneof_ = null;
            }

            private object fileNameOneof_;
            /// <summary>Enum of possible cases for the "fileName_oneof" oneof.</summary>
            public enum FileNameOneofOneofCase {
              None = 0,
              FileName = 2,
            }
            private FileNameOneofOneofCase fileNameOneofCase_ = FileNameOneofOneofCase.None;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public FileNameOneofOneofCase FileNameOneofCase {
              get { return fileNameOneofCase_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void ClearFileNameOneof() {
              fileNameOneofCase_ = FileNameOneofOneofCase.None;
              fileNameOneof_ = null;
            }

            private object thumbnailOneof_;
            /// <summary>Enum of possible cases for the "thumbnail_oneof" oneof.</summary>
            public enum ThumbnailOneofOneofCase {
              None = 0,
              Thumbnail = 3,
            }
            private ThumbnailOneofOneofCase thumbnailOneofCase_ = ThumbnailOneofOneofCase.None;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ThumbnailOneofOneofCase ThumbnailOneofCase {
              get { return thumbnailOneofCase_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void ClearThumbnailOneof() {
              thumbnailOneofCase_ = ThumbnailOneofOneofCase.None;
              thumbnailOneof_ = null;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as QuotedAttachment);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(QuotedAttachment other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (ContentType != other.ContentType) return false;
              if (FileName != other.FileName) return false;
              if (!object.Equals(Thumbnail, other.Thumbnail)) return false;
              if (ContentTypeOneofCase != other.ContentTypeOneofCase) return false;
              if (FileNameOneofCase != other.FileNameOneofCase) return false;
              if (ThumbnailOneofCase != other.ThumbnailOneofCase) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (contentTypeOneofCase_ == ContentTypeOneofOneofCase.ContentType) hash ^= ContentType.GetHashCode();
              if (fileNameOneofCase_ == FileNameOneofOneofCase.FileName) hash ^= FileName.GetHashCode();
              if (thumbnailOneofCase_ == ThumbnailOneofOneofCase.Thumbnail) hash ^= Thumbnail.GetHashCode();
              hash ^= (int) contentTypeOneofCase_;
              hash ^= (int) fileNameOneofCase_;
              hash ^= (int) thumbnailOneofCase_;
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (contentTypeOneofCase_ == ContentTypeOneofOneofCase.ContentType) {
                output.WriteRawTag(10);
                output.WriteString(ContentType);
              }
              if (fileNameOneofCase_ == FileNameOneofOneofCase.FileName) {
                output.WriteRawTag(18);
                output.WriteString(FileName);
              }
              if (thumbnailOneofCase_ == ThumbnailOneofOneofCase.Thumbnail) {
                output.WriteRawTag(26);
                output.WriteMessage(Thumbnail);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (contentTypeOneofCase_ == ContentTypeOneofOneofCase.ContentType) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentType);
              }
              if (fileNameOneofCase_ == FileNameOneofOneofCase.FileName) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(FileName);
              }
              if (thumbnailOneofCase_ == ThumbnailOneofOneofCase.Thumbnail) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Thumbnail);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(QuotedAttachment other) {
              if (other == null) {
                return;
              }
              switch (other.ContentTypeOneofCase) {
                case ContentTypeOneofOneofCase.ContentType:
                  ContentType = other.ContentType;
                  break;
              }

              switch (other.FileNameOneofCase) {
                case FileNameOneofOneofCase.FileName:
                  FileName = other.FileName;
                  break;
              }

              switch (other.ThumbnailOneofCase) {
                case ThumbnailOneofOneofCase.Thumbnail:
                  if (Thumbnail == null) {
                    Thumbnail = new global::libsignalservice.push.AttachmentPointer();
                  }
                  Thumbnail.MergeFrom(other.Thumbnail);
                  break;
              }

              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    ContentType = input.ReadString();
                    break;
                  }
                  case 18: {
                    FileName = input.ReadString();
                    break;
                  }
                  case 26: {
                    global::libsignalservice.push.AttachmentPointer subBuilder = new global::libsignalservice.push.AttachmentPointer();
                    if (thumbnailOneofCase_ == ThumbnailOneofOneofCase.Thumbnail) {
                      subBuilder.MergeFrom(Thumbnail);
                    }
                    input.ReadMessage(subBuilder);
                    Thumbnail = subBuilder;
                    break;
                  }
                }
              }
            }

          }

        }
        #endregion

      }

    }
    #endregion

  }

  public sealed partial class NullMessage : pb::IMessage<NullMessage> {
    private static readonly pb::MessageParser<NullMessage> _parser = new pb::MessageParser<NullMessage>(() => new NullMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NullMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::libsignalservice.push.SignalServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NullMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NullMessage(NullMessage other) : this() {
      switch (other.PaddingOneofCase) {
        case PaddingOneofOneofCase.Padding:
          Padding = other.Padding;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NullMessage Clone() {
      return new NullMessage(this);
    }

    /// <summary>Field number for the "padding" field.</summary>
    public const int PaddingFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Padding {
      get { return paddingOneofCase_ == PaddingOneofOneofCase.Padding ? (pb::ByteString) paddingOneof_ : pb::ByteString.Empty; }
      set {
        paddingOneof_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        paddingOneofCase_ = PaddingOneofOneofCase.Padding;
      }
    }

    private object paddingOneof_;
    /// <summary>Enum of possible cases for the "padding_oneof" oneof.</summary>
    public enum PaddingOneofOneofCase {
      None = 0,
      Padding = 1,
    }
    private PaddingOneofOneofCase paddingOneofCase_ = PaddingOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaddingOneofOneofCase PaddingOneofCase {
      get { return paddingOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPaddingOneof() {
      paddingOneofCase_ = PaddingOneofOneofCase.None;
      paddingOneof_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NullMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NullMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Padding != other.Padding) return false;
      if (PaddingOneofCase != other.PaddingOneofCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (paddingOneofCase_ == PaddingOneofOneofCase.Padding) hash ^= Padding.GetHashCode();
      hash ^= (int) paddingOneofCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (paddingOneofCase_ == PaddingOneofOneofCase.Padding) {
        output.WriteRawTag(10);
        output.WriteBytes(Padding);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (paddingOneofCase_ == PaddingOneofOneofCase.Padding) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Padding);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NullMessage other) {
      if (other == null) {
        return;
      }
      switch (other.PaddingOneofCase) {
        case PaddingOneofOneofCase.Padding:
          Padding = other.Padding;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Padding = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReceiptMessage : pb::IMessage<ReceiptMessage> {
    private static readonly pb::MessageParser<ReceiptMessage> _parser = new pb::MessageParser<ReceiptMessage>(() => new ReceiptMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReceiptMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::libsignalservice.push.SignalServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceiptMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceiptMessage(ReceiptMessage other) : this() {
      timestamp_ = other.timestamp_.Clone();
      switch (other.TypeOneofCase) {
        case TypeOneofOneofCase.Type:
          Type = other.Type;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceiptMessage Clone() {
      return new ReceiptMessage(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::libsignalservice.push.ReceiptMessage.Types.Type Type {
      get { return typeOneofCase_ == TypeOneofOneofCase.Type ? (global::libsignalservice.push.ReceiptMessage.Types.Type) typeOneof_ : 0; }
      set {
        typeOneof_ = value;
        typeOneofCase_ = TypeOneofOneofCase.Type;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 2;
    private static readonly pb::FieldCodec<ulong> _repeated_timestamp_codec
        = pb::FieldCodec.ForUInt64(18);
    private readonly pbc::RepeatedField<ulong> timestamp_ = new pbc::RepeatedField<ulong>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<ulong> Timestamp {
      get { return timestamp_; }
    }

    private object typeOneof_;
    /// <summary>Enum of possible cases for the "type_oneof" oneof.</summary>
    public enum TypeOneofOneofCase {
      None = 0,
      Type = 1,
    }
    private TypeOneofOneofCase typeOneofCase_ = TypeOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeOneofOneofCase TypeOneofCase {
      get { return typeOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTypeOneof() {
      typeOneofCase_ = TypeOneofOneofCase.None;
      typeOneof_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReceiptMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReceiptMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if(!timestamp_.Equals(other.timestamp_)) return false;
      if (TypeOneofCase != other.TypeOneofCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (typeOneofCase_ == TypeOneofOneofCase.Type) hash ^= Type.GetHashCode();
      hash ^= timestamp_.GetHashCode();
      hash ^= (int) typeOneofCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (typeOneofCase_ == TypeOneofOneofCase.Type) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      timestamp_.WriteTo(output, _repeated_timestamp_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (typeOneofCase_ == TypeOneofOneofCase.Type) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      size += timestamp_.CalculateSize(_repeated_timestamp_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReceiptMessage other) {
      if (other == null) {
        return;
      }
      timestamp_.Add(other.timestamp_);
      switch (other.TypeOneofCase) {
        case TypeOneofOneofCase.Type:
          Type = other.Type;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            typeOneof_ = input.ReadEnum();
            typeOneofCase_ = TypeOneofOneofCase.Type;
            break;
          }
          case 18:
          case 16: {
            timestamp_.AddEntriesFrom(input, _repeated_timestamp_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ReceiptMessage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Type {
        [pbr::OriginalName("DELIVERY")] Delivery = 0,
        [pbr::OriginalName("READ")] Read = 1,
      }

    }
    #endregion

  }

  public sealed partial class Verified : pb::IMessage<Verified> {
    private static readonly pb::MessageParser<Verified> _parser = new pb::MessageParser<Verified>(() => new Verified());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Verified> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::libsignalservice.push.SignalServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Verified() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Verified(Verified other) : this() {
      switch (other.DestinationOneofCase) {
        case DestinationOneofOneofCase.Destination:
          Destination = other.Destination;
          break;
      }

      switch (other.IdentityKeyOneofCase) {
        case IdentityKeyOneofOneofCase.IdentityKey:
          IdentityKey = other.IdentityKey;
          break;
      }

      switch (other.StateOneofCase) {
        case StateOneofOneofCase.State:
          State = other.State;
          break;
      }

      switch (other.NullMessageOneofCase) {
        case NullMessageOneofOneofCase.NullMessage:
          NullMessage = other.NullMessage;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Verified Clone() {
      return new Verified(this);
    }

    /// <summary>Field number for the "destination" field.</summary>
    public const int DestinationFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Destination {
      get { return destinationOneofCase_ == DestinationOneofOneofCase.Destination ? (string) destinationOneof_ : ""; }
      set {
        destinationOneof_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        destinationOneofCase_ = DestinationOneofOneofCase.Destination;
      }
    }

    /// <summary>Field number for the "identityKey" field.</summary>
    public const int IdentityKeyFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString IdentityKey {
      get { return identityKeyOneofCase_ == IdentityKeyOneofOneofCase.IdentityKey ? (pb::ByteString) identityKeyOneof_ : pb::ByteString.Empty; }
      set {
        identityKeyOneof_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        identityKeyOneofCase_ = IdentityKeyOneofOneofCase.IdentityKey;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::libsignalservice.push.Verified.Types.State State {
      get { return stateOneofCase_ == StateOneofOneofCase.State ? (global::libsignalservice.push.Verified.Types.State) stateOneof_ : 0; }
      set {
        stateOneof_ = value;
        stateOneofCase_ = StateOneofOneofCase.State;
      }
    }

    /// <summary>Field number for the "nullMessage" field.</summary>
    public const int NullMessageFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString NullMessage {
      get { return nullMessageOneofCase_ == NullMessageOneofOneofCase.NullMessage ? (pb::ByteString) nullMessageOneof_ : pb::ByteString.Empty; }
      set {
        nullMessageOneof_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        nullMessageOneofCase_ = NullMessageOneofOneofCase.NullMessage;
      }
    }

    private object destinationOneof_;
    /// <summary>Enum of possible cases for the "destination_oneof" oneof.</summary>
    public enum DestinationOneofOneofCase {
      None = 0,
      Destination = 1,
    }
    private DestinationOneofOneofCase destinationOneofCase_ = DestinationOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DestinationOneofOneofCase DestinationOneofCase {
      get { return destinationOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDestinationOneof() {
      destinationOneofCase_ = DestinationOneofOneofCase.None;
      destinationOneof_ = null;
    }

    private object identityKeyOneof_;
    /// <summary>Enum of possible cases for the "identityKey_oneof" oneof.</summary>
    public enum IdentityKeyOneofOneofCase {
      None = 0,
      IdentityKey = 2,
    }
    private IdentityKeyOneofOneofCase identityKeyOneofCase_ = IdentityKeyOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdentityKeyOneofOneofCase IdentityKeyOneofCase {
      get { return identityKeyOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIdentityKeyOneof() {
      identityKeyOneofCase_ = IdentityKeyOneofOneofCase.None;
      identityKeyOneof_ = null;
    }

    private object stateOneof_;
    /// <summary>Enum of possible cases for the "state_oneof" oneof.</summary>
    public enum StateOneofOneofCase {
      None = 0,
      State = 3,
    }
    private StateOneofOneofCase stateOneofCase_ = StateOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StateOneofOneofCase StateOneofCase {
      get { return stateOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStateOneof() {
      stateOneofCase_ = StateOneofOneofCase.None;
      stateOneof_ = null;
    }

    private object nullMessageOneof_;
    /// <summary>Enum of possible cases for the "nullMessage_oneof" oneof.</summary>
    public enum NullMessageOneofOneofCase {
      None = 0,
      NullMessage = 4,
    }
    private NullMessageOneofOneofCase nullMessageOneofCase_ = NullMessageOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NullMessageOneofOneofCase NullMessageOneofCase {
      get { return nullMessageOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNullMessageOneof() {
      nullMessageOneofCase_ = NullMessageOneofOneofCase.None;
      nullMessageOneof_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Verified);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Verified other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Destination != other.Destination) return false;
      if (IdentityKey != other.IdentityKey) return false;
      if (State != other.State) return false;
      if (NullMessage != other.NullMessage) return false;
      if (DestinationOneofCase != other.DestinationOneofCase) return false;
      if (IdentityKeyOneofCase != other.IdentityKeyOneofCase) return false;
      if (StateOneofCase != other.StateOneofCase) return false;
      if (NullMessageOneofCase != other.NullMessageOneofCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (destinationOneofCase_ == DestinationOneofOneofCase.Destination) hash ^= Destination.GetHashCode();
      if (identityKeyOneofCase_ == IdentityKeyOneofOneofCase.IdentityKey) hash ^= IdentityKey.GetHashCode();
      if (stateOneofCase_ == StateOneofOneofCase.State) hash ^= State.GetHashCode();
      if (nullMessageOneofCase_ == NullMessageOneofOneofCase.NullMessage) hash ^= NullMessage.GetHashCode();
      hash ^= (int) destinationOneofCase_;
      hash ^= (int) identityKeyOneofCase_;
      hash ^= (int) stateOneofCase_;
      hash ^= (int) nullMessageOneofCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (destinationOneofCase_ == DestinationOneofOneofCase.Destination) {
        output.WriteRawTag(10);
        output.WriteString(Destination);
      }
      if (identityKeyOneofCase_ == IdentityKeyOneofOneofCase.IdentityKey) {
        output.WriteRawTag(18);
        output.WriteBytes(IdentityKey);
      }
      if (stateOneofCase_ == StateOneofOneofCase.State) {
        output.WriteRawTag(24);
        output.WriteEnum((int) State);
      }
      if (nullMessageOneofCase_ == NullMessageOneofOneofCase.NullMessage) {
        output.WriteRawTag(34);
        output.WriteBytes(NullMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (destinationOneofCase_ == DestinationOneofOneofCase.Destination) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Destination);
      }
      if (identityKeyOneofCase_ == IdentityKeyOneofOneofCase.IdentityKey) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(IdentityKey);
      }
      if (stateOneofCase_ == StateOneofOneofCase.State) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (nullMessageOneofCase_ == NullMessageOneofOneofCase.NullMessage) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(NullMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Verified other) {
      if (other == null) {
        return;
      }
      switch (other.DestinationOneofCase) {
        case DestinationOneofOneofCase.Destination:
          Destination = other.Destination;
          break;
      }

      switch (other.IdentityKeyOneofCase) {
        case IdentityKeyOneofOneofCase.IdentityKey:
          IdentityKey = other.IdentityKey;
          break;
      }

      switch (other.StateOneofCase) {
        case StateOneofOneofCase.State:
          State = other.State;
          break;
      }

      switch (other.NullMessageOneofCase) {
        case NullMessageOneofOneofCase.NullMessage:
          NullMessage = other.NullMessage;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Destination = input.ReadString();
            break;
          }
          case 18: {
            IdentityKey = input.ReadBytes();
            break;
          }
          case 24: {
            stateOneof_ = input.ReadEnum();
            stateOneofCase_ = StateOneofOneofCase.State;
            break;
          }
          case 34: {
            NullMessage = input.ReadBytes();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Verified message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum State {
        [pbr::OriginalName("DEFAULT")] Default = 0,
        [pbr::OriginalName("VERIFIED")] Verified = 1,
        [pbr::OriginalName("UNVERIFIED")] Unverified = 2,
      }

    }
    #endregion

  }

  public sealed partial class SyncMessage : pb::IMessage<SyncMessage> {
    private static readonly pb::MessageParser<SyncMessage> _parser = new pb::MessageParser<SyncMessage>(() => new SyncMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SyncMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::libsignalservice.push.SignalServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SyncMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SyncMessage(SyncMessage other) : this() {
      read_ = other.read_.Clone();
      switch (other.SentOneofCase) {
        case SentOneofOneofCase.Sent:
          Sent = other.Sent.Clone();
          break;
      }

      switch (other.ContactsOneofCase) {
        case ContactsOneofOneofCase.Contacts:
          Contacts = other.Contacts.Clone();
          break;
      }

      switch (other.GroupsOneofCase) {
        case GroupsOneofOneofCase.Groups:
          Groups = other.Groups.Clone();
          break;
      }

      switch (other.RequestOneofCase) {
        case RequestOneofOneofCase.Request:
          Request = other.Request.Clone();
          break;
      }

      switch (other.BlockedOneofCase) {
        case BlockedOneofOneofCase.Blocked:
          Blocked = other.Blocked.Clone();
          break;
      }

      switch (other.VerifiedOneofCase) {
        case VerifiedOneofOneofCase.Verified:
          Verified = other.Verified.Clone();
          break;
      }

      switch (other.ConfigurationOneofCase) {
        case ConfigurationOneofOneofCase.Configuration:
          Configuration = other.Configuration.Clone();
          break;
      }

      switch (other.PaddingOneofCase) {
        case PaddingOneofOneofCase.Padding:
          Padding = other.Padding;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SyncMessage Clone() {
      return new SyncMessage(this);
    }

    /// <summary>Field number for the "sent" field.</summary>
    public const int SentFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::libsignalservice.push.SyncMessage.Types.Sent Sent {
      get { return sentOneofCase_ == SentOneofOneofCase.Sent ? (global::libsignalservice.push.SyncMessage.Types.Sent) sentOneof_ : null; }
      set {
        sentOneof_ = value;
        sentOneofCase_ = value == null ? SentOneofOneofCase.None : SentOneofOneofCase.Sent;
      }
    }

    /// <summary>Field number for the "contacts" field.</summary>
    public const int ContactsFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::libsignalservice.push.SyncMessage.Types.Contacts Contacts {
      get { return contactsOneofCase_ == ContactsOneofOneofCase.Contacts ? (global::libsignalservice.push.SyncMessage.Types.Contacts) contactsOneof_ : null; }
      set {
        contactsOneof_ = value;
        contactsOneofCase_ = value == null ? ContactsOneofOneofCase.None : ContactsOneofOneofCase.Contacts;
      }
    }

    /// <summary>Field number for the "groups" field.</summary>
    public const int GroupsFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::libsignalservice.push.SyncMessage.Types.Groups Groups {
      get { return groupsOneofCase_ == GroupsOneofOneofCase.Groups ? (global::libsignalservice.push.SyncMessage.Types.Groups) groupsOneof_ : null; }
      set {
        groupsOneof_ = value;
        groupsOneofCase_ = value == null ? GroupsOneofOneofCase.None : GroupsOneofOneofCase.Groups;
      }
    }

    /// <summary>Field number for the "request" field.</summary>
    public const int RequestFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::libsignalservice.push.SyncMessage.Types.Request Request {
      get { return requestOneofCase_ == RequestOneofOneofCase.Request ? (global::libsignalservice.push.SyncMessage.Types.Request) requestOneof_ : null; }
      set {
        requestOneof_ = value;
        requestOneofCase_ = value == null ? RequestOneofOneofCase.None : RequestOneofOneofCase.Request;
      }
    }

    /// <summary>Field number for the "read" field.</summary>
    public const int ReadFieldNumber = 5;
    private static readonly pb::FieldCodec<global::libsignalservice.push.SyncMessage.Types.Read> _repeated_read_codec
        = pb::FieldCodec.ForMessage(42, global::libsignalservice.push.SyncMessage.Types.Read.Parser);
    private readonly pbc::RepeatedField<global::libsignalservice.push.SyncMessage.Types.Read> read_ = new pbc::RepeatedField<global::libsignalservice.push.SyncMessage.Types.Read>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::libsignalservice.push.SyncMessage.Types.Read> Read {
      get { return read_; }
    }

    /// <summary>Field number for the "blocked" field.</summary>
    public const int BlockedFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::libsignalservice.push.SyncMessage.Types.Blocked Blocked {
      get { return blockedOneofCase_ == BlockedOneofOneofCase.Blocked ? (global::libsignalservice.push.SyncMessage.Types.Blocked) blockedOneof_ : null; }
      set {
        blockedOneof_ = value;
        blockedOneofCase_ = value == null ? BlockedOneofOneofCase.None : BlockedOneofOneofCase.Blocked;
      }
    }

    /// <summary>Field number for the "verified" field.</summary>
    public const int VerifiedFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::libsignalservice.push.Verified Verified {
      get { return verifiedOneofCase_ == VerifiedOneofOneofCase.Verified ? (global::libsignalservice.push.Verified) verifiedOneof_ : null; }
      set {
        verifiedOneof_ = value;
        verifiedOneofCase_ = value == null ? VerifiedOneofOneofCase.None : VerifiedOneofOneofCase.Verified;
      }
    }

    /// <summary>Field number for the "configuration" field.</summary>
    public const int ConfigurationFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::libsignalservice.push.SyncMessage.Types.Configuration Configuration {
      get { return configurationOneofCase_ == ConfigurationOneofOneofCase.Configuration ? (global::libsignalservice.push.SyncMessage.Types.Configuration) configurationOneof_ : null; }
      set {
        configurationOneof_ = value;
        configurationOneofCase_ = value == null ? ConfigurationOneofOneofCase.None : ConfigurationOneofOneofCase.Configuration;
      }
    }

    /// <summary>Field number for the "padding" field.</summary>
    public const int PaddingFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Padding {
      get { return paddingOneofCase_ == PaddingOneofOneofCase.Padding ? (pb::ByteString) paddingOneof_ : pb::ByteString.Empty; }
      set {
        paddingOneof_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        paddingOneofCase_ = PaddingOneofOneofCase.Padding;
      }
    }

    private object sentOneof_;
    /// <summary>Enum of possible cases for the "sent_oneof" oneof.</summary>
    public enum SentOneofOneofCase {
      None = 0,
      Sent = 1,
    }
    private SentOneofOneofCase sentOneofCase_ = SentOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SentOneofOneofCase SentOneofCase {
      get { return sentOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSentOneof() {
      sentOneofCase_ = SentOneofOneofCase.None;
      sentOneof_ = null;
    }

    private object contactsOneof_;
    /// <summary>Enum of possible cases for the "contacts_oneof" oneof.</summary>
    public enum ContactsOneofOneofCase {
      None = 0,
      Contacts = 2,
    }
    private ContactsOneofOneofCase contactsOneofCase_ = ContactsOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContactsOneofOneofCase ContactsOneofCase {
      get { return contactsOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearContactsOneof() {
      contactsOneofCase_ = ContactsOneofOneofCase.None;
      contactsOneof_ = null;
    }

    private object groupsOneof_;
    /// <summary>Enum of possible cases for the "groups_oneof" oneof.</summary>
    public enum GroupsOneofOneofCase {
      None = 0,
      Groups = 3,
    }
    private GroupsOneofOneofCase groupsOneofCase_ = GroupsOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupsOneofOneofCase GroupsOneofCase {
      get { return groupsOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGroupsOneof() {
      groupsOneofCase_ = GroupsOneofOneofCase.None;
      groupsOneof_ = null;
    }

    private object requestOneof_;
    /// <summary>Enum of possible cases for the "request_oneof" oneof.</summary>
    public enum RequestOneofOneofCase {
      None = 0,
      Request = 4,
    }
    private RequestOneofOneofCase requestOneofCase_ = RequestOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestOneofOneofCase RequestOneofCase {
      get { return requestOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRequestOneof() {
      requestOneofCase_ = RequestOneofOneofCase.None;
      requestOneof_ = null;
    }

    private object blockedOneof_;
    /// <summary>Enum of possible cases for the "blocked_oneof" oneof.</summary>
    public enum BlockedOneofOneofCase {
      None = 0,
      Blocked = 6,
    }
    private BlockedOneofOneofCase blockedOneofCase_ = BlockedOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockedOneofOneofCase BlockedOneofCase {
      get { return blockedOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBlockedOneof() {
      blockedOneofCase_ = BlockedOneofOneofCase.None;
      blockedOneof_ = null;
    }

    private object verifiedOneof_;
    /// <summary>Enum of possible cases for the "verified_oneof" oneof.</summary>
    public enum VerifiedOneofOneofCase {
      None = 0,
      Verified = 7,
    }
    private VerifiedOneofOneofCase verifiedOneofCase_ = VerifiedOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifiedOneofOneofCase VerifiedOneofCase {
      get { return verifiedOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVerifiedOneof() {
      verifiedOneofCase_ = VerifiedOneofOneofCase.None;
      verifiedOneof_ = null;
    }

    private object configurationOneof_;
    /// <summary>Enum of possible cases for the "configuration_oneof" oneof.</summary>
    public enum ConfigurationOneofOneofCase {
      None = 0,
      Configuration = 9,
    }
    private ConfigurationOneofOneofCase configurationOneofCase_ = ConfigurationOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfigurationOneofOneofCase ConfigurationOneofCase {
      get { return configurationOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearConfigurationOneof() {
      configurationOneofCase_ = ConfigurationOneofOneofCase.None;
      configurationOneof_ = null;
    }

    private object paddingOneof_;
    /// <summary>Enum of possible cases for the "padding_oneof" oneof.</summary>
    public enum PaddingOneofOneofCase {
      None = 0,
      Padding = 8,
    }
    private PaddingOneofOneofCase paddingOneofCase_ = PaddingOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaddingOneofOneofCase PaddingOneofCase {
      get { return paddingOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPaddingOneof() {
      paddingOneofCase_ = PaddingOneofOneofCase.None;
      paddingOneof_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SyncMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SyncMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Sent, other.Sent)) return false;
      if (!object.Equals(Contacts, other.Contacts)) return false;
      if (!object.Equals(Groups, other.Groups)) return false;
      if (!object.Equals(Request, other.Request)) return false;
      if(!read_.Equals(other.read_)) return false;
      if (!object.Equals(Blocked, other.Blocked)) return false;
      if (!object.Equals(Verified, other.Verified)) return false;
      if (!object.Equals(Configuration, other.Configuration)) return false;
      if (Padding != other.Padding) return false;
      if (SentOneofCase != other.SentOneofCase) return false;
      if (ContactsOneofCase != other.ContactsOneofCase) return false;
      if (GroupsOneofCase != other.GroupsOneofCase) return false;
      if (RequestOneofCase != other.RequestOneofCase) return false;
      if (BlockedOneofCase != other.BlockedOneofCase) return false;
      if (VerifiedOneofCase != other.VerifiedOneofCase) return false;
      if (ConfigurationOneofCase != other.ConfigurationOneofCase) return false;
      if (PaddingOneofCase != other.PaddingOneofCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (sentOneofCase_ == SentOneofOneofCase.Sent) hash ^= Sent.GetHashCode();
      if (contactsOneofCase_ == ContactsOneofOneofCase.Contacts) hash ^= Contacts.GetHashCode();
      if (groupsOneofCase_ == GroupsOneofOneofCase.Groups) hash ^= Groups.GetHashCode();
      if (requestOneofCase_ == RequestOneofOneofCase.Request) hash ^= Request.GetHashCode();
      hash ^= read_.GetHashCode();
      if (blockedOneofCase_ == BlockedOneofOneofCase.Blocked) hash ^= Blocked.GetHashCode();
      if (verifiedOneofCase_ == VerifiedOneofOneofCase.Verified) hash ^= Verified.GetHashCode();
      if (configurationOneofCase_ == ConfigurationOneofOneofCase.Configuration) hash ^= Configuration.GetHashCode();
      if (paddingOneofCase_ == PaddingOneofOneofCase.Padding) hash ^= Padding.GetHashCode();
      hash ^= (int) sentOneofCase_;
      hash ^= (int) contactsOneofCase_;
      hash ^= (int) groupsOneofCase_;
      hash ^= (int) requestOneofCase_;
      hash ^= (int) blockedOneofCase_;
      hash ^= (int) verifiedOneofCase_;
      hash ^= (int) configurationOneofCase_;
      hash ^= (int) paddingOneofCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (sentOneofCase_ == SentOneofOneofCase.Sent) {
        output.WriteRawTag(10);
        output.WriteMessage(Sent);
      }
      if (contactsOneofCase_ == ContactsOneofOneofCase.Contacts) {
        output.WriteRawTag(18);
        output.WriteMessage(Contacts);
      }
      if (groupsOneofCase_ == GroupsOneofOneofCase.Groups) {
        output.WriteRawTag(26);
        output.WriteMessage(Groups);
      }
      if (requestOneofCase_ == RequestOneofOneofCase.Request) {
        output.WriteRawTag(34);
        output.WriteMessage(Request);
      }
      read_.WriteTo(output, _repeated_read_codec);
      if (blockedOneofCase_ == BlockedOneofOneofCase.Blocked) {
        output.WriteRawTag(50);
        output.WriteMessage(Blocked);
      }
      if (verifiedOneofCase_ == VerifiedOneofOneofCase.Verified) {
        output.WriteRawTag(58);
        output.WriteMessage(Verified);
      }
      if (paddingOneofCase_ == PaddingOneofOneofCase.Padding) {
        output.WriteRawTag(66);
        output.WriteBytes(Padding);
      }
      if (configurationOneofCase_ == ConfigurationOneofOneofCase.Configuration) {
        output.WriteRawTag(74);
        output.WriteMessage(Configuration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (sentOneofCase_ == SentOneofOneofCase.Sent) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Sent);
      }
      if (contactsOneofCase_ == ContactsOneofOneofCase.Contacts) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Contacts);
      }
      if (groupsOneofCase_ == GroupsOneofOneofCase.Groups) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Groups);
      }
      if (requestOneofCase_ == RequestOneofOneofCase.Request) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Request);
      }
      size += read_.CalculateSize(_repeated_read_codec);
      if (blockedOneofCase_ == BlockedOneofOneofCase.Blocked) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Blocked);
      }
      if (verifiedOneofCase_ == VerifiedOneofOneofCase.Verified) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Verified);
      }
      if (configurationOneofCase_ == ConfigurationOneofOneofCase.Configuration) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Configuration);
      }
      if (paddingOneofCase_ == PaddingOneofOneofCase.Padding) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Padding);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SyncMessage other) {
      if (other == null) {
        return;
      }
      read_.Add(other.read_);
      switch (other.SentOneofCase) {
        case SentOneofOneofCase.Sent:
          if (Sent == null) {
            Sent = new global::libsignalservice.push.SyncMessage.Types.Sent();
          }
          Sent.MergeFrom(other.Sent);
          break;
      }

      switch (other.ContactsOneofCase) {
        case ContactsOneofOneofCase.Contacts:
          if (Contacts == null) {
            Contacts = new global::libsignalservice.push.SyncMessage.Types.Contacts();
          }
          Contacts.MergeFrom(other.Contacts);
          break;
      }

      switch (other.GroupsOneofCase) {
        case GroupsOneofOneofCase.Groups:
          if (Groups == null) {
            Groups = new global::libsignalservice.push.SyncMessage.Types.Groups();
          }
          Groups.MergeFrom(other.Groups);
          break;
      }

      switch (other.RequestOneofCase) {
        case RequestOneofOneofCase.Request:
          if (Request == null) {
            Request = new global::libsignalservice.push.SyncMessage.Types.Request();
          }
          Request.MergeFrom(other.Request);
          break;
      }

      switch (other.BlockedOneofCase) {
        case BlockedOneofOneofCase.Blocked:
          if (Blocked == null) {
            Blocked = new global::libsignalservice.push.SyncMessage.Types.Blocked();
          }
          Blocked.MergeFrom(other.Blocked);
          break;
      }

      switch (other.VerifiedOneofCase) {
        case VerifiedOneofOneofCase.Verified:
          if (Verified == null) {
            Verified = new global::libsignalservice.push.Verified();
          }
          Verified.MergeFrom(other.Verified);
          break;
      }

      switch (other.ConfigurationOneofCase) {
        case ConfigurationOneofOneofCase.Configuration:
          if (Configuration == null) {
            Configuration = new global::libsignalservice.push.SyncMessage.Types.Configuration();
          }
          Configuration.MergeFrom(other.Configuration);
          break;
      }

      switch (other.PaddingOneofCase) {
        case PaddingOneofOneofCase.Padding:
          Padding = other.Padding;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::libsignalservice.push.SyncMessage.Types.Sent subBuilder = new global::libsignalservice.push.SyncMessage.Types.Sent();
            if (sentOneofCase_ == SentOneofOneofCase.Sent) {
              subBuilder.MergeFrom(Sent);
            }
            input.ReadMessage(subBuilder);
            Sent = subBuilder;
            break;
          }
          case 18: {
            global::libsignalservice.push.SyncMessage.Types.Contacts subBuilder = new global::libsignalservice.push.SyncMessage.Types.Contacts();
            if (contactsOneofCase_ == ContactsOneofOneofCase.Contacts) {
              subBuilder.MergeFrom(Contacts);
            }
            input.ReadMessage(subBuilder);
            Contacts = subBuilder;
            break;
          }
          case 26: {
            global::libsignalservice.push.SyncMessage.Types.Groups subBuilder = new global::libsignalservice.push.SyncMessage.Types.Groups();
            if (groupsOneofCase_ == GroupsOneofOneofCase.Groups) {
              subBuilder.MergeFrom(Groups);
            }
            input.ReadMessage(subBuilder);
            Groups = subBuilder;
            break;
          }
          case 34: {
            global::libsignalservice.push.SyncMessage.Types.Request subBuilder = new global::libsignalservice.push.SyncMessage.Types.Request();
            if (requestOneofCase_ == RequestOneofOneofCase.Request) {
              subBuilder.MergeFrom(Request);
            }
            input.ReadMessage(subBuilder);
            Request = subBuilder;
            break;
          }
          case 42: {
            read_.AddEntriesFrom(input, _repeated_read_codec);
            break;
          }
          case 50: {
            global::libsignalservice.push.SyncMessage.Types.Blocked subBuilder = new global::libsignalservice.push.SyncMessage.Types.Blocked();
            if (blockedOneofCase_ == BlockedOneofOneofCase.Blocked) {
              subBuilder.MergeFrom(Blocked);
            }
            input.ReadMessage(subBuilder);
            Blocked = subBuilder;
            break;
          }
          case 58: {
            global::libsignalservice.push.Verified subBuilder = new global::libsignalservice.push.Verified();
            if (verifiedOneofCase_ == VerifiedOneofOneofCase.Verified) {
              subBuilder.MergeFrom(Verified);
            }
            input.ReadMessage(subBuilder);
            Verified = subBuilder;
            break;
          }
          case 66: {
            Padding = input.ReadBytes();
            break;
          }
          case 74: {
            global::libsignalservice.push.SyncMessage.Types.Configuration subBuilder = new global::libsignalservice.push.SyncMessage.Types.Configuration();
            if (configurationOneofCase_ == ConfigurationOneofOneofCase.Configuration) {
              subBuilder.MergeFrom(Configuration);
            }
            input.ReadMessage(subBuilder);
            Configuration = subBuilder;
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the SyncMessage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Sent : pb::IMessage<Sent> {
        private static readonly pb::MessageParser<Sent> _parser = new pb::MessageParser<Sent>(() => new Sent());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Sent> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::libsignalservice.push.SyncMessage.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Sent() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Sent(Sent other) : this() {
          switch (other.DestinationOneofCase) {
            case DestinationOneofOneofCase.Destination:
              Destination = other.Destination;
              break;
          }

          switch (other.TimestampOneofCase) {
            case TimestampOneofOneofCase.Timestamp:
              Timestamp = other.Timestamp;
              break;
          }

          switch (other.MessageOneofCase) {
            case MessageOneofOneofCase.Message:
              Message = other.Message.Clone();
              break;
          }

          switch (other.ExpirationStartTimestampOneofCase) {
            case ExpirationStartTimestampOneofOneofCase.ExpirationStartTimestamp:
              ExpirationStartTimestamp = other.ExpirationStartTimestamp;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Sent Clone() {
          return new Sent(this);
        }

        /// <summary>Field number for the "destination" field.</summary>
        public const int DestinationFieldNumber = 1;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Destination {
          get { return destinationOneofCase_ == DestinationOneofOneofCase.Destination ? (string) destinationOneof_ : ""; }
          set {
            destinationOneof_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            destinationOneofCase_ = DestinationOneofOneofCase.Destination;
          }
        }

        /// <summary>Field number for the "timestamp" field.</summary>
        public const int TimestampFieldNumber = 2;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong Timestamp {
          get { return timestampOneofCase_ == TimestampOneofOneofCase.Timestamp ? (ulong) timestampOneof_ : 0UL; }
          set {
            timestampOneof_ = value;
            timestampOneofCase_ = TimestampOneofOneofCase.Timestamp;
          }
        }

        /// <summary>Field number for the "message" field.</summary>
        public const int MessageFieldNumber = 3;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::libsignalservice.push.DataMessage Message {
          get { return messageOneofCase_ == MessageOneofOneofCase.Message ? (global::libsignalservice.push.DataMessage) messageOneof_ : null; }
          set {
            messageOneof_ = value;
            messageOneofCase_ = value == null ? MessageOneofOneofCase.None : MessageOneofOneofCase.Message;
          }
        }

        /// <summary>Field number for the "expirationStartTimestamp" field.</summary>
        public const int ExpirationStartTimestampFieldNumber = 4;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong ExpirationStartTimestamp {
          get { return expirationStartTimestampOneofCase_ == ExpirationStartTimestampOneofOneofCase.ExpirationStartTimestamp ? (ulong) expirationStartTimestampOneof_ : 0UL; }
          set {
            expirationStartTimestampOneof_ = value;
            expirationStartTimestampOneofCase_ = ExpirationStartTimestampOneofOneofCase.ExpirationStartTimestamp;
          }
        }

        private object destinationOneof_;
        /// <summary>Enum of possible cases for the "destination_oneof" oneof.</summary>
        public enum DestinationOneofOneofCase {
          None = 0,
          Destination = 1,
        }
        private DestinationOneofOneofCase destinationOneofCase_ = DestinationOneofOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DestinationOneofOneofCase DestinationOneofCase {
          get { return destinationOneofCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearDestinationOneof() {
          destinationOneofCase_ = DestinationOneofOneofCase.None;
          destinationOneof_ = null;
        }

        private object timestampOneof_;
        /// <summary>Enum of possible cases for the "timestamp_oneof" oneof.</summary>
        public enum TimestampOneofOneofCase {
          None = 0,
          Timestamp = 2,
        }
        private TimestampOneofOneofCase timestampOneofCase_ = TimestampOneofOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TimestampOneofOneofCase TimestampOneofCase {
          get { return timestampOneofCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearTimestampOneof() {
          timestampOneofCase_ = TimestampOneofOneofCase.None;
          timestampOneof_ = null;
        }

        private object messageOneof_;
        /// <summary>Enum of possible cases for the "message_oneof" oneof.</summary>
        public enum MessageOneofOneofCase {
          None = 0,
          Message = 3,
        }
        private MessageOneofOneofCase messageOneofCase_ = MessageOneofOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageOneofOneofCase MessageOneofCase {
          get { return messageOneofCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearMessageOneof() {
          messageOneofCase_ = MessageOneofOneofCase.None;
          messageOneof_ = null;
        }

        private object expirationStartTimestampOneof_;
        /// <summary>Enum of possible cases for the "expirationStartTimestamp_oneof" oneof.</summary>
        public enum ExpirationStartTimestampOneofOneofCase {
          None = 0,
          ExpirationStartTimestamp = 4,
        }
        private ExpirationStartTimestampOneofOneofCase expirationStartTimestampOneofCase_ = ExpirationStartTimestampOneofOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ExpirationStartTimestampOneofOneofCase ExpirationStartTimestampOneofCase {
          get { return expirationStartTimestampOneofCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearExpirationStartTimestampOneof() {
          expirationStartTimestampOneofCase_ = ExpirationStartTimestampOneofOneofCase.None;
          expirationStartTimestampOneof_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Sent);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Sent other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Destination != other.Destination) return false;
          if (Timestamp != other.Timestamp) return false;
          if (!object.Equals(Message, other.Message)) return false;
          if (ExpirationStartTimestamp != other.ExpirationStartTimestamp) return false;
          if (DestinationOneofCase != other.DestinationOneofCase) return false;
          if (TimestampOneofCase != other.TimestampOneofCase) return false;
          if (MessageOneofCase != other.MessageOneofCase) return false;
          if (ExpirationStartTimestampOneofCase != other.ExpirationStartTimestampOneofCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (destinationOneofCase_ == DestinationOneofOneofCase.Destination) hash ^= Destination.GetHashCode();
          if (timestampOneofCase_ == TimestampOneofOneofCase.Timestamp) hash ^= Timestamp.GetHashCode();
          if (messageOneofCase_ == MessageOneofOneofCase.Message) hash ^= Message.GetHashCode();
          if (expirationStartTimestampOneofCase_ == ExpirationStartTimestampOneofOneofCase.ExpirationStartTimestamp) hash ^= ExpirationStartTimestamp.GetHashCode();
          hash ^= (int) destinationOneofCase_;
          hash ^= (int) timestampOneofCase_;
          hash ^= (int) messageOneofCase_;
          hash ^= (int) expirationStartTimestampOneofCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (destinationOneofCase_ == DestinationOneofOneofCase.Destination) {
            output.WriteRawTag(10);
            output.WriteString(Destination);
          }
          if (timestampOneofCase_ == TimestampOneofOneofCase.Timestamp) {
            output.WriteRawTag(16);
            output.WriteUInt64(Timestamp);
          }
          if (messageOneofCase_ == MessageOneofOneofCase.Message) {
            output.WriteRawTag(26);
            output.WriteMessage(Message);
          }
          if (expirationStartTimestampOneofCase_ == ExpirationStartTimestampOneofOneofCase.ExpirationStartTimestamp) {
            output.WriteRawTag(32);
            output.WriteUInt64(ExpirationStartTimestamp);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (destinationOneofCase_ == DestinationOneofOneofCase.Destination) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Destination);
          }
          if (timestampOneofCase_ == TimestampOneofOneofCase.Timestamp) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Timestamp);
          }
          if (messageOneofCase_ == MessageOneofOneofCase.Message) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Message);
          }
          if (expirationStartTimestampOneofCase_ == ExpirationStartTimestampOneofOneofCase.ExpirationStartTimestamp) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ExpirationStartTimestamp);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Sent other) {
          if (other == null) {
            return;
          }
          switch (other.DestinationOneofCase) {
            case DestinationOneofOneofCase.Destination:
              Destination = other.Destination;
              break;
          }

          switch (other.TimestampOneofCase) {
            case TimestampOneofOneofCase.Timestamp:
              Timestamp = other.Timestamp;
              break;
          }

          switch (other.MessageOneofCase) {
            case MessageOneofOneofCase.Message:
              if (Message == null) {
                Message = new global::libsignalservice.push.DataMessage();
              }
              Message.MergeFrom(other.Message);
              break;
          }

          switch (other.ExpirationStartTimestampOneofCase) {
            case ExpirationStartTimestampOneofOneofCase.ExpirationStartTimestamp:
              ExpirationStartTimestamp = other.ExpirationStartTimestamp;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Destination = input.ReadString();
                break;
              }
              case 16: {
                Timestamp = input.ReadUInt64();
                break;
              }
              case 26: {
                global::libsignalservice.push.DataMessage subBuilder = new global::libsignalservice.push.DataMessage();
                if (messageOneofCase_ == MessageOneofOneofCase.Message) {
                  subBuilder.MergeFrom(Message);
                }
                input.ReadMessage(subBuilder);
                Message = subBuilder;
                break;
              }
              case 32: {
                ExpirationStartTimestamp = input.ReadUInt64();
                break;
              }
            }
          }
        }

      }

      public sealed partial class Contacts : pb::IMessage<Contacts> {
        private static readonly pb::MessageParser<Contacts> _parser = new pb::MessageParser<Contacts>(() => new Contacts());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Contacts> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::libsignalservice.push.SyncMessage.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Contacts() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Contacts(Contacts other) : this() {
          switch (other.BlobOneofCase) {
            case BlobOneofOneofCase.Blob:
              Blob = other.Blob.Clone();
              break;
          }

          switch (other.CompleteOneofCase) {
            case CompleteOneofOneofCase.Complete:
              Complete = other.Complete;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Contacts Clone() {
          return new Contacts(this);
        }

        /// <summary>Field number for the "blob" field.</summary>
        public const int BlobFieldNumber = 1;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::libsignalservice.push.AttachmentPointer Blob {
          get { return blobOneofCase_ == BlobOneofOneofCase.Blob ? (global::libsignalservice.push.AttachmentPointer) blobOneof_ : null; }
          set {
            blobOneof_ = value;
            blobOneofCase_ = value == null ? BlobOneofOneofCase.None : BlobOneofOneofCase.Blob;
          }
        }

        /// <summary>Field number for the "complete" field.</summary>
        public const int CompleteFieldNumber = 2;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Complete {
          get { return completeOneofCase_ == CompleteOneofOneofCase.Complete ? (bool) completeOneof_ : false; }
          set {
            completeOneof_ = value;
            completeOneofCase_ = CompleteOneofOneofCase.Complete;
          }
        }

        private object blobOneof_;
        /// <summary>Enum of possible cases for the "blob_oneof" oneof.</summary>
        public enum BlobOneofOneofCase {
          None = 0,
          Blob = 1,
        }
        private BlobOneofOneofCase blobOneofCase_ = BlobOneofOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BlobOneofOneofCase BlobOneofCase {
          get { return blobOneofCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearBlobOneof() {
          blobOneofCase_ = BlobOneofOneofCase.None;
          blobOneof_ = null;
        }

        private object completeOneof_;
        /// <summary>Enum of possible cases for the "complete_oneof" oneof.</summary>
        public enum CompleteOneofOneofCase {
          None = 0,
          Complete = 2,
        }
        private CompleteOneofOneofCase completeOneofCase_ = CompleteOneofOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CompleteOneofOneofCase CompleteOneofCase {
          get { return completeOneofCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearCompleteOneof() {
          completeOneofCase_ = CompleteOneofOneofCase.None;
          completeOneof_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Contacts);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Contacts other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Blob, other.Blob)) return false;
          if (Complete != other.Complete) return false;
          if (BlobOneofCase != other.BlobOneofCase) return false;
          if (CompleteOneofCase != other.CompleteOneofCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (blobOneofCase_ == BlobOneofOneofCase.Blob) hash ^= Blob.GetHashCode();
          if (completeOneofCase_ == CompleteOneofOneofCase.Complete) hash ^= Complete.GetHashCode();
          hash ^= (int) blobOneofCase_;
          hash ^= (int) completeOneofCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (blobOneofCase_ == BlobOneofOneofCase.Blob) {
            output.WriteRawTag(10);
            output.WriteMessage(Blob);
          }
          if (completeOneofCase_ == CompleteOneofOneofCase.Complete) {
            output.WriteRawTag(16);
            output.WriteBool(Complete);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (blobOneofCase_ == BlobOneofOneofCase.Blob) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Blob);
          }
          if (completeOneofCase_ == CompleteOneofOneofCase.Complete) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Contacts other) {
          if (other == null) {
            return;
          }
          switch (other.BlobOneofCase) {
            case BlobOneofOneofCase.Blob:
              if (Blob == null) {
                Blob = new global::libsignalservice.push.AttachmentPointer();
              }
              Blob.MergeFrom(other.Blob);
              break;
          }

          switch (other.CompleteOneofCase) {
            case CompleteOneofOneofCase.Complete:
              Complete = other.Complete;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                global::libsignalservice.push.AttachmentPointer subBuilder = new global::libsignalservice.push.AttachmentPointer();
                if (blobOneofCase_ == BlobOneofOneofCase.Blob) {
                  subBuilder.MergeFrom(Blob);
                }
                input.ReadMessage(subBuilder);
                Blob = subBuilder;
                break;
              }
              case 16: {
                Complete = input.ReadBool();
                break;
              }
            }
          }
        }

      }

      public sealed partial class Groups : pb::IMessage<Groups> {
        private static readonly pb::MessageParser<Groups> _parser = new pb::MessageParser<Groups>(() => new Groups());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Groups> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::libsignalservice.push.SyncMessage.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Groups() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Groups(Groups other) : this() {
          switch (other.BlobOneofCase) {
            case BlobOneofOneofCase.Blob:
              Blob = other.Blob.Clone();
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Groups Clone() {
          return new Groups(this);
        }

        /// <summary>Field number for the "blob" field.</summary>
        public const int BlobFieldNumber = 1;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::libsignalservice.push.AttachmentPointer Blob {
          get { return blobOneofCase_ == BlobOneofOneofCase.Blob ? (global::libsignalservice.push.AttachmentPointer) blobOneof_ : null; }
          set {
            blobOneof_ = value;
            blobOneofCase_ = value == null ? BlobOneofOneofCase.None : BlobOneofOneofCase.Blob;
          }
        }

        private object blobOneof_;
        /// <summary>Enum of possible cases for the "blob_oneof" oneof.</summary>
        public enum BlobOneofOneofCase {
          None = 0,
          Blob = 1,
        }
        private BlobOneofOneofCase blobOneofCase_ = BlobOneofOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BlobOneofOneofCase BlobOneofCase {
          get { return blobOneofCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearBlobOneof() {
          blobOneofCase_ = BlobOneofOneofCase.None;
          blobOneof_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Groups);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Groups other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Blob, other.Blob)) return false;
          if (BlobOneofCase != other.BlobOneofCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (blobOneofCase_ == BlobOneofOneofCase.Blob) hash ^= Blob.GetHashCode();
          hash ^= (int) blobOneofCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (blobOneofCase_ == BlobOneofOneofCase.Blob) {
            output.WriteRawTag(10);
            output.WriteMessage(Blob);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (blobOneofCase_ == BlobOneofOneofCase.Blob) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Blob);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Groups other) {
          if (other == null) {
            return;
          }
          switch (other.BlobOneofCase) {
            case BlobOneofOneofCase.Blob:
              if (Blob == null) {
                Blob = new global::libsignalservice.push.AttachmentPointer();
              }
              Blob.MergeFrom(other.Blob);
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                global::libsignalservice.push.AttachmentPointer subBuilder = new global::libsignalservice.push.AttachmentPointer();
                if (blobOneofCase_ == BlobOneofOneofCase.Blob) {
                  subBuilder.MergeFrom(Blob);
                }
                input.ReadMessage(subBuilder);
                Blob = subBuilder;
                break;
              }
            }
          }
        }

      }

      public sealed partial class Blocked : pb::IMessage<Blocked> {
        private static readonly pb::MessageParser<Blocked> _parser = new pb::MessageParser<Blocked>(() => new Blocked());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Blocked> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::libsignalservice.push.SyncMessage.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Blocked() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Blocked(Blocked other) : this() {
          numbers_ = other.numbers_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Blocked Clone() {
          return new Blocked(this);
        }

        /// <summary>Field number for the "numbers" field.</summary>
        public const int NumbersFieldNumber = 1;
        private static readonly pb::FieldCodec<string> _repeated_numbers_codec
            = pb::FieldCodec.ForString(10);
        private readonly pbc::RepeatedField<string> numbers_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> Numbers {
          get { return numbers_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Blocked);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Blocked other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!numbers_.Equals(other.numbers_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= numbers_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          numbers_.WriteTo(output, _repeated_numbers_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += numbers_.CalculateSize(_repeated_numbers_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Blocked other) {
          if (other == null) {
            return;
          }
          numbers_.Add(other.numbers_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                numbers_.AddEntriesFrom(input, _repeated_numbers_codec);
                break;
              }
            }
          }
        }

      }

      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::libsignalservice.push.SyncMessage.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          switch (other.TypeOneofCase) {
            case TypeOneofOneofCase.Type:
              Type = other.Type;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 1;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::libsignalservice.push.SyncMessage.Types.Request.Types.Type Type {
          get { return typeOneofCase_ == TypeOneofOneofCase.Type ? (global::libsignalservice.push.SyncMessage.Types.Request.Types.Type) typeOneof_ : 0; }
          set {
            typeOneof_ = value;
            typeOneofCase_ = TypeOneofOneofCase.Type;
          }
        }

        private object typeOneof_;
        /// <summary>Enum of possible cases for the "type_oneof" oneof.</summary>
        public enum TypeOneofOneofCase {
          None = 0,
          Type = 1,
        }
        private TypeOneofOneofCase typeOneofCase_ = TypeOneofOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TypeOneofOneofCase TypeOneofCase {
          get { return typeOneofCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearTypeOneof() {
          typeOneofCase_ = TypeOneofOneofCase.None;
          typeOneof_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Type != other.Type) return false;
          if (TypeOneofCase != other.TypeOneofCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (typeOneofCase_ == TypeOneofOneofCase.Type) hash ^= Type.GetHashCode();
          hash ^= (int) typeOneofCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (typeOneofCase_ == TypeOneofOneofCase.Type) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Type);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (typeOneofCase_ == TypeOneofOneofCase.Type) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          switch (other.TypeOneofCase) {
            case TypeOneofOneofCase.Type:
              Type = other.Type;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                typeOneof_ = input.ReadEnum();
                typeOneofCase_ = TypeOneofOneofCase.Type;
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the Request message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public enum Type {
            [pbr::OriginalName("UNKNOWN")] Unknown = 0,
            [pbr::OriginalName("CONTACTS")] Contacts = 1,
            [pbr::OriginalName("GROUPS")] Groups = 2,
            [pbr::OriginalName("BLOCKED")] Blocked = 3,
            [pbr::OriginalName("CONFIGURATION")] Configuration = 4,
          }

        }
        #endregion

      }

      public sealed partial class Read : pb::IMessage<Read> {
        private static readonly pb::MessageParser<Read> _parser = new pb::MessageParser<Read>(() => new Read());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Read> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::libsignalservice.push.SyncMessage.Descriptor.NestedTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Read() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Read(Read other) : this() {
          switch (other.SenderOneofCase) {
            case SenderOneofOneofCase.Sender:
              Sender = other.Sender;
              break;
          }

          switch (other.TimestampOneofCase) {
            case TimestampOneofOneofCase.Timestamp:
              Timestamp = other.Timestamp;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Read Clone() {
          return new Read(this);
        }

        /// <summary>Field number for the "sender" field.</summary>
        public const int SenderFieldNumber = 1;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Sender {
          get { return senderOneofCase_ == SenderOneofOneofCase.Sender ? (string) senderOneof_ : ""; }
          set {
            senderOneof_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            senderOneofCase_ = SenderOneofOneofCase.Sender;
          }
        }

        /// <summary>Field number for the "timestamp" field.</summary>
        public const int TimestampFieldNumber = 2;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong Timestamp {
          get { return timestampOneofCase_ == TimestampOneofOneofCase.Timestamp ? (ulong) timestampOneof_ : 0UL; }
          set {
            timestampOneof_ = value;
            timestampOneofCase_ = TimestampOneofOneofCase.Timestamp;
          }
        }

        private object senderOneof_;
        /// <summary>Enum of possible cases for the "sender_oneof" oneof.</summary>
        public enum SenderOneofOneofCase {
          None = 0,
          Sender = 1,
        }
        private SenderOneofOneofCase senderOneofCase_ = SenderOneofOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SenderOneofOneofCase SenderOneofCase {
          get { return senderOneofCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearSenderOneof() {
          senderOneofCase_ = SenderOneofOneofCase.None;
          senderOneof_ = null;
        }

        private object timestampOneof_;
        /// <summary>Enum of possible cases for the "timestamp_oneof" oneof.</summary>
        public enum TimestampOneofOneofCase {
          None = 0,
          Timestamp = 2,
        }
        private TimestampOneofOneofCase timestampOneofCase_ = TimestampOneofOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TimestampOneofOneofCase TimestampOneofCase {
          get { return timestampOneofCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearTimestampOneof() {
          timestampOneofCase_ = TimestampOneofOneofCase.None;
          timestampOneof_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Read);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Read other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Sender != other.Sender) return false;
          if (Timestamp != other.Timestamp) return false;
          if (SenderOneofCase != other.SenderOneofCase) return false;
          if (TimestampOneofCase != other.TimestampOneofCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (senderOneofCase_ == SenderOneofOneofCase.Sender) hash ^= Sender.GetHashCode();
          if (timestampOneofCase_ == TimestampOneofOneofCase.Timestamp) hash ^= Timestamp.GetHashCode();
          hash ^= (int) senderOneofCase_;
          hash ^= (int) timestampOneofCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (senderOneofCase_ == SenderOneofOneofCase.Sender) {
            output.WriteRawTag(10);
            output.WriteString(Sender);
          }
          if (timestampOneofCase_ == TimestampOneofOneofCase.Timestamp) {
            output.WriteRawTag(16);
            output.WriteUInt64(Timestamp);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (senderOneofCase_ == SenderOneofOneofCase.Sender) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Sender);
          }
          if (timestampOneofCase_ == TimestampOneofOneofCase.Timestamp) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Timestamp);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Read other) {
          if (other == null) {
            return;
          }
          switch (other.SenderOneofCase) {
            case SenderOneofOneofCase.Sender:
              Sender = other.Sender;
              break;
          }

          switch (other.TimestampOneofCase) {
            case TimestampOneofOneofCase.Timestamp:
              Timestamp = other.Timestamp;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Sender = input.ReadString();
                break;
              }
              case 16: {
                Timestamp = input.ReadUInt64();
                break;
              }
            }
          }
        }

      }

      public sealed partial class Configuration : pb::IMessage<Configuration> {
        private static readonly pb::MessageParser<Configuration> _parser = new pb::MessageParser<Configuration>(() => new Configuration());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Configuration> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::libsignalservice.push.SyncMessage.Descriptor.NestedTypes[6]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Configuration() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Configuration(Configuration other) : this() {
          switch (other.ReadReceiptsOneofCase) {
            case ReadReceiptsOneofOneofCase.ReadReceipts:
              ReadReceipts = other.ReadReceipts;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Configuration Clone() {
          return new Configuration(this);
        }

        /// <summary>Field number for the "readReceipts" field.</summary>
        public const int ReadReceiptsFieldNumber = 1;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool ReadReceipts {
          get { return readReceiptsOneofCase_ == ReadReceiptsOneofOneofCase.ReadReceipts ? (bool) readReceiptsOneof_ : false; }
          set {
            readReceiptsOneof_ = value;
            readReceiptsOneofCase_ = ReadReceiptsOneofOneofCase.ReadReceipts;
          }
        }

        private object readReceiptsOneof_;
        /// <summary>Enum of possible cases for the "readReceipts_oneof" oneof.</summary>
        public enum ReadReceiptsOneofOneofCase {
          None = 0,
          ReadReceipts = 1,
        }
        private ReadReceiptsOneofOneofCase readReceiptsOneofCase_ = ReadReceiptsOneofOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ReadReceiptsOneofOneofCase ReadReceiptsOneofCase {
          get { return readReceiptsOneofCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearReadReceiptsOneof() {
          readReceiptsOneofCase_ = ReadReceiptsOneofOneofCase.None;
          readReceiptsOneof_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Configuration);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Configuration other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ReadReceipts != other.ReadReceipts) return false;
          if (ReadReceiptsOneofCase != other.ReadReceiptsOneofCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (readReceiptsOneofCase_ == ReadReceiptsOneofOneofCase.ReadReceipts) hash ^= ReadReceipts.GetHashCode();
          hash ^= (int) readReceiptsOneofCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (readReceiptsOneofCase_ == ReadReceiptsOneofOneofCase.ReadReceipts) {
            output.WriteRawTag(8);
            output.WriteBool(ReadReceipts);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (readReceiptsOneofCase_ == ReadReceiptsOneofOneofCase.ReadReceipts) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Configuration other) {
          if (other == null) {
            return;
          }
          switch (other.ReadReceiptsOneofCase) {
            case ReadReceiptsOneofOneofCase.ReadReceipts:
              ReadReceipts = other.ReadReceipts;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ReadReceipts = input.ReadBool();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class AttachmentPointer : pb::IMessage<AttachmentPointer> {
    private static readonly pb::MessageParser<AttachmentPointer> _parser = new pb::MessageParser<AttachmentPointer>(() => new AttachmentPointer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AttachmentPointer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::libsignalservice.push.SignalServiceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttachmentPointer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttachmentPointer(AttachmentPointer other) : this() {
      switch (other.IdOneofCase) {
        case IdOneofOneofCase.Id:
          Id = other.Id;
          break;
      }

      switch (other.ContentTypeOneofCase) {
        case ContentTypeOneofOneofCase.ContentType:
          ContentType = other.ContentType;
          break;
      }

      switch (other.KeyOneofCase) {
        case KeyOneofOneofCase.Key:
          Key = other.Key;
          break;
      }

      switch (other.SizeOneofCase) {
        case SizeOneofOneofCase.Size:
          Size = other.Size;
          break;
      }

      switch (other.ThumbnailOneofCase) {
        case ThumbnailOneofOneofCase.Thumbnail:
          Thumbnail = other.Thumbnail;
          break;
      }

      switch (other.DigestOneofCase) {
        case DigestOneofOneofCase.Digest:
          Digest = other.Digest;
          break;
      }

      switch (other.FileNameOneofCase) {
        case FileNameOneofOneofCase.FileName:
          FileName = other.FileName;
          break;
      }

      switch (other.FlagsOneofCase) {
        case FlagsOneofOneofCase.Flags:
          Flags = other.Flags;
          break;
      }

      switch (other.WidthOneofCase) {
        case WidthOneofOneofCase.Width:
          Width = other.Width;
          break;
      }

      switch (other.HeightOneofCase) {
        case HeightOneofOneofCase.Height:
          Height = other.Height;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttachmentPointer Clone() {
      return new AttachmentPointer(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Id {
      get { return idOneofCase_ == IdOneofOneofCase.Id ? (ulong) idOneof_ : 0UL; }
      set {
        idOneof_ = value;
        idOneofCase_ = IdOneofOneofCase.Id;
      }
    }

    /// <summary>Field number for the "contentType" field.</summary>
    public const int ContentTypeFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContentType {
      get { return contentTypeOneofCase_ == ContentTypeOneofOneofCase.ContentType ? (string) contentTypeOneof_ : ""; }
      set {
        contentTypeOneof_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        contentTypeOneofCase_ = ContentTypeOneofOneofCase.ContentType;
      }
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Key {
      get { return keyOneofCase_ == KeyOneofOneofCase.Key ? (pb::ByteString) keyOneof_ : pb::ByteString.Empty; }
      set {
        keyOneof_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        keyOneofCase_ = KeyOneofOneofCase.Key;
      }
    }

    /// <summary>Field number for the "size" field.</summary>
    public const int SizeFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Size {
      get { return sizeOneofCase_ == SizeOneofOneofCase.Size ? (uint) sizeOneof_ : 0; }
      set {
        sizeOneof_ = value;
        sizeOneofCase_ = SizeOneofOneofCase.Size;
      }
    }

    /// <summary>Field number for the "thumbnail" field.</summary>
    public const int ThumbnailFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Thumbnail {
      get { return thumbnailOneofCase_ == ThumbnailOneofOneofCase.Thumbnail ? (pb::ByteString) thumbnailOneof_ : pb::ByteString.Empty; }
      set {
        thumbnailOneof_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        thumbnailOneofCase_ = ThumbnailOneofOneofCase.Thumbnail;
      }
    }

    /// <summary>Field number for the "digest" field.</summary>
    public const int DigestFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Digest {
      get { return digestOneofCase_ == DigestOneofOneofCase.Digest ? (pb::ByteString) digestOneof_ : pb::ByteString.Empty; }
      set {
        digestOneof_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        digestOneofCase_ = DigestOneofOneofCase.Digest;
      }
    }

    /// <summary>Field number for the "fileName" field.</summary>
    public const int FileNameFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FileName {
      get { return fileNameOneofCase_ == FileNameOneofOneofCase.FileName ? (string) fileNameOneof_ : ""; }
      set {
        fileNameOneof_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        fileNameOneofCase_ = FileNameOneofOneofCase.FileName;
      }
    }

    /// <summary>Field number for the "flags" field.</summary>
    public const int FlagsFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Flags {
      get { return flagsOneofCase_ == FlagsOneofOneofCase.Flags ? (uint) flagsOneof_ : 0; }
      set {
        flagsOneof_ = value;
        flagsOneofCase_ = FlagsOneofOneofCase.Flags;
      }
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Width {
      get { return widthOneofCase_ == WidthOneofOneofCase.Width ? (uint) widthOneof_ : 0; }
      set {
        widthOneof_ = value;
        widthOneofCase_ = WidthOneofOneofCase.Width;
      }
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Height {
      get { return heightOneofCase_ == HeightOneofOneofCase.Height ? (uint) heightOneof_ : 0; }
      set {
        heightOneof_ = value;
        heightOneofCase_ = HeightOneofOneofCase.Height;
      }
    }

    private object idOneof_;
    /// <summary>Enum of possible cases for the "id_oneof" oneof.</summary>
    public enum IdOneofOneofCase {
      None = 0,
      Id = 1,
    }
    private IdOneofOneofCase idOneofCase_ = IdOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdOneofOneofCase IdOneofCase {
      get { return idOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIdOneof() {
      idOneofCase_ = IdOneofOneofCase.None;
      idOneof_ = null;
    }

    private object contentTypeOneof_;
    /// <summary>Enum of possible cases for the "contentType_oneof" oneof.</summary>
    public enum ContentTypeOneofOneofCase {
      None = 0,
      ContentType = 2,
    }
    private ContentTypeOneofOneofCase contentTypeOneofCase_ = ContentTypeOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContentTypeOneofOneofCase ContentTypeOneofCase {
      get { return contentTypeOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearContentTypeOneof() {
      contentTypeOneofCase_ = ContentTypeOneofOneofCase.None;
      contentTypeOneof_ = null;
    }

    private object keyOneof_;
    /// <summary>Enum of possible cases for the "key_oneof" oneof.</summary>
    public enum KeyOneofOneofCase {
      None = 0,
      Key = 3,
    }
    private KeyOneofOneofCase keyOneofCase_ = KeyOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyOneofOneofCase KeyOneofCase {
      get { return keyOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearKeyOneof() {
      keyOneofCase_ = KeyOneofOneofCase.None;
      keyOneof_ = null;
    }

    private object sizeOneof_;
    /// <summary>Enum of possible cases for the "size_oneof" oneof.</summary>
    public enum SizeOneofOneofCase {
      None = 0,
      Size = 4,
    }
    private SizeOneofOneofCase sizeOneofCase_ = SizeOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SizeOneofOneofCase SizeOneofCase {
      get { return sizeOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSizeOneof() {
      sizeOneofCase_ = SizeOneofOneofCase.None;
      sizeOneof_ = null;
    }

    private object thumbnailOneof_;
    /// <summary>Enum of possible cases for the "thumbnail_oneof" oneof.</summary>
    public enum ThumbnailOneofOneofCase {
      None = 0,
      Thumbnail = 5,
    }
    private ThumbnailOneofOneofCase thumbnailOneofCase_ = ThumbnailOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ThumbnailOneofOneofCase ThumbnailOneofCase {
      get { return thumbnailOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearThumbnailOneof() {
      thumbnailOneofCase_ = ThumbnailOneofOneofCase.None;
      thumbnailOneof_ = null;
    }

    private object digestOneof_;
    /// <summary>Enum of possible cases for the "digest_oneof" oneof.</summary>
    public enum DigestOneofOneofCase {
      None = 0,
      Digest = 6,
    }
    private DigestOneofOneofCase digestOneofCase_ = DigestOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DigestOneofOneofCase DigestOneofCase {
      get { return digestOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDigestOneof() {
      digestOneofCase_ = DigestOneofOneofCase.None;
      digestOneof_ = null;
    }

    private object fileNameOneof_;
    /// <summary>Enum of possible cases for the "fileName_oneof" oneof.</summary>
    public enum FileNameOneofOneofCase {
      None = 0,
      FileName = 7,
    }
    private FileNameOneofOneofCase fileNameOneofCase_ = FileNameOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileNameOneofOneofCase FileNameOneofCase {
      get { return fileNameOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFileNameOneof() {
      fileNameOneofCase_ = FileNameOneofOneofCase.None;
      fileNameOneof_ = null;
    }

    private object flagsOneof_;
    /// <summary>Enum of possible cases for the "flags_oneof" oneof.</summary>
    public enum FlagsOneofOneofCase {
      None = 0,
      Flags = 8,
    }
    private FlagsOneofOneofCase flagsOneofCase_ = FlagsOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FlagsOneofOneofCase FlagsOneofCase {
      get { return flagsOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFlagsOneof() {
      flagsOneofCase_ = FlagsOneofOneofCase.None;
      flagsOneof_ = null;
    }

    private object widthOneof_;
    /// <summary>Enum of possible cases for the "width_oneof" oneof.</summary>
    public enum WidthOneofOneofCase {
      None = 0,
      Width = 9,
    }
    private WidthOneofOneofCase widthOneofCase_ = WidthOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WidthOneofOneofCase WidthOneofCase {
      get { return widthOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearWidthOneof() {
      widthOneofCase_ = WidthOneofOneofCase.None;
      widthOneof_ = null;
    }

    private object heightOneof_;
    /// <summary>Enum of possible cases for the "height_oneof" oneof.</summary>
    public enum HeightOneofOneofCase {
      None = 0,
      Height = 10,
    }
    private HeightOneofOneofCase heightOneofCase_ = HeightOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeightOneofOneofCase HeightOneofCase {
      get { return heightOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHeightOneof() {
      heightOneofCase_ = HeightOneofOneofCase.None;
      heightOneof_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AttachmentPointer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AttachmentPointer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ContentType != other.ContentType) return false;
      if (Key != other.Key) return false;
      if (Size != other.Size) return false;
      if (Thumbnail != other.Thumbnail) return false;
      if (Digest != other.Digest) return false;
      if (FileName != other.FileName) return false;
      if (Flags != other.Flags) return false;
      if (Width != other.Width) return false;
      if (Height != other.Height) return false;
      if (IdOneofCase != other.IdOneofCase) return false;
      if (ContentTypeOneofCase != other.ContentTypeOneofCase) return false;
      if (KeyOneofCase != other.KeyOneofCase) return false;
      if (SizeOneofCase != other.SizeOneofCase) return false;
      if (ThumbnailOneofCase != other.ThumbnailOneofCase) return false;
      if (DigestOneofCase != other.DigestOneofCase) return false;
      if (FileNameOneofCase != other.FileNameOneofCase) return false;
      if (FlagsOneofCase != other.FlagsOneofCase) return false;
      if (WidthOneofCase != other.WidthOneofCase) return false;
      if (HeightOneofCase != other.HeightOneofCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (idOneofCase_ == IdOneofOneofCase.Id) hash ^= Id.GetHashCode();
      if (contentTypeOneofCase_ == ContentTypeOneofOneofCase.ContentType) hash ^= ContentType.GetHashCode();
      if (keyOneofCase_ == KeyOneofOneofCase.Key) hash ^= Key.GetHashCode();
      if (sizeOneofCase_ == SizeOneofOneofCase.Size) hash ^= Size.GetHashCode();
      if (thumbnailOneofCase_ == ThumbnailOneofOneofCase.Thumbnail) hash ^= Thumbnail.GetHashCode();
      if (digestOneofCase_ == DigestOneofOneofCase.Digest) hash ^= Digest.GetHashCode();
      if (fileNameOneofCase_ == FileNameOneofOneofCase.FileName) hash ^= FileName.GetHashCode();
      if (flagsOneofCase_ == FlagsOneofOneofCase.Flags) hash ^= Flags.GetHashCode();
      if (widthOneofCase_ == WidthOneofOneofCase.Width) hash ^= Width.GetHashCode();
      if (heightOneofCase_ == HeightOneofOneofCase.Height) hash ^= Height.GetHashCode();
      hash ^= (int) idOneofCase_;
      hash ^= (int) contentTypeOneofCase_;
      hash ^= (int) keyOneofCase_;
      hash ^= (int) sizeOneofCase_;
      hash ^= (int) thumbnailOneofCase_;
      hash ^= (int) digestOneofCase_;
      hash ^= (int) fileNameOneofCase_;
      hash ^= (int) flagsOneofCase_;
      hash ^= (int) widthOneofCase_;
      hash ^= (int) heightOneofCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (idOneofCase_ == IdOneofOneofCase.Id) {
        output.WriteRawTag(9);
        output.WriteFixed64(Id);
      }
      if (contentTypeOneofCase_ == ContentTypeOneofOneofCase.ContentType) {
        output.WriteRawTag(18);
        output.WriteString(ContentType);
      }
      if (keyOneofCase_ == KeyOneofOneofCase.Key) {
        output.WriteRawTag(26);
        output.WriteBytes(Key);
      }
      if (sizeOneofCase_ == SizeOneofOneofCase.Size) {
        output.WriteRawTag(32);
        output.WriteUInt32(Size);
      }
      if (thumbnailOneofCase_ == ThumbnailOneofOneofCase.Thumbnail) {
        output.WriteRawTag(42);
        output.WriteBytes(Thumbnail);
      }
      if (digestOneofCase_ == DigestOneofOneofCase.Digest) {
        output.WriteRawTag(50);
        output.WriteBytes(Digest);
      }
      if (fileNameOneofCase_ == FileNameOneofOneofCase.FileName) {
        output.WriteRawTag(58);
        output.WriteString(FileName);
      }
      if (flagsOneofCase_ == FlagsOneofOneofCase.Flags) {
        output.WriteRawTag(64);
        output.WriteUInt32(Flags);
      }
      if (widthOneofCase_ == WidthOneofOneofCase.Width) {
        output.WriteRawTag(72);
        output.WriteUInt32(Width);
      }
      if (heightOneofCase_ == HeightOneofOneofCase.Height) {
        output.WriteRawTag(80);
        output.WriteUInt32(Height);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (idOneofCase_ == IdOneofOneofCase.Id) {
        size += 1 + 8;
      }
      if (contentTypeOneofCase_ == ContentTypeOneofOneofCase.ContentType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentType);
      }
      if (keyOneofCase_ == KeyOneofOneofCase.Key) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Key);
      }
      if (sizeOneofCase_ == SizeOneofOneofCase.Size) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Size);
      }
      if (thumbnailOneofCase_ == ThumbnailOneofOneofCase.Thumbnail) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Thumbnail);
      }
      if (digestOneofCase_ == DigestOneofOneofCase.Digest) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Digest);
      }
      if (fileNameOneofCase_ == FileNameOneofOneofCase.FileName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FileName);
      }
      if (flagsOneofCase_ == FlagsOneofOneofCase.Flags) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Flags);
      }
      if (widthOneofCase_ == WidthOneofOneofCase.Width) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Width);
      }
      if (heightOneofCase_ == HeightOneofOneofCase.Height) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Height);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AttachmentPointer other) {
      if (other == null) {
        return;
      }
      switch (other.IdOneofCase) {
        case IdOneofOneofCase.Id:
          Id = other.Id;
          break;
      }

      switch (other.ContentTypeOneofCase) {
        case ContentTypeOneofOneofCase.ContentType:
          ContentType = other.ContentType;
          break;
      }

      switch (other.KeyOneofCase) {
        case KeyOneofOneofCase.Key:
          Key = other.Key;
          break;
      }

      switch (other.SizeOneofCase) {
        case SizeOneofOneofCase.Size:
          Size = other.Size;
          break;
      }

      switch (other.ThumbnailOneofCase) {
        case ThumbnailOneofOneofCase.Thumbnail:
          Thumbnail = other.Thumbnail;
          break;
      }

      switch (other.DigestOneofCase) {
        case DigestOneofOneofCase.Digest:
          Digest = other.Digest;
          break;
      }

      switch (other.FileNameOneofCase) {
        case FileNameOneofOneofCase.FileName:
          FileName = other.FileName;
          break;
      }

      switch (other.FlagsOneofCase) {
        case FlagsOneofOneofCase.Flags:
          Flags = other.Flags;
          break;
      }

      switch (other.WidthOneofCase) {
        case WidthOneofOneofCase.Width:
          Width = other.Width;
          break;
      }

      switch (other.HeightOneofCase) {
        case HeightOneofOneofCase.Height:
          Height = other.Height;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Id = input.ReadFixed64();
            break;
          }
          case 18: {
            ContentType = input.ReadString();
            break;
          }
          case 26: {
            Key = input.ReadBytes();
            break;
          }
          case 32: {
            Size = input.ReadUInt32();
            break;
          }
          case 42: {
            Thumbnail = input.ReadBytes();
            break;
          }
          case 50: {
            Digest = input.ReadBytes();
            break;
          }
          case 58: {
            FileName = input.ReadString();
            break;
          }
          case 64: {
            Flags = input.ReadUInt32();
            break;
          }
          case 72: {
            Width = input.ReadUInt32();
            break;
          }
          case 80: {
            Height = input.ReadUInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the AttachmentPointer message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Flags {
        [pbr::OriginalName("ZERO_PLACEHOLDER")] ZeroPlaceholder = 0,
        [pbr::OriginalName("VOICE_MESSAGE")] VoiceMessage = 1,
      }

    }
    #endregion

  }

  public sealed partial class GroupContext : pb::IMessage<GroupContext> {
    private static readonly pb::MessageParser<GroupContext> _parser = new pb::MessageParser<GroupContext>(() => new GroupContext());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupContext> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::libsignalservice.push.SignalServiceReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupContext() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupContext(GroupContext other) : this() {
      members_ = other.members_.Clone();
      switch (other.IdOneofCase) {
        case IdOneofOneofCase.Id:
          Id = other.Id;
          break;
      }

      switch (other.TypeOneofCase) {
        case TypeOneofOneofCase.Type:
          Type = other.Type;
          break;
      }

      switch (other.NameOneofCase) {
        case NameOneofOneofCase.Name:
          Name = other.Name;
          break;
      }

      switch (other.AvatarOneofCase) {
        case AvatarOneofOneofCase.Avatar:
          Avatar = other.Avatar.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupContext Clone() {
      return new GroupContext(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Id {
      get { return idOneofCase_ == IdOneofOneofCase.Id ? (pb::ByteString) idOneof_ : pb::ByteString.Empty; }
      set {
        idOneof_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        idOneofCase_ = IdOneofOneofCase.Id;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::libsignalservice.push.GroupContext.Types.Type Type {
      get { return typeOneofCase_ == TypeOneofOneofCase.Type ? (global::libsignalservice.push.GroupContext.Types.Type) typeOneof_ : 0; }
      set {
        typeOneof_ = value;
        typeOneofCase_ = TypeOneofOneofCase.Type;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return nameOneofCase_ == NameOneofOneofCase.Name ? (string) nameOneof_ : ""; }
      set {
        nameOneof_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        nameOneofCase_ = NameOneofOneofCase.Name;
      }
    }

    /// <summary>Field number for the "members" field.</summary>
    public const int MembersFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_members_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> members_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Members {
      get { return members_; }
    }

    /// <summary>Field number for the "avatar" field.</summary>
    public const int AvatarFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::libsignalservice.push.AttachmentPointer Avatar {
      get { return avatarOneofCase_ == AvatarOneofOneofCase.Avatar ? (global::libsignalservice.push.AttachmentPointer) avatarOneof_ : null; }
      set {
        avatarOneof_ = value;
        avatarOneofCase_ = value == null ? AvatarOneofOneofCase.None : AvatarOneofOneofCase.Avatar;
      }
    }

    private object idOneof_;
    /// <summary>Enum of possible cases for the "id_oneof" oneof.</summary>
    public enum IdOneofOneofCase {
      None = 0,
      Id = 1,
    }
    private IdOneofOneofCase idOneofCase_ = IdOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdOneofOneofCase IdOneofCase {
      get { return idOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIdOneof() {
      idOneofCase_ = IdOneofOneofCase.None;
      idOneof_ = null;
    }

    private object typeOneof_;
    /// <summary>Enum of possible cases for the "type_oneof" oneof.</summary>
    public enum TypeOneofOneofCase {
      None = 0,
      Type = 2,
    }
    private TypeOneofOneofCase typeOneofCase_ = TypeOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeOneofOneofCase TypeOneofCase {
      get { return typeOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTypeOneof() {
      typeOneofCase_ = TypeOneofOneofCase.None;
      typeOneof_ = null;
    }

    private object nameOneof_;
    /// <summary>Enum of possible cases for the "name_oneof" oneof.</summary>
    public enum NameOneofOneofCase {
      None = 0,
      Name = 3,
    }
    private NameOneofOneofCase nameOneofCase_ = NameOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NameOneofOneofCase NameOneofCase {
      get { return nameOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNameOneof() {
      nameOneofCase_ = NameOneofOneofCase.None;
      nameOneof_ = null;
    }

    private object avatarOneof_;
    /// <summary>Enum of possible cases for the "avatar_oneof" oneof.</summary>
    public enum AvatarOneofOneofCase {
      None = 0,
      Avatar = 5,
    }
    private AvatarOneofOneofCase avatarOneofCase_ = AvatarOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvatarOneofOneofCase AvatarOneofCase {
      get { return avatarOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAvatarOneof() {
      avatarOneofCase_ = AvatarOneofOneofCase.None;
      avatarOneof_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupContext);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupContext other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Type != other.Type) return false;
      if (Name != other.Name) return false;
      if(!members_.Equals(other.members_)) return false;
      if (!object.Equals(Avatar, other.Avatar)) return false;
      if (IdOneofCase != other.IdOneofCase) return false;
      if (TypeOneofCase != other.TypeOneofCase) return false;
      if (NameOneofCase != other.NameOneofCase) return false;
      if (AvatarOneofCase != other.AvatarOneofCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (idOneofCase_ == IdOneofOneofCase.Id) hash ^= Id.GetHashCode();
      if (typeOneofCase_ == TypeOneofOneofCase.Type) hash ^= Type.GetHashCode();
      if (nameOneofCase_ == NameOneofOneofCase.Name) hash ^= Name.GetHashCode();
      hash ^= members_.GetHashCode();
      if (avatarOneofCase_ == AvatarOneofOneofCase.Avatar) hash ^= Avatar.GetHashCode();
      hash ^= (int) idOneofCase_;
      hash ^= (int) typeOneofCase_;
      hash ^= (int) nameOneofCase_;
      hash ^= (int) avatarOneofCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (idOneofCase_ == IdOneofOneofCase.Id) {
        output.WriteRawTag(10);
        output.WriteBytes(Id);
      }
      if (typeOneofCase_ == TypeOneofOneofCase.Type) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (nameOneofCase_ == NameOneofOneofCase.Name) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      members_.WriteTo(output, _repeated_members_codec);
      if (avatarOneofCase_ == AvatarOneofOneofCase.Avatar) {
        output.WriteRawTag(42);
        output.WriteMessage(Avatar);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (idOneofCase_ == IdOneofOneofCase.Id) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Id);
      }
      if (typeOneofCase_ == TypeOneofOneofCase.Type) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (nameOneofCase_ == NameOneofOneofCase.Name) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += members_.CalculateSize(_repeated_members_codec);
      if (avatarOneofCase_ == AvatarOneofOneofCase.Avatar) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Avatar);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupContext other) {
      if (other == null) {
        return;
      }
      members_.Add(other.members_);
      switch (other.IdOneofCase) {
        case IdOneofOneofCase.Id:
          Id = other.Id;
          break;
      }

      switch (other.TypeOneofCase) {
        case TypeOneofOneofCase.Type:
          Type = other.Type;
          break;
      }

      switch (other.NameOneofCase) {
        case NameOneofOneofCase.Name:
          Name = other.Name;
          break;
      }

      switch (other.AvatarOneofCase) {
        case AvatarOneofOneofCase.Avatar:
          if (Avatar == null) {
            Avatar = new global::libsignalservice.push.AttachmentPointer();
          }
          Avatar.MergeFrom(other.Avatar);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadBytes();
            break;
          }
          case 16: {
            typeOneof_ = input.ReadEnum();
            typeOneofCase_ = TypeOneofOneofCase.Type;
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            members_.AddEntriesFrom(input, _repeated_members_codec);
            break;
          }
          case 42: {
            global::libsignalservice.push.AttachmentPointer subBuilder = new global::libsignalservice.push.AttachmentPointer();
            if (avatarOneofCase_ == AvatarOneofOneofCase.Avatar) {
              subBuilder.MergeFrom(Avatar);
            }
            input.ReadMessage(subBuilder);
            Avatar = subBuilder;
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the GroupContext message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Type {
        [pbr::OriginalName("UNKNOWN")] Unknown = 0,
        [pbr::OriginalName("UPDATE")] Update = 1,
        [pbr::OriginalName("DELIVER")] Deliver = 2,
        [pbr::OriginalName("QUIT")] Quit = 3,
        [pbr::OriginalName("REQUEST_INFO")] RequestInfo = 4,
      }

    }
    #endregion

  }

  public sealed partial class ContactDetails : pb::IMessage<ContactDetails> {
    private static readonly pb::MessageParser<ContactDetails> _parser = new pb::MessageParser<ContactDetails>(() => new ContactDetails());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContactDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::libsignalservice.push.SignalServiceReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContactDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContactDetails(ContactDetails other) : this() {
      switch (other.NumberOneofCase) {
        case NumberOneofOneofCase.Number:
          Number = other.Number;
          break;
      }

      switch (other.NameOneofCase) {
        case NameOneofOneofCase.Name:
          Name = other.Name;
          break;
      }

      switch (other.AvatarOneofCase) {
        case AvatarOneofOneofCase.Avatar:
          Avatar = other.Avatar.Clone();
          break;
      }

      switch (other.ColorOneofCase) {
        case ColorOneofOneofCase.Color:
          Color = other.Color;
          break;
      }

      switch (other.VerifiedOneofCase) {
        case VerifiedOneofOneofCase.Verified:
          Verified = other.Verified.Clone();
          break;
      }

      switch (other.ProfileKeyOneofCase) {
        case ProfileKeyOneofOneofCase.ProfileKey:
          ProfileKey = other.ProfileKey;
          break;
      }

      switch (other.BlockedOneofCase) {
        case BlockedOneofOneofCase.Blocked:
          Blocked = other.Blocked;
          break;
      }

      switch (other.ExpireTimerOneofCase) {
        case ExpireTimerOneofOneofCase.ExpireTimer:
          ExpireTimer = other.ExpireTimer;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContactDetails Clone() {
      return new ContactDetails(this);
    }

    /// <summary>Field number for the "number" field.</summary>
    public const int NumberFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Number {
      get { return numberOneofCase_ == NumberOneofOneofCase.Number ? (string) numberOneof_ : ""; }
      set {
        numberOneof_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        numberOneofCase_ = NumberOneofOneofCase.Number;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return nameOneofCase_ == NameOneofOneofCase.Name ? (string) nameOneof_ : ""; }
      set {
        nameOneof_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        nameOneofCase_ = NameOneofOneofCase.Name;
      }
    }

    /// <summary>Field number for the "avatar" field.</summary>
    public const int AvatarFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::libsignalservice.push.ContactDetails.Types.Avatar Avatar {
      get { return avatarOneofCase_ == AvatarOneofOneofCase.Avatar ? (global::libsignalservice.push.ContactDetails.Types.Avatar) avatarOneof_ : null; }
      set {
        avatarOneof_ = value;
        avatarOneofCase_ = value == null ? AvatarOneofOneofCase.None : AvatarOneofOneofCase.Avatar;
      }
    }

    /// <summary>Field number for the "color" field.</summary>
    public const int ColorFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Color {
      get { return colorOneofCase_ == ColorOneofOneofCase.Color ? (string) colorOneof_ : ""; }
      set {
        colorOneof_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        colorOneofCase_ = ColorOneofOneofCase.Color;
      }
    }

    /// <summary>Field number for the "verified" field.</summary>
    public const int VerifiedFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::libsignalservice.push.Verified Verified {
      get { return verifiedOneofCase_ == VerifiedOneofOneofCase.Verified ? (global::libsignalservice.push.Verified) verifiedOneof_ : null; }
      set {
        verifiedOneof_ = value;
        verifiedOneofCase_ = value == null ? VerifiedOneofOneofCase.None : VerifiedOneofOneofCase.Verified;
      }
    }

    /// <summary>Field number for the "profileKey" field.</summary>
    public const int ProfileKeyFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ProfileKey {
      get { return profileKeyOneofCase_ == ProfileKeyOneofOneofCase.ProfileKey ? (pb::ByteString) profileKeyOneof_ : pb::ByteString.Empty; }
      set {
        profileKeyOneof_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        profileKeyOneofCase_ = ProfileKeyOneofOneofCase.ProfileKey;
      }
    }

    /// <summary>Field number for the "blocked" field.</summary>
    public const int BlockedFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Blocked {
      get { return blockedOneofCase_ == BlockedOneofOneofCase.Blocked ? (bool) blockedOneof_ : false; }
      set {
        blockedOneof_ = value;
        blockedOneofCase_ = BlockedOneofOneofCase.Blocked;
      }
    }

    /// <summary>Field number for the "expireTimer" field.</summary>
    public const int ExpireTimerFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ExpireTimer {
      get { return expireTimerOneofCase_ == ExpireTimerOneofOneofCase.ExpireTimer ? (uint) expireTimerOneof_ : 0; }
      set {
        expireTimerOneof_ = value;
        expireTimerOneofCase_ = ExpireTimerOneofOneofCase.ExpireTimer;
      }
    }

    private object numberOneof_;
    /// <summary>Enum of possible cases for the "number_oneof" oneof.</summary>
    public enum NumberOneofOneofCase {
      None = 0,
      Number = 1,
    }
    private NumberOneofOneofCase numberOneofCase_ = NumberOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NumberOneofOneofCase NumberOneofCase {
      get { return numberOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNumberOneof() {
      numberOneofCase_ = NumberOneofOneofCase.None;
      numberOneof_ = null;
    }

    private object nameOneof_;
    /// <summary>Enum of possible cases for the "name_oneof" oneof.</summary>
    public enum NameOneofOneofCase {
      None = 0,
      Name = 2,
    }
    private NameOneofOneofCase nameOneofCase_ = NameOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NameOneofOneofCase NameOneofCase {
      get { return nameOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNameOneof() {
      nameOneofCase_ = NameOneofOneofCase.None;
      nameOneof_ = null;
    }

    private object avatarOneof_;
    /// <summary>Enum of possible cases for the "avatar_oneof" oneof.</summary>
    public enum AvatarOneofOneofCase {
      None = 0,
      Avatar = 3,
    }
    private AvatarOneofOneofCase avatarOneofCase_ = AvatarOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvatarOneofOneofCase AvatarOneofCase {
      get { return avatarOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAvatarOneof() {
      avatarOneofCase_ = AvatarOneofOneofCase.None;
      avatarOneof_ = null;
    }

    private object colorOneof_;
    /// <summary>Enum of possible cases for the "color_oneof" oneof.</summary>
    public enum ColorOneofOneofCase {
      None = 0,
      Color = 4,
    }
    private ColorOneofOneofCase colorOneofCase_ = ColorOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ColorOneofOneofCase ColorOneofCase {
      get { return colorOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearColorOneof() {
      colorOneofCase_ = ColorOneofOneofCase.None;
      colorOneof_ = null;
    }

    private object verifiedOneof_;
    /// <summary>Enum of possible cases for the "verified_oneof" oneof.</summary>
    public enum VerifiedOneofOneofCase {
      None = 0,
      Verified = 5,
    }
    private VerifiedOneofOneofCase verifiedOneofCase_ = VerifiedOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifiedOneofOneofCase VerifiedOneofCase {
      get { return verifiedOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVerifiedOneof() {
      verifiedOneofCase_ = VerifiedOneofOneofCase.None;
      verifiedOneof_ = null;
    }

    private object profileKeyOneof_;
    /// <summary>Enum of possible cases for the "profileKey_oneof" oneof.</summary>
    public enum ProfileKeyOneofOneofCase {
      None = 0,
      ProfileKey = 6,
    }
    private ProfileKeyOneofOneofCase profileKeyOneofCase_ = ProfileKeyOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProfileKeyOneofOneofCase ProfileKeyOneofCase {
      get { return profileKeyOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearProfileKeyOneof() {
      profileKeyOneofCase_ = ProfileKeyOneofOneofCase.None;
      profileKeyOneof_ = null;
    }

    private object blockedOneof_;
    /// <summary>Enum of possible cases for the "blocked_oneof" oneof.</summary>
    public enum BlockedOneofOneofCase {
      None = 0,
      Blocked = 7,
    }
    private BlockedOneofOneofCase blockedOneofCase_ = BlockedOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockedOneofOneofCase BlockedOneofCase {
      get { return blockedOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBlockedOneof() {
      blockedOneofCase_ = BlockedOneofOneofCase.None;
      blockedOneof_ = null;
    }

    private object expireTimerOneof_;
    /// <summary>Enum of possible cases for the "expireTimer_oneof" oneof.</summary>
    public enum ExpireTimerOneofOneofCase {
      None = 0,
      ExpireTimer = 8,
    }
    private ExpireTimerOneofOneofCase expireTimerOneofCase_ = ExpireTimerOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExpireTimerOneofOneofCase ExpireTimerOneofCase {
      get { return expireTimerOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearExpireTimerOneof() {
      expireTimerOneofCase_ = ExpireTimerOneofOneofCase.None;
      expireTimerOneof_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContactDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContactDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Number != other.Number) return false;
      if (Name != other.Name) return false;
      if (!object.Equals(Avatar, other.Avatar)) return false;
      if (Color != other.Color) return false;
      if (!object.Equals(Verified, other.Verified)) return false;
      if (ProfileKey != other.ProfileKey) return false;
      if (Blocked != other.Blocked) return false;
      if (ExpireTimer != other.ExpireTimer) return false;
      if (NumberOneofCase != other.NumberOneofCase) return false;
      if (NameOneofCase != other.NameOneofCase) return false;
      if (AvatarOneofCase != other.AvatarOneofCase) return false;
      if (ColorOneofCase != other.ColorOneofCase) return false;
      if (VerifiedOneofCase != other.VerifiedOneofCase) return false;
      if (ProfileKeyOneofCase != other.ProfileKeyOneofCase) return false;
      if (BlockedOneofCase != other.BlockedOneofCase) return false;
      if (ExpireTimerOneofCase != other.ExpireTimerOneofCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (numberOneofCase_ == NumberOneofOneofCase.Number) hash ^= Number.GetHashCode();
      if (nameOneofCase_ == NameOneofOneofCase.Name) hash ^= Name.GetHashCode();
      if (avatarOneofCase_ == AvatarOneofOneofCase.Avatar) hash ^= Avatar.GetHashCode();
      if (colorOneofCase_ == ColorOneofOneofCase.Color) hash ^= Color.GetHashCode();
      if (verifiedOneofCase_ == VerifiedOneofOneofCase.Verified) hash ^= Verified.GetHashCode();
      if (profileKeyOneofCase_ == ProfileKeyOneofOneofCase.ProfileKey) hash ^= ProfileKey.GetHashCode();
      if (blockedOneofCase_ == BlockedOneofOneofCase.Blocked) hash ^= Blocked.GetHashCode();
      if (expireTimerOneofCase_ == ExpireTimerOneofOneofCase.ExpireTimer) hash ^= ExpireTimer.GetHashCode();
      hash ^= (int) numberOneofCase_;
      hash ^= (int) nameOneofCase_;
      hash ^= (int) avatarOneofCase_;
      hash ^= (int) colorOneofCase_;
      hash ^= (int) verifiedOneofCase_;
      hash ^= (int) profileKeyOneofCase_;
      hash ^= (int) blockedOneofCase_;
      hash ^= (int) expireTimerOneofCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (numberOneofCase_ == NumberOneofOneofCase.Number) {
        output.WriteRawTag(10);
        output.WriteString(Number);
      }
      if (nameOneofCase_ == NameOneofOneofCase.Name) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (avatarOneofCase_ == AvatarOneofOneofCase.Avatar) {
        output.WriteRawTag(26);
        output.WriteMessage(Avatar);
      }
      if (colorOneofCase_ == ColorOneofOneofCase.Color) {
        output.WriteRawTag(34);
        output.WriteString(Color);
      }
      if (verifiedOneofCase_ == VerifiedOneofOneofCase.Verified) {
        output.WriteRawTag(42);
        output.WriteMessage(Verified);
      }
      if (profileKeyOneofCase_ == ProfileKeyOneofOneofCase.ProfileKey) {
        output.WriteRawTag(50);
        output.WriteBytes(ProfileKey);
      }
      if (blockedOneofCase_ == BlockedOneofOneofCase.Blocked) {
        output.WriteRawTag(56);
        output.WriteBool(Blocked);
      }
      if (expireTimerOneofCase_ == ExpireTimerOneofOneofCase.ExpireTimer) {
        output.WriteRawTag(64);
        output.WriteUInt32(ExpireTimer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (numberOneofCase_ == NumberOneofOneofCase.Number) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Number);
      }
      if (nameOneofCase_ == NameOneofOneofCase.Name) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (avatarOneofCase_ == AvatarOneofOneofCase.Avatar) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Avatar);
      }
      if (colorOneofCase_ == ColorOneofOneofCase.Color) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Color);
      }
      if (verifiedOneofCase_ == VerifiedOneofOneofCase.Verified) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Verified);
      }
      if (profileKeyOneofCase_ == ProfileKeyOneofOneofCase.ProfileKey) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ProfileKey);
      }
      if (blockedOneofCase_ == BlockedOneofOneofCase.Blocked) {
        size += 1 + 1;
      }
      if (expireTimerOneofCase_ == ExpireTimerOneofOneofCase.ExpireTimer) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ExpireTimer);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContactDetails other) {
      if (other == null) {
        return;
      }
      switch (other.NumberOneofCase) {
        case NumberOneofOneofCase.Number:
          Number = other.Number;
          break;
      }

      switch (other.NameOneofCase) {
        case NameOneofOneofCase.Name:
          Name = other.Name;
          break;
      }

      switch (other.AvatarOneofCase) {
        case AvatarOneofOneofCase.Avatar:
          if (Avatar == null) {
            Avatar = new global::libsignalservice.push.ContactDetails.Types.Avatar();
          }
          Avatar.MergeFrom(other.Avatar);
          break;
      }

      switch (other.ColorOneofCase) {
        case ColorOneofOneofCase.Color:
          Color = other.Color;
          break;
      }

      switch (other.VerifiedOneofCase) {
        case VerifiedOneofOneofCase.Verified:
          if (Verified == null) {
            Verified = new global::libsignalservice.push.Verified();
          }
          Verified.MergeFrom(other.Verified);
          break;
      }

      switch (other.ProfileKeyOneofCase) {
        case ProfileKeyOneofOneofCase.ProfileKey:
          ProfileKey = other.ProfileKey;
          break;
      }

      switch (other.BlockedOneofCase) {
        case BlockedOneofOneofCase.Blocked:
          Blocked = other.Blocked;
          break;
      }

      switch (other.ExpireTimerOneofCase) {
        case ExpireTimerOneofOneofCase.ExpireTimer:
          ExpireTimer = other.ExpireTimer;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Number = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            global::libsignalservice.push.ContactDetails.Types.Avatar subBuilder = new global::libsignalservice.push.ContactDetails.Types.Avatar();
            if (avatarOneofCase_ == AvatarOneofOneofCase.Avatar) {
              subBuilder.MergeFrom(Avatar);
            }
            input.ReadMessage(subBuilder);
            Avatar = subBuilder;
            break;
          }
          case 34: {
            Color = input.ReadString();
            break;
          }
          case 42: {
            global::libsignalservice.push.Verified subBuilder = new global::libsignalservice.push.Verified();
            if (verifiedOneofCase_ == VerifiedOneofOneofCase.Verified) {
              subBuilder.MergeFrom(Verified);
            }
            input.ReadMessage(subBuilder);
            Verified = subBuilder;
            break;
          }
          case 50: {
            ProfileKey = input.ReadBytes();
            break;
          }
          case 56: {
            Blocked = input.ReadBool();
            break;
          }
          case 64: {
            ExpireTimer = input.ReadUInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ContactDetails message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Avatar : pb::IMessage<Avatar> {
        private static readonly pb::MessageParser<Avatar> _parser = new pb::MessageParser<Avatar>(() => new Avatar());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Avatar> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::libsignalservice.push.ContactDetails.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Avatar() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Avatar(Avatar other) : this() {
          switch (other.ContentTypeOneofCase) {
            case ContentTypeOneofOneofCase.ContentType:
              ContentType = other.ContentType;
              break;
          }

          switch (other.LengthOneofCase) {
            case LengthOneofOneofCase.Length:
              Length = other.Length;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Avatar Clone() {
          return new Avatar(this);
        }

        /// <summary>Field number for the "contentType" field.</summary>
        public const int ContentTypeFieldNumber = 1;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ContentType {
          get { return contentTypeOneofCase_ == ContentTypeOneofOneofCase.ContentType ? (string) contentTypeOneof_ : ""; }
          set {
            contentTypeOneof_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            contentTypeOneofCase_ = ContentTypeOneofOneofCase.ContentType;
          }
        }

        /// <summary>Field number for the "length" field.</summary>
        public const int LengthFieldNumber = 2;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Length {
          get { return lengthOneofCase_ == LengthOneofOneofCase.Length ? (uint) lengthOneof_ : 0; }
          set {
            lengthOneof_ = value;
            lengthOneofCase_ = LengthOneofOneofCase.Length;
          }
        }

        private object contentTypeOneof_;
        /// <summary>Enum of possible cases for the "contentType_oneof" oneof.</summary>
        public enum ContentTypeOneofOneofCase {
          None = 0,
          ContentType = 1,
        }
        private ContentTypeOneofOneofCase contentTypeOneofCase_ = ContentTypeOneofOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ContentTypeOneofOneofCase ContentTypeOneofCase {
          get { return contentTypeOneofCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearContentTypeOneof() {
          contentTypeOneofCase_ = ContentTypeOneofOneofCase.None;
          contentTypeOneof_ = null;
        }

        private object lengthOneof_;
        /// <summary>Enum of possible cases for the "length_oneof" oneof.</summary>
        public enum LengthOneofOneofCase {
          None = 0,
          Length = 2,
        }
        private LengthOneofOneofCase lengthOneofCase_ = LengthOneofOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public LengthOneofOneofCase LengthOneofCase {
          get { return lengthOneofCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearLengthOneof() {
          lengthOneofCase_ = LengthOneofOneofCase.None;
          lengthOneof_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Avatar);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Avatar other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ContentType != other.ContentType) return false;
          if (Length != other.Length) return false;
          if (ContentTypeOneofCase != other.ContentTypeOneofCase) return false;
          if (LengthOneofCase != other.LengthOneofCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (contentTypeOneofCase_ == ContentTypeOneofOneofCase.ContentType) hash ^= ContentType.GetHashCode();
          if (lengthOneofCase_ == LengthOneofOneofCase.Length) hash ^= Length.GetHashCode();
          hash ^= (int) contentTypeOneofCase_;
          hash ^= (int) lengthOneofCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (contentTypeOneofCase_ == ContentTypeOneofOneofCase.ContentType) {
            output.WriteRawTag(10);
            output.WriteString(ContentType);
          }
          if (lengthOneofCase_ == LengthOneofOneofCase.Length) {
            output.WriteRawTag(16);
            output.WriteUInt32(Length);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (contentTypeOneofCase_ == ContentTypeOneofOneofCase.ContentType) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentType);
          }
          if (lengthOneofCase_ == LengthOneofOneofCase.Length) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Length);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Avatar other) {
          if (other == null) {
            return;
          }
          switch (other.ContentTypeOneofCase) {
            case ContentTypeOneofOneofCase.ContentType:
              ContentType = other.ContentType;
              break;
          }

          switch (other.LengthOneofCase) {
            case LengthOneofOneofCase.Length:
              Length = other.Length;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                ContentType = input.ReadString();
                break;
              }
              case 16: {
                Length = input.ReadUInt32();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class GroupDetails : pb::IMessage<GroupDetails> {
    private static readonly pb::MessageParser<GroupDetails> _parser = new pb::MessageParser<GroupDetails>(() => new GroupDetails());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::libsignalservice.push.SignalServiceReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupDetails(GroupDetails other) : this() {
      members_ = other.members_.Clone();
      switch (other.IdOneofCase) {
        case IdOneofOneofCase.Id:
          Id = other.Id;
          break;
      }

      switch (other.NameOneofCase) {
        case NameOneofOneofCase.Name:
          Name = other.Name;
          break;
      }

      switch (other.AvatarOneofCase) {
        case AvatarOneofOneofCase.Avatar:
          Avatar = other.Avatar.Clone();
          break;
      }

      switch (other.ActiveOneofCase) {
        case ActiveOneofOneofCase.Active:
          Active = other.Active;
          break;
      }

      switch (other.ExpireTimerOneofCase) {
        case ExpireTimerOneofOneofCase.ExpireTimer:
          ExpireTimer = other.ExpireTimer;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupDetails Clone() {
      return new GroupDetails(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Id {
      get { return idOneofCase_ == IdOneofOneofCase.Id ? (pb::ByteString) idOneof_ : pb::ByteString.Empty; }
      set {
        idOneof_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        idOneofCase_ = IdOneofOneofCase.Id;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return nameOneofCase_ == NameOneofOneofCase.Name ? (string) nameOneof_ : ""; }
      set {
        nameOneof_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        nameOneofCase_ = NameOneofOneofCase.Name;
      }
    }

    /// <summary>Field number for the "members" field.</summary>
    public const int MembersFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_members_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> members_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Members {
      get { return members_; }
    }

    /// <summary>Field number for the "avatar" field.</summary>
    public const int AvatarFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::libsignalservice.push.GroupDetails.Types.Avatar Avatar {
      get { return avatarOneofCase_ == AvatarOneofOneofCase.Avatar ? (global::libsignalservice.push.GroupDetails.Types.Avatar) avatarOneof_ : null; }
      set {
        avatarOneof_ = value;
        avatarOneofCase_ = value == null ? AvatarOneofOneofCase.None : AvatarOneofOneofCase.Avatar;
      }
    }

    /// <summary>Field number for the "active" field.</summary>
    public const int ActiveFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Active {
      get { return activeOneofCase_ == ActiveOneofOneofCase.Active ? (bool) activeOneof_ : false; }
      set {
        activeOneof_ = value;
        activeOneofCase_ = ActiveOneofOneofCase.Active;
      }
    }

    /// <summary>Field number for the "expireTimer" field.</summary>
    public const int ExpireTimerFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ExpireTimer {
      get { return expireTimerOneofCase_ == ExpireTimerOneofOneofCase.ExpireTimer ? (uint) expireTimerOneof_ : 0; }
      set {
        expireTimerOneof_ = value;
        expireTimerOneofCase_ = ExpireTimerOneofOneofCase.ExpireTimer;
      }
    }

    private object idOneof_;
    /// <summary>Enum of possible cases for the "id_oneof" oneof.</summary>
    public enum IdOneofOneofCase {
      None = 0,
      Id = 1,
    }
    private IdOneofOneofCase idOneofCase_ = IdOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdOneofOneofCase IdOneofCase {
      get { return idOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIdOneof() {
      idOneofCase_ = IdOneofOneofCase.None;
      idOneof_ = null;
    }

    private object nameOneof_;
    /// <summary>Enum of possible cases for the "name_oneof" oneof.</summary>
    public enum NameOneofOneofCase {
      None = 0,
      Name = 2,
    }
    private NameOneofOneofCase nameOneofCase_ = NameOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NameOneofOneofCase NameOneofCase {
      get { return nameOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNameOneof() {
      nameOneofCase_ = NameOneofOneofCase.None;
      nameOneof_ = null;
    }

    private object avatarOneof_;
    /// <summary>Enum of possible cases for the "avatar_oneof" oneof.</summary>
    public enum AvatarOneofOneofCase {
      None = 0,
      Avatar = 4,
    }
    private AvatarOneofOneofCase avatarOneofCase_ = AvatarOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvatarOneofOneofCase AvatarOneofCase {
      get { return avatarOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAvatarOneof() {
      avatarOneofCase_ = AvatarOneofOneofCase.None;
      avatarOneof_ = null;
    }

    private object activeOneof_;
    /// <summary>Enum of possible cases for the "active_oneof" oneof.</summary>
    public enum ActiveOneofOneofCase {
      None = 0,
      Active = 5,
    }
    private ActiveOneofOneofCase activeOneofCase_ = ActiveOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActiveOneofOneofCase ActiveOneofCase {
      get { return activeOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearActiveOneof() {
      activeOneofCase_ = ActiveOneofOneofCase.None;
      activeOneof_ = null;
    }

    private object expireTimerOneof_;
    /// <summary>Enum of possible cases for the "expireTimer_oneof" oneof.</summary>
    public enum ExpireTimerOneofOneofCase {
      None = 0,
      ExpireTimer = 6,
    }
    private ExpireTimerOneofOneofCase expireTimerOneofCase_ = ExpireTimerOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExpireTimerOneofOneofCase ExpireTimerOneofCase {
      get { return expireTimerOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearExpireTimerOneof() {
      expireTimerOneofCase_ = ExpireTimerOneofOneofCase.None;
      expireTimerOneof_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if(!members_.Equals(other.members_)) return false;
      if (!object.Equals(Avatar, other.Avatar)) return false;
      if (Active != other.Active) return false;
      if (ExpireTimer != other.ExpireTimer) return false;
      if (IdOneofCase != other.IdOneofCase) return false;
      if (NameOneofCase != other.NameOneofCase) return false;
      if (AvatarOneofCase != other.AvatarOneofCase) return false;
      if (ActiveOneofCase != other.ActiveOneofCase) return false;
      if (ExpireTimerOneofCase != other.ExpireTimerOneofCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (idOneofCase_ == IdOneofOneofCase.Id) hash ^= Id.GetHashCode();
      if (nameOneofCase_ == NameOneofOneofCase.Name) hash ^= Name.GetHashCode();
      hash ^= members_.GetHashCode();
      if (avatarOneofCase_ == AvatarOneofOneofCase.Avatar) hash ^= Avatar.GetHashCode();
      if (activeOneofCase_ == ActiveOneofOneofCase.Active) hash ^= Active.GetHashCode();
      if (expireTimerOneofCase_ == ExpireTimerOneofOneofCase.ExpireTimer) hash ^= ExpireTimer.GetHashCode();
      hash ^= (int) idOneofCase_;
      hash ^= (int) nameOneofCase_;
      hash ^= (int) avatarOneofCase_;
      hash ^= (int) activeOneofCase_;
      hash ^= (int) expireTimerOneofCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (idOneofCase_ == IdOneofOneofCase.Id) {
        output.WriteRawTag(10);
        output.WriteBytes(Id);
      }
      if (nameOneofCase_ == NameOneofOneofCase.Name) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      members_.WriteTo(output, _repeated_members_codec);
      if (avatarOneofCase_ == AvatarOneofOneofCase.Avatar) {
        output.WriteRawTag(34);
        output.WriteMessage(Avatar);
      }
      if (activeOneofCase_ == ActiveOneofOneofCase.Active) {
        output.WriteRawTag(40);
        output.WriteBool(Active);
      }
      if (expireTimerOneofCase_ == ExpireTimerOneofOneofCase.ExpireTimer) {
        output.WriteRawTag(48);
        output.WriteUInt32(ExpireTimer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (idOneofCase_ == IdOneofOneofCase.Id) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Id);
      }
      if (nameOneofCase_ == NameOneofOneofCase.Name) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += members_.CalculateSize(_repeated_members_codec);
      if (avatarOneofCase_ == AvatarOneofOneofCase.Avatar) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Avatar);
      }
      if (activeOneofCase_ == ActiveOneofOneofCase.Active) {
        size += 1 + 1;
      }
      if (expireTimerOneofCase_ == ExpireTimerOneofOneofCase.ExpireTimer) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ExpireTimer);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupDetails other) {
      if (other == null) {
        return;
      }
      members_.Add(other.members_);
      switch (other.IdOneofCase) {
        case IdOneofOneofCase.Id:
          Id = other.Id;
          break;
      }

      switch (other.NameOneofCase) {
        case NameOneofOneofCase.Name:
          Name = other.Name;
          break;
      }

      switch (other.AvatarOneofCase) {
        case AvatarOneofOneofCase.Avatar:
          if (Avatar == null) {
            Avatar = new global::libsignalservice.push.GroupDetails.Types.Avatar();
          }
          Avatar.MergeFrom(other.Avatar);
          break;
      }

      switch (other.ActiveOneofCase) {
        case ActiveOneofOneofCase.Active:
          Active = other.Active;
          break;
      }

      switch (other.ExpireTimerOneofCase) {
        case ExpireTimerOneofOneofCase.ExpireTimer:
          ExpireTimer = other.ExpireTimer;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadBytes();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            members_.AddEntriesFrom(input, _repeated_members_codec);
            break;
          }
          case 34: {
            global::libsignalservice.push.GroupDetails.Types.Avatar subBuilder = new global::libsignalservice.push.GroupDetails.Types.Avatar();
            if (avatarOneofCase_ == AvatarOneofOneofCase.Avatar) {
              subBuilder.MergeFrom(Avatar);
            }
            input.ReadMessage(subBuilder);
            Avatar = subBuilder;
            break;
          }
          case 40: {
            Active = input.ReadBool();
            break;
          }
          case 48: {
            ExpireTimer = input.ReadUInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the GroupDetails message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Avatar : pb::IMessage<Avatar> {
        private static readonly pb::MessageParser<Avatar> _parser = new pb::MessageParser<Avatar>(() => new Avatar());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Avatar> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::libsignalservice.push.GroupDetails.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Avatar() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Avatar(Avatar other) : this() {
          switch (other.ContentTypeOneofCase) {
            case ContentTypeOneofOneofCase.ContentType:
              ContentType = other.ContentType;
              break;
          }

          switch (other.LengthOneofCase) {
            case LengthOneofOneofCase.Length:
              Length = other.Length;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Avatar Clone() {
          return new Avatar(this);
        }

        /// <summary>Field number for the "contentType" field.</summary>
        public const int ContentTypeFieldNumber = 1;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ContentType {
          get { return contentTypeOneofCase_ == ContentTypeOneofOneofCase.ContentType ? (string) contentTypeOneof_ : ""; }
          set {
            contentTypeOneof_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            contentTypeOneofCase_ = ContentTypeOneofOneofCase.ContentType;
          }
        }

        /// <summary>Field number for the "length" field.</summary>
        public const int LengthFieldNumber = 2;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Length {
          get { return lengthOneofCase_ == LengthOneofOneofCase.Length ? (uint) lengthOneof_ : 0; }
          set {
            lengthOneof_ = value;
            lengthOneofCase_ = LengthOneofOneofCase.Length;
          }
        }

        private object contentTypeOneof_;
        /// <summary>Enum of possible cases for the "contentType_oneof" oneof.</summary>
        public enum ContentTypeOneofOneofCase {
          None = 0,
          ContentType = 1,
        }
        private ContentTypeOneofOneofCase contentTypeOneofCase_ = ContentTypeOneofOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ContentTypeOneofOneofCase ContentTypeOneofCase {
          get { return contentTypeOneofCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearContentTypeOneof() {
          contentTypeOneofCase_ = ContentTypeOneofOneofCase.None;
          contentTypeOneof_ = null;
        }

        private object lengthOneof_;
        /// <summary>Enum of possible cases for the "length_oneof" oneof.</summary>
        public enum LengthOneofOneofCase {
          None = 0,
          Length = 2,
        }
        private LengthOneofOneofCase lengthOneofCase_ = LengthOneofOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public LengthOneofOneofCase LengthOneofCase {
          get { return lengthOneofCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearLengthOneof() {
          lengthOneofCase_ = LengthOneofOneofCase.None;
          lengthOneof_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Avatar);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Avatar other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ContentType != other.ContentType) return false;
          if (Length != other.Length) return false;
          if (ContentTypeOneofCase != other.ContentTypeOneofCase) return false;
          if (LengthOneofCase != other.LengthOneofCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (contentTypeOneofCase_ == ContentTypeOneofOneofCase.ContentType) hash ^= ContentType.GetHashCode();
          if (lengthOneofCase_ == LengthOneofOneofCase.Length) hash ^= Length.GetHashCode();
          hash ^= (int) contentTypeOneofCase_;
          hash ^= (int) lengthOneofCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (contentTypeOneofCase_ == ContentTypeOneofOneofCase.ContentType) {
            output.WriteRawTag(10);
            output.WriteString(ContentType);
          }
          if (lengthOneofCase_ == LengthOneofOneofCase.Length) {
            output.WriteRawTag(16);
            output.WriteUInt32(Length);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (contentTypeOneofCase_ == ContentTypeOneofOneofCase.ContentType) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentType);
          }
          if (lengthOneofCase_ == LengthOneofOneofCase.Length) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Length);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Avatar other) {
          if (other == null) {
            return;
          }
          switch (other.ContentTypeOneofCase) {
            case ContentTypeOneofOneofCase.ContentType:
              ContentType = other.ContentType;
              break;
          }

          switch (other.LengthOneofCase) {
            case LengthOneofOneofCase.Length:
              Length = other.Length;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                ContentType = input.ReadString();
                break;
              }
              case 16: {
                Length = input.ReadUInt32();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
